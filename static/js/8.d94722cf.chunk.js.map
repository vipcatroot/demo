{"version":3,"sources":["views/Vipcat/pageSectionStyles.tsx","views/Vipcat/svgs/RibbonDownMid.tsx","views/Vipcat/svgs/RibbonDownSide.tsx","views/Vipcat/svgs/RibbonUpMid.tsx","views/Vipcat/svgs/RibbonUpSide.tsx","views/Vipcat/svgs/PrizesIcon.tsx","views/Vipcat/svgs/RanksIcon.tsx","views/Vipcat/svgs/RulesIcon.tsx","views/Vipcat/components/CompetitionHeadingText.tsx","views/Vipcat/components/Countdown/Step.tsx","views/Vipcat/components/Countdown/ProgressStepper.tsx","views/Vipcat/components/Countdown/index.tsx","views/Vipcat/pngs/storm.png","views/Vipcat/wigets/Ribbon/RibbonStyles.tsx","views/Vipcat/wigets/CompetitionHeadingText.tsx","views/Vipcat/wigets/Ribbon/index.tsx","views/Vipcat/wigets/RibbonWithImage/index.tsx","views/Vipcat/pngs/all-bunnies.png","views/Vipcat/components/BattleBanner/index.tsx","views/Vipcat/pngs/syrup-nft.png","views/Vipcat/wigets/ClaimModal/index.tsx","views/Vipcat/helpers.ts","views/Vipcat/wigets/Footer/index.tsx","views/Vipcat/wigets/Rules/RulesCard.tsx","views/Vipcat/wigets/Rules/FAQs.tsx","views/Vipcat/wigets/Rules/index.tsx","views/Vipcat/wigets/ProtocolIntro/HowToCard.tsx","views/Vipcat/wigets/ProtocolIntro/index.tsx","views/Vipcat/wigets/Sticker.tsx","views/Vipcat/wigets/IntroHero/HeroHeader.tsx","views/Vipcat/wigets/IntroHero/HeroCardInfo.tsx","views/Vipcat/wigets/IntroHero/HeroCard.tsx","views/Vipcat/wigets/IntroHero/index.tsx","views/Vipcat/wigets/Roadmap/index.tsx","views/Vipcat/index.tsx","utils/bscscan.ts","config/constants/trading-competition/easterPhases.ts","views/Profile/components/ProfileAvatar.tsx","components/FoldableText/index.tsx","../node_modules/lodash/every.js","config/constants/trading-competition/easter.ts","../node_modules/lodash/_arrayEvery.js","../node_modules/lodash/_baseEvery.js","components/Timer/index.tsx","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx"],"names":["DARKBG","DARKFILL","MIDBLUEBG","MIDBLUEBG_DARK","MIDBLUEFILL","MIDBLUEFILL_DARK","RibbonDownMid","props","viewBox","width","height","fill","y","RibbonDownSide","fillRule","clipRule","d","RibbonUpMid","RibbonUpSide","Prizes","stroke","strokeWidth","cx","cy","rx","ry","transform","Ranks","strokeLinecap","filter","id","x","filterUnits","colorInterpolationFilters","floodOpacity","result","in","type","values","mode","in2","maskUnits","mask","H1SizeStyles","theme","mediaQueries","sm","H2SizeStyles","sharedStyles","background","$fill","sharedVisiblyHiddenStyles","Heading1Text","styled","Heading","Heading2Text","sharedFlexStyles","ExpiredWrapper","Flex","colors","textSubtle","ActiveWrapper","FutureWrapper","textDisabled","StyledText","Text","Step","stepText","index","activeStepIndex","isActive","isFuture","color","Spacer","div","isPastSpacer","ProgressStepper","steps","t","useTranslation","map","step","text","toUpperCase","Fragment","length","_uniqueId","Wrapper","xl","PocketWatchWrapper","StyledHeading","Countdown","currentPhase","hasCompetitionEnded","useTheme","secondsUntilNextEvent","ends","Date","now","getTimePeriods","minutes","hours","days","flexDirection","justifyContent","mb","alignItems","gradients","gold","Timer","timerStage","state","LIVE","HeadingTextComponent","children","BodyTextComponent","bold","fontSize","mr","_","CompetitionSteps","MidRibbonStyles","RightSideRibbonStyles","LeftSideRibbonStyles","RibbonDownMidExpanding","RibbonUpMidExpanding","RibbonDownRightSide","RibbonUpRightSide","RibbonDownLeftSide","RibbonUpLeftSide","VisuallyHiddenHeading2Text","ribbonDirection","TextWrapper","LaurelWrapper","dir","Ribbon","RibbonDown","preserveAspectRatio","p","RibbonUp","marginBottom","AbsoluteImageWrapper","RibbonWrapper","RibbonWithImage","imageComponent","isCardHeader","TextStyles","md","ImageWrapper","StyledHeading1Text","StyledHeading2Text","BattleBanner","src","AllBunniesImage","alt","responsive","scale","mt","radii","default","ClaimModal","onDismiss","onClaimSuccess","userTradingInformation","useState","isConfirming","setIsConfirming","tradingCompetitionContract","useTradingCompetitionContract","account","useWeb3React","useToast","toastSuccess","toastError","userRewardGroup","userCakeRewards","userPointReward","canClaimNFT","cakeReward","userCakeReward","cakeAsBigNumber","BigNumber","cakeBalance","getBalanceNumber","cakePriceBusd","usePriceCakeBusd","dollarValueOfCakeReward","gt","toNumber","useCompetitionCakeRewards","teamRank","userGroup","easterPrizes","prizeGroup","group","achievements","getRewardGroupAchievements","champion","teamPlayer","title","maxWidth","ml","toFixed","NftBunnies","onClick","methods","claimReward","send","from","on","a","error","message","disabled","isLoading","endIcon","spin","textAlign","StyledCard","Card","warning","StyledFlex","StyledHeadingText","Button","Footer","isCompetitionLive","finishedAndPrizesClaimed","profile","userCanClaimPrizes","finishedAndNothingToClaim","onRegisterSuccess","useAuth","login","logout","useWalletModal","onPresentConnectModal","useModal","hasRegistered","registeredAndNotStarted","hasUserClaimed","Boolean","OVER","as","external","href","RulesCard","StyledCardbody","CardBody","FAQ","FoldableText","StyledCardWrapper","Rules","FAQs","Inner","NumberWrapper","TitleWrapper","ChildrenWrapper","HowToJoin","number","Link","HowToCard","Sticker","backgroundColor","invertedContrast","borderColor","circle","card","boxShadow","ProfileWrapper","StyledNoProfileAvatarIcon","NoProfileAvatarIcon","HeroHeader","variant","ProfileAvatar","CardUserInfo","userLeaderboardInformation","global","team","volume","next_rank","StyledCardFooter","CardFooter","cardHeaderBackground","StyledButton","HeroCard","onPresentClaimModal","isClaimButtonDisabled","HeroCardInfo","CLAIM","mx","YourScore","Container","bubblegum","RoadMap","useProfile","hasProfile","stepsValidationStatus","getStatusProp","arePreviousValid","every","slice","renderCardBody","small","status","CompetitionPage","BannerFlex","PrizesSection","PageSection","lg","BottomBunnyWrapper","Box","TradingCompetition","profileApiUrl","process","isDark","CompetitionPhases","setCurrentPhase","registrationSuccessful","setRegistrationSuccessful","claimSuccessful","setClaimSuccessful","setUserTradingInformation","setGlobalLeaderboardInformation","setUserLeaderboardInformation","teamId","leaderboardData","setTeam1LeaderboardInformation","setTeam2LeaderboardInformation","setTeam3LeaderboardInformation","FINISHED","useEffect","fetchCompetitionInfoContract","currentStatus","call","competitionStatus","SmartContractPhases","claimInformation","user","userObject","fetchUserContract","fetchUserTradingStats","fetch","res","json","data","leaderboard","fetchGlobalLeaderboardStats","fetchTeamsLeaderboardStats","callBack","console","prevState","svgFill","dividerComponent","PrizesIcon","IntroHero","RanksIcon","ProtocolIntro","RulesIcon","hasCurvedDivider","my","curvePosition","StormBunny","getBscScanAddressUrl","address","BASE_BSC_SCAN_URL","getBscScanTransactionUrl","transactionHash","getBscScanBlockNumberUrl","block","getBscScanBlockCountdownUrl","REGISTRATION","0","1","2","3","4","TeamAvatar","img","AvatarWrapper","bg","AvatarInactive","nft","images","name","StyledExpandableLabelWrapper","StyledChildrenFlex","isExpanded","inputSecondary","setIsExpanded","pb","fontWeight","expanded","arrayEvery","require","baseEvery","baseIteratee","isArray","isIterateeCall","module","exports","collection","predicate","guard","func","undefined","Tiers","rank","tier","GOLD","cakePrizeInUsd","trophy","hasNft","SILVER","BRONZE","PURPLE","TEAL","array","baseEach","value","StyledTimerFlex","showTooltip","DefaultHeadingTextComponent","DefaultBodyTextComponent","TooltipContent","blockNumber","num","useTooltip","placement","targetRef","tooltip","tooltipVisible","shouldDisplayTooltip","position","ref","CurvedSvg","dy","stdDeviation","CurvedSvgTop","CurvedSvgBottom","ComponentWrapper","CurvedDivider","BackgroundColor","hasZeroMargin"],"mappings":"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","file":"static/js/8.d94722cf.chunk.js","sourcesContent":["export const DARKBG = 'radial-gradient(329.58% 50% at 50% 50%, #3B2864 0%, #191326 100%)'\nexport const DARKFILL = '#191326'\nexport const MIDBLUEBG = 'linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%)'\nexport const MIDBLUEBG_DARK = 'linear-gradient(180deg, #434575 0%, #66578D 100%)'\nexport const MIDBLUEFILL = '#9A9FD0'\nexport const MIDBLUEFILL_DARK = '#66578D'\nexport const LIGHTBLUEBG = 'linear-gradient(139.73deg, #E6FDFF 0%, #F3EFFF 100%)'\nexport const LIGHTBLUEBG_DARK = 'linear-gradient(139.73deg, #313D5C 0%, #3D2A54 100%)'\nexport const LIGHTBLUEFILL = '#F3EFFF'\nexport const LIGHTBLUEFILL_DARK = '#3D2A54'\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst RibbonDownMid: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 142 48\" {...props}>\n      <rect width=\"142\" height=\"46\" fill=\"#7645D9\" />\n      <rect y=\"46\" width=\"142\" height=\"2\" fill=\"#3B2070\" />\n    </Svg>\n  )\n}\n\nexport default RibbonDownMid\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst RibbonDownSide: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 32 64\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11.5013 64C4.65815 64 -0.670819 58.0604 0.0686475 51.2573C0.423944 47.9886 2.12624 45.1636 4.58664 43.3108C5.51702 42.6101 6.24525 41.6322 6.40046 40.4779C6.56956 39.2203 6.02972 37.9944 5.19007 37.043C3.15098 34.7325 2.04171 31.6093 2.38086 28.2932C2.97882 22.4464 7.90322 18 13.7805 18H18.4336V64H11.5013Z\"\n        fill=\"#3B2070\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11.5013 62C4.65815 62 -0.670819 56.0604 0.0686475 49.2573C0.423944 45.9886 2.12624 43.1636 4.58664 41.3108C5.51702 40.6101 6.24525 39.6322 6.40046 38.4779C6.56956 37.2203 6.02972 35.9944 5.19007 35.043C3.15098 32.7325 2.04171 29.6093 2.38086 26.2932C2.97882 20.4464 7.90322 16 13.7805 16H28V62H11.5013Z\"\n        fill=\"#5E38AA\"\n      />\n      <path d=\"M16.0151 17.7998C14.9409 8.31101 22.4506 0 32 0V46L20 53L16.0151 17.7998Z\" fill=\"#7645D9\" />\n      <path\n        d=\"M25 46C22.2386 46 20 48.2386 20 51C20 53.7614 22.2386 56 25 56H26C27 56 30 57 30 59V56C30 49.5 28 46 28 46H25Z\"\n        fill=\"#4E2F8C\"\n      />\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M27 46H20V53C20 49.134 23.134 46 27 46Z\" fill=\"#7645D9\" />\n      <path\n        d=\"M27 46C23.134 46 20 49.134 20 53C20 55.7614 22.2386 58 25 58H27C27.5523 58 28 58.4477 28 59C28 60.6569 26.6569 62 25 62H18V64H25C27.7614 64 30 61.7614 30 59C30 57.3431 28.6569 56 27 56H25C23.3431 56 22 54.6569 22 53C22 50.2386 24.2386 48 27 48H32V46H27Z\"\n        fill=\"#3B2070\"\n      />\n    </Svg>\n  )\n}\n\nexport default RibbonDownSide\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst RibbonUpMid: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 142 48\" {...props}>\n      <rect width=\"142\" height=\"46\" fill=\"#7645D9\" />\n      <rect width=\"142\" height=\"2\" fill=\"#3B2070\" />\n    </Svg>\n  )\n}\n\nexport default RibbonUpMid\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst RibbonUpSide: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 32 64\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11.5013 0C4.65815 0 -0.670819 5.93959 0.0686475 12.7427C0.423944 16.0114 2.12624 18.8364 4.58664 20.6892C5.51702 21.3899 6.24525 22.3678 6.40046 23.5221C6.56956 24.7797 6.02972 26.0056 5.19007 26.957C3.15098 29.2675 2.04171 32.3907 2.38086 35.7068C2.97882 41.5536 7.90322 46 13.7805 46H18.4336V0H11.5013Z\"\n        fill=\"#3B2070\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11.5013 2C4.65815 2 -0.670819 7.93959 0.0686475 14.7427C0.423944 18.0114 2.12624 20.8364 4.58664 22.6892C5.51702 23.3899 6.24525 24.3678 6.40046 25.5221C6.56956 26.7797 6.02972 28.0056 5.19007 28.957C3.15098 31.2675 2.04171 34.3907 2.38086 37.7068C2.97882 43.5536 7.90322 48 13.7805 48H28V2H11.5013Z\"\n        fill=\"#5E38AA\"\n      />\n      <path d=\"M16.0151 46.2002C14.9409 55.689 22.4506 64 32 64V18L20 11L16.0151 46.2002Z\" fill=\"#7645D9\" />\n      <path\n        d=\"M25 18C22.2386 18 20 15.7614 20 13C20 10.2386 22.2386 8 25 8H26C27 8 30 7 30 5V8C30 14.5 28 18 28 18H25Z\"\n        fill=\"#4E2F8C\"\n      />\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M27 18H20V11C20 14.866 23.134 18 27 18Z\" fill=\"#7645D9\" />\n      <path\n        d=\"M27 18C23.134 18 20 14.866 20 11C20 8.23858 22.2386 6 25 6H27C27.5523 6 28 5.55229 28 5C28 3.34315 26.6569 2 25 2H18V0H25C27.7614 0 30 2.23858 30 5C30 6.65685 28.6569 8 27 8H25C23.3431 8 22 9.34315 22 11C22 13.7614 24.2386 16 27 16H32V18H27Z\"\n        fill=\"#3B2070\"\n      />\n    </Svg>\n  )\n}\n\nexport default RibbonUpSide\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Prizes: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 175 88\" {...props}>\n      <path\n        d=\"M138.637 25.0412C138.483 22.1916 141.157 20.0227 143.914 20.7614C146.152 21.3612 147.481 23.6623 146.881 25.901L145.79 29.9737C146.515 30.1311 147.229 30.3253 147.931 30.5544L149.024 26.4751C149.623 24.2364 151.925 22.9079 154.163 23.5078C156.92 24.2464 158.151 27.4616 156.593 29.8524L154.072 33.7209C157.27 36.0948 159.748 39.3533 160.97 43.2037C162.041 46.578 162.004 49.9578 161.058 53.0226C160.968 53.8327 160.817 54.644 160.601 55.4518C160.087 57.3696 159.245 59.121 158.142 60.6719L163.174 69.1556C163.634 69.9316 163.001 70.8794 162.095 70.7694L156.871 70.1348C156.384 70.0757 155.919 70.337 155.728 70.7772L153.68 75.4965C153.325 76.3148 152.165 76.375 151.704 75.599L147.08 67.8027C143.883 68.5165 140.402 68.4826 136.929 67.5519C133.481 66.6281 130.468 64.9353 128.065 62.7425L120.204 67.1586C119.418 67.6005 118.443 66.9682 118.545 66.082L119.131 60.971C119.185 60.4943 118.913 60.0354 118.462 59.843L113.621 57.7808C112.781 57.4232 112.706 56.2855 113.493 55.8436L122.004 51.0621C121.814 49.1436 121.957 47.1801 122.478 45.2369C122.594 44.8036 122.727 44.3788 122.876 43.9629C123.125 42.3671 123.613 40.8307 124.315 39.3936L124.313 39.3912C125.253 37.4561 126.561 35.7521 128.141 34.3272C129.971 32.6704 132.209 31.3535 134.772 30.5104C135.271 30.3451 135.78 30.1988 136.296 30.0722L136.298 30.0746C136.434 30.0414 136.571 30.0095 136.709 29.9789C137.433 29.8182 138.158 29.6977 138.884 29.6157L138.637 25.0412Z\"\n        stroke=\"#652F05\"\n        strokeWidth=\"3\"\n      />\n      <path\n        d=\"M156.655 29.8692C158.213 27.4783 156.982 24.2631 154.225 23.5245C151.987 22.9247 149.686 24.2532 149.086 26.4919L147.084 33.9625C146.66 35.5444 147.599 37.1703 149.181 37.5941C150.42 37.9261 151.732 37.4237 152.432 36.3489L156.655 29.8692Z\"\n        fill=\"#F6AF5B\"\n      />\n      <path\n        d=\"M138.699 25.058C138.545 22.2084 141.219 20.0396 143.976 20.7782C146.214 21.3781 147.543 23.6791 146.943 25.9178L144.941 33.3885C144.517 34.9703 142.892 35.909 141.31 35.4852C140.071 35.1531 139.186 34.0619 139.116 32.781L138.699 25.058Z\"\n        fill=\"#F6AF5B\"\n      />\n      <path\n        d=\"M151.766 75.6155L139.039 54.1587C138.73 53.638 138.908 52.9754 139.436 52.6789L148.994 47.3094C149.522 47.0129 150.2 47.1946 150.509 47.7154L163.236 69.1722C163.696 69.9481 163.062 70.8959 162.157 70.7859L156.933 70.1514C156.446 70.0922 155.981 70.3535 155.79 70.7937L153.742 75.513C153.387 76.3313 152.227 76.3915 151.766 75.6155Z\"\n        fill=\"#AE5714\"\n      />\n      <path\n        d=\"M120.267 67.175L142.017 54.9564C142.545 54.6598 142.722 53.9973 142.413 53.4765L136.821 44.0474C136.512 43.5266 135.833 43.3449 135.305 43.6414L113.555 55.86C112.769 56.3019 112.844 57.4397 113.683 57.7972L118.524 59.8594C118.975 60.0518 119.248 60.5107 119.193 60.9874L118.607 66.0984C118.505 66.9846 119.48 67.6169 120.267 67.175Z\"\n        fill=\"#AE5714\"\n      />\n      <ellipse\n        cx=\"141.601\"\n        cy=\"50.3614\"\n        rx=\"19.7337\"\n        ry=\"17.8146\"\n        transform=\"rotate(15 141.601 50.3614)\"\n        fill=\"#E17A2F\"\n      />\n      <ellipse\n        rx=\"19.1997\"\n        ry=\"18.2425\"\n        transform=\"matrix(0.976209 -0.216833 0.302485 0.953154 142.289 47.384)\"\n        fill=\"#F6AF5B\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M136.358 30.0894L159.52 56.6194C158.88 57.6855 158.121 58.6694 157.264 59.5618L132.67 31.3905C133.837 30.8414 135.073 30.4044 136.358 30.0894ZM128.367 34.1983L153.245 62.683C151.271 63.811 149.058 64.5977 146.714 64.9874L124.375 39.4084C125.348 37.4067 126.713 35.6523 128.367 34.1983Z\"\n        fill=\"#F7D29B\"\n      />\n      <ellipse\n        rx=\"14.6705\"\n        ry=\"13.9392\"\n        transform=\"matrix(0.976209 -0.216833 0.302485 0.953154 142.289 47.3834)\"\n        fill=\"#E7974D\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M156.931 45.7446C156.833 45.2429 156.704 44.7396 156.544 44.2363C154.192 36.8638 145.904 32.2962 138.032 34.0342C130.159 35.7723 125.683 43.1578 128.034 50.5303C128.191 51.0212 128.374 51.4996 128.581 51.9646C127.244 45.1183 131.63 38.5962 138.966 36.9768C146.314 35.3544 154.024 39.2261 156.931 45.7446Z\"\n        fill=\"#E17A2F\"\n      />\n      <path\n        d=\"M136.093 48.8468C134.099 48.4066 133.804 46.621 134.246 44.5963C134.688 42.5716 135.701 41.0746 137.695 41.5147C139.689 41.9548 139.984 43.7405 139.542 45.7652C139.1 47.7898 138.087 49.2869 136.093 48.8468Z\"\n        fill=\"#AE5714\"\n      />\n      <path\n        d=\"M147.168 51.815C145.174 51.3749 144.879 49.5893 145.321 47.5646C145.764 45.5399 146.776 44.0428 148.77 44.483C150.764 44.9231 151.059 46.7087 150.617 48.7334C150.175 50.7581 149.162 52.2552 147.168 51.815Z\"\n        fill=\"#AE5714\"\n      />\n      <path\n        d=\"M18.1655 29.8861C16.6074 27.4952 17.8386 24.28 20.5952 23.5414C22.8338 22.9415 25.1349 24.2701 25.7348 26.5087L26.8261 30.5814C27.5328 30.3552 28.2488 30.166 28.9706 30.0138L27.8775 25.9346C27.2777 23.6959 28.6062 21.3948 30.8449 20.795C33.6014 20.0564 36.2753 22.2252 36.1214 25.0748L35.8724 29.6854C39.8288 30.1424 43.6043 31.7252 46.5877 34.4488C49.2022 36.8356 50.8606 39.7808 51.573 42.9084C51.9008 43.6546 52.1754 44.4329 52.3918 45.2407C52.9057 47.1585 53.0524 49.0961 52.8727 50.9907L61.4725 55.8218C62.2591 56.2637 62.184 57.4014 61.3447 57.759L56.5037 59.8212C56.0522 60.0135 55.78 60.4724 55.8347 60.9491L56.4209 66.0601C56.5225 66.9463 55.5477 67.5786 54.7611 67.1367L46.8581 62.6971C44.4463 64.9138 41.4146 66.625 37.9413 67.5557C34.4937 68.4795 31.0384 68.5197 27.8608 67.8222L23.261 75.5771C22.8008 76.3531 21.6404 76.293 21.2853 75.4747L19.2375 70.7553C19.0465 70.3151 18.5813 70.0538 18.0941 70.113L12.8706 70.7476C11.9649 70.8576 11.331 69.9098 11.7913 69.1338L16.7717 60.7371C15.6472 59.1711 14.7899 57.3988 14.2692 55.4556C14.1531 55.0223 14.0558 54.588 13.9767 54.1534C13.3947 52.6468 13.049 51.0723 12.9382 49.4767L12.9352 49.4757C12.7824 47.3295 13.0627 45.2001 13.7188 43.1759C14.4755 40.8259 15.7549 38.5667 17.553 36.555C17.9027 36.1622 18.2699 35.7813 18.6538 35.4135L18.6567 35.4145C18.758 35.3177 18.8607 35.2216 18.9647 35.1263C19.5109 34.6254 20.0793 34.158 20.6668 33.7242L18.1655 29.8861Z\"\n        stroke=\"#4C4E54\"\n        strokeWidth=\"3\"\n      />\n      <path\n        d=\"M36.1836 25.058C36.3375 22.2084 33.6636 20.0396 30.9071 20.7782C28.6684 21.3781 27.3399 23.6791 27.9397 25.9178L29.9415 33.3885C30.3653 34.9703 31.9912 35.909 33.573 35.4852C34.8122 35.1531 35.6973 34.0619 35.7664 32.781L36.1836 25.058Z\"\n        fill=\"#C0C4C6\"\n      />\n      <path\n        d=\"M18.2277 29.8692C16.6696 27.4783 17.9009 24.2631 20.6574 23.5245C22.8961 22.9247 25.1971 24.2532 25.797 26.4919L27.7987 33.9626C28.2226 35.5444 27.2839 37.1703 25.7021 37.5941C24.4629 37.9261 23.1508 37.4237 22.4504 36.3489L18.2277 29.8692Z\"\n        fill=\"#C0C4C6\"\n      />\n      <path\n        d=\"M54.8233 67.1198L33.073 54.9012C32.5451 54.6047 32.3676 53.9421 32.6765 53.4213L38.2693 43.9922C38.5782 43.4714 39.2565 43.2897 39.7844 43.5862L61.5347 55.8049C62.3213 56.2467 62.2462 57.3845 61.4068 57.7421L56.5659 59.8043C56.1144 59.9966 55.8422 60.4555 55.8969 60.9322L56.483 66.0432C56.5847 66.9294 55.6099 67.5617 54.8233 67.1198Z\"\n        fill=\"#7D7D7D\"\n      />\n      <path\n        d=\"M23.3231 75.5603L36.0501 54.1036C36.359 53.5828 36.1814 52.9202 35.6536 52.6237L26.0954 47.2542C25.5676 46.9577 24.8892 47.1395 24.5804 47.6602L11.8534 69.117C11.3931 69.893 12.027 70.8408 12.9327 70.7307L18.1562 70.0962C18.6434 70.037 19.1086 70.2983 19.2996 70.7385L21.3474 75.4579C21.7025 76.2761 22.8629 76.3363 23.3231 75.5603Z\"\n        fill=\"#7D7D7D\"\n      />\n      <ellipse\n        cx=\"33.3928\"\n        cy=\"50.3315\"\n        rx=\"19.7337\"\n        ry=\"17.8146\"\n        transform=\"rotate(-15 33.3928 50.3315)\"\n        fill=\"#969696\"\n      />\n      <ellipse\n        rx=\"19.1997\"\n        ry=\"18.2425\"\n        transform=\"matrix(0.737005 -0.675888 0.738537 0.674213 32.4995 47.4094)\"\n        fill=\"#C0C4C6\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M18.716 35.397L52.0401 46.7918C52.0182 48.0354 51.8535 49.2666 51.5575 50.4679L16.1721 38.3682C16.9087 37.3088 17.7607 36.3123 18.716 35.397ZM13.8503 42.9508L49.637 55.1806C48.4919 57.1442 46.9685 58.9321 45.1337 60.4414L12.9977 49.4592C12.8396 47.2391 13.1449 45.037 13.8503 42.9508Z\"\n        fill=\"#D8D8D8\"\n      />\n      <ellipse\n        rx=\"14.6705\"\n        ry=\"13.9392\"\n        transform=\"matrix(0.737005 -0.675888 0.738537 0.674213 32.4994 47.4091)\"\n        fill=\"#B2B2B2\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M44.3599 38.6689C44.0243 38.2836 43.6612 37.912 43.2706 37.5565C37.5481 32.3473 28.0866 32.5357 22.1378 37.9772C16.1889 43.4187 16.0054 52.0528 21.7278 57.262C22.1089 57.6088 22.5065 57.9318 22.9186 58.2308C18.3374 52.9703 18.875 45.1286 24.4179 40.0586C29.9706 34.9794 38.5837 34.477 44.3599 38.6689Z\"\n        fill=\"#969696\"\n      />\n      <path\n        d=\"M27.8654 51.7741C25.9183 52.3901 24.7699 50.9912 24.1406 49.0166C23.5113 47.042 23.6395 45.2394 25.5865 44.6235C27.5336 44.0076 28.682 45.4064 29.3113 47.381C29.9406 49.3556 29.8124 51.1582 27.8654 51.7741Z\"\n        fill=\"#7D7D7D\"\n      />\n      <path\n        d=\"M38.9406 48.8073C36.9935 49.4232 35.8451 48.0244 35.2158 46.0498C34.5865 44.0752 34.7146 42.2726 36.6617 41.6567C38.6088 41.0408 39.7572 42.4396 40.3865 44.4142C41.0158 46.3888 40.8876 48.1914 38.9406 48.8073Z\"\n        fill=\"#7D7D7D\"\n      />\n      <path\n        d=\"M71.8819 11.3215C70.4503 6.93951 73.7157 2.4375 78.3256 2.4375C82.0695 2.4375 85.1046 5.47253 85.1046 9.21642L85.1046 16.0275C86.3018 15.97 87.4983 15.9741 88.688 16.0384V9.21642C88.688 5.47253 91.7231 2.4375 95.467 2.4375C100.077 2.4375 103.342 6.93952 101.911 11.3215L99.5945 18.4116C105.577 20.7788 110.806 24.827 114.323 30.3241C117.404 35.1413 118.76 40.4303 118.564 45.6082C118.764 46.9096 118.867 48.2388 118.867 49.5898C118.867 52.797 118.286 55.8817 117.213 58.7628L128.612 69.8964C129.655 70.9148 129.062 72.6587 127.603 72.8657L119.187 74.0594C118.402 74.1708 117.785 74.773 117.671 75.5398L116.449 83.7597C116.237 85.185 114.452 85.764 113.409 84.7456L102.934 74.5142C98.2441 76.9646 92.7982 78.3671 86.9895 78.3671C81.2237 78.3671 75.8155 76.9853 71.1491 74.5684L60.7295 84.7456C59.6869 85.764 57.9015 85.185 57.6896 83.7597L56.4674 75.5398C56.3534 74.773 55.7368 74.1708 54.9518 74.0594L46.5361 72.8657C45.0769 72.6587 44.4841 70.9148 45.5267 69.8964L56.8085 58.877C55.7086 55.9634 55.1119 52.8395 55.1119 49.5898C55.1119 48.8651 55.1416 48.1468 55.1999 47.4356C54.9217 44.8414 55.0405 42.2401 55.5348 39.7042L55.5306 39.7014C56.1895 36.2886 57.5171 33.0832 59.3872 30.1991C61.5503 26.8487 64.4913 23.8585 68.1379 21.4713C68.8478 21.0046 69.58 20.5638 70.3328 20.1504L70.3369 20.1532C70.5355 20.0445 70.7358 19.9375 70.9379 19.8322C71.9996 19.279 73.082 18.7873 74.18 18.3561L71.8819 11.3215Z\"\n        stroke=\"#8B5403\"\n        strokeWidth=\"3\"\n      />\n      <path\n        d=\"M102.015 11.3215C103.446 6.93952 100.181 2.4375 95.5709 2.4375C91.827 2.4375 88.792 5.47253 88.792 9.21642L88.792 21.7101C88.792 24.3555 90.9365 26.5 93.5819 26.5C95.6541 26.5 97.4914 25.1674 98.1349 23.1976L102.015 11.3215Z\"\n        fill=\"#FFD800\"\n      />\n      <path\n        d=\"M71.9858 11.3215C70.5543 6.93951 73.8197 2.4375 78.4296 2.4375C82.1735 2.4375 85.2085 5.47253 85.2085 9.21642L85.2085 21.7101C85.2085 24.3555 83.064 26.5 80.4186 26.5C78.3464 26.5 76.5091 25.1674 75.8656 23.1976L71.9858 11.3215Z\"\n        fill=\"#FFD800\"\n      />\n      <path\n        d=\"M113.513 84.7454L84.6834 56.5866C83.9837 55.9031 83.9837 54.7951 84.6834 54.1117L97.3524 41.7373C98.0521 41.0539 99.1865 41.0539 99.8862 41.7373L128.716 69.8962C129.758 70.9145 129.165 72.6584 127.706 72.8654L119.29 74.0592C118.505 74.1706 117.889 74.7728 117.775 75.5395L116.553 83.7595C116.341 85.1847 114.555 85.7638 113.513 84.7454Z\"\n        fill=\"#FFAF00\"\n      />\n      <path\n        d=\"M60.8335 84.7454L89.6628 56.5866C90.3625 55.9031 90.3625 54.7951 89.6628 54.1117L76.9938 41.7373C76.2941 41.0539 75.1597 41.0539 74.46 41.7373L45.6307 69.8962C44.5881 70.9145 45.1809 72.6584 46.6401 72.8654L55.0558 74.0592C55.8407 74.1706 56.4573 74.7728 56.5713 75.5395L57.7935 83.7595C58.0054 85.1847 59.7909 85.7638 60.8335 84.7454Z\"\n        fill=\"#FFAF00\"\n      />\n      <ellipse cx=\"87.0934\" cy=\"49.5899\" rx=\"31.8775\" ry=\"28.7774\" fill=\"#EB8C00\" />\n      <ellipse\n        rx=\"31.0149\"\n        ry=\"29.4687\"\n        transform=\"matrix(0.886824 -0.462106 0.538873 0.842387 86.9218 44.6564)\"\n        fill=\"#FFD800\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M70.4369 20.1504L117.669 51.8625C117.115 53.7938 116.344 55.6461 115.38 57.3968L65.2252 23.7229C66.8176 22.3778 68.5637 21.1791 70.4369 20.1504ZM59.6863 29.9025L110.413 63.9474C107.805 66.5325 104.681 68.6855 101.187 70.2733L55.6348 39.7013C56.3163 36.1712 57.7134 32.8628 59.6863 29.9025Z\"\n        fill=\"#FEED8D\"\n      />\n      <ellipse\n        rx=\"23.6986\"\n        ry=\"22.5171\"\n        transform=\"matrix(0.886825 -0.462106 0.538873 0.842387 86.9218 44.656)\"\n        fill=\"#FFC700\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M109.082 35.9763C108.72 35.235 108.309 34.5038 107.848 33.7859C101.097 23.2654 86.2551 19.6035 74.6978 25.607C63.1405 31.6104 59.2442 45.0058 65.9953 55.5263C66.4451 56.2271 66.9307 56.8975 67.4488 57.5366C62.4992 47.4129 66.6167 35.4015 77.3854 29.8076C88.1728 24.2041 101.822 27.0211 109.082 35.9763Z\"\n        fill=\"#FFAF00\"\n      />\n      <path\n        d=\"M77.866 49.5295C74.5704 49.6765 73.3633 47.0137 73.2069 43.6696C73.0506 40.3254 74.0042 37.5663 77.2998 37.4193C80.5954 37.2723 81.8025 39.9351 81.9589 43.2792C82.1152 46.6234 81.1616 49.3825 77.866 49.5295Z\"\n        fill=\"#EB8C00\"\n      />\n      <path\n        d=\"M96.3875 49.531C93.0919 49.678 91.8848 47.0152 91.7284 43.671C91.5721 40.3269 92.5257 37.5677 95.8213 37.4208C99.1169 37.2738 100.324 39.9365 100.48 43.2807C100.637 46.6248 99.6831 49.384 96.3875 49.531Z\"\n        fill=\"#EB8C00\"\n      />\n    </Svg>\n  )\n}\n\nexport default Prizes\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Ranks: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 166 88\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M133.267 34.1352C133.13 31.0654 136.015 28.7471 138.983 29.5424C141.408 30.1921 142.847 32.6841 142.197 35.1085L140.365 41.9446C140.815 42.0644 141.282 42.1897 141.769 42.32C142.155 42.4234 142.529 42.5236 142.891 42.621L144.723 35.7854C145.372 33.361 147.864 31.9223 150.289 32.5719C153.257 33.3672 154.597 36.8177 152.943 39.4075L149.6 44.643C151.046 45.2073 152.075 45.7991 152.832 46.5671L152.836 46.5706C154.25 48.007 155.129 49.8614 155.362 51.8275L158.161 52.5773L158.163 52.5894C158.393 52.6564 158.607 52.722 158.804 52.7872C159.411 52.9883 160.045 53.2424 160.61 53.6587C162.64 55.1548 163.507 57.7669 162.776 60.1799C162.573 60.8514 162.217 61.4344 161.85 61.959C161.491 62.4734 161.012 63.0805 160.451 63.7926L160.258 64.0376C159.114 65.4887 158.327 66.4877 157.39 67.2501C155.326 68.93 152.718 69.7962 150.059 69.6852C149.465 69.6604 148.866 69.568 148.197 69.4234L148.176 69.4511C147.877 69.3728 147.563 69.2885 147.23 69.1991L146.403 68.9775C146.225 68.9301 146.041 68.8808 145.851 68.8298L145.491 68.7333C145.474 68.7459 145.457 68.7584 145.44 68.7708C145.416 68.7876 145.393 68.8043 145.369 68.8208C144.025 69.7644 142.448 70.3223 140.81 70.4344C139.896 70.4969 138.948 70.3627 137.626 70.055L136.566 72.8085L137.937 73.1759C140.146 73.7677 141.456 76.0378 140.865 78.2464C140.667 78.9826 139.911 79.4195 139.174 79.2222L125.564 75.5753C124.828 75.378 124.391 74.6213 124.588 73.8851C125.18 71.6765 127.45 70.3658 129.659 70.9576L131.03 71.3251L131.489 68.4105C130.19 68.0159 129.302 67.6583 128.542 67.1473C127.179 66.2309 126.092 64.9593 125.4 63.4701C125.379 63.4248 125.358 63.3793 125.338 63.3334L123.602 62.868L123.6 62.8678L123.597 62.8669C123.265 62.7779 122.951 62.6939 122.654 62.6126L122.649 62.5777C121.998 62.3688 121.433 62.1492 120.906 61.8737C118.548 60.6402 116.723 58.5862 115.775 56.0993C115.345 54.9706 115.163 53.7118 114.898 51.8834L114.853 51.5748C114.723 50.6773 114.612 49.9121 114.558 49.287C114.503 48.6494 114.486 47.9665 114.646 47.2833C115.219 44.8279 117.276 42.9996 119.782 42.7188C120.479 42.6406 121.156 42.7375 121.782 42.8672C121.986 42.9093 122.203 42.9594 122.436 43.016L122.444 43.0072L125.243 43.757C126.428 42.1712 128.116 41.0044 130.059 40.4677C131.036 40.1977 132.143 40.1824 133.546 40.3756L133.267 34.1352ZM123.673 47.8481L122.61 47.5634C121.846 47.3591 121.316 47.221 120.899 47.1347C120.421 47.0359 120.279 47.0483 120.267 47.0496C119.595 47.1249 119.043 47.6155 118.889 48.2742C118.887 48.2857 118.858 48.4253 118.9 48.9114C118.942 49.3957 119.034 50.035 119.175 51.0108C119.49 53.1807 119.611 53.9265 119.847 54.5473C120.416 56.0395 121.511 57.2719 122.926 58.012C123.277 58.1958 123.678 58.3438 124.394 58.554C124.35 58.149 124.304 57.7143 124.254 57.2457L124.254 57.2435C123.789 52.8357 123.484 49.9479 123.673 47.8481ZM148.698 65.0665C149.424 65.2425 149.845 65.3145 150.241 65.3311C151.836 65.3977 153.401 64.8779 154.639 63.87C155.155 63.4506 155.632 62.8652 156.99 61.1434C157.6 60.369 158 59.8614 158.278 59.4629C158.557 59.0629 158.602 58.9276 158.606 58.9162C158.802 58.2688 158.569 57.568 158.024 57.1666C158.015 57.1596 157.898 57.0779 157.435 56.9246C156.973 56.7719 156.35 56.6039 155.397 56.3487L154.676 56.1555C153.789 58.068 152.081 60.4166 149.475 64.0014C149.197 64.3832 148.94 64.7374 148.698 65.0665Z\"\n        fill=\"black\"\n        stroke=\"#652F05\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n      />\n      <g filter=\"url(#ranks_filter0_d)\">\n        <path\n          d=\"M152.943 39.4074C154.597 36.8175 153.257 33.3671 150.289 32.5718C147.864 31.9221 145.372 33.3609 144.723 35.7853L142.436 44.3198C141.981 46.0162 142.988 47.7599 144.685 48.2145C146.024 48.5734 147.442 48.023 148.188 46.8543L152.943 39.4074Z\"\n          fill=\"#E7974D\"\n        />\n        <path\n          d=\"M133.267 34.1351C133.13 31.0653 136.015 28.747 138.984 29.5423C141.408 30.1919 142.847 32.684 142.197 35.1084L139.91 43.6428C139.456 45.3393 137.712 46.346 136.016 45.8915C134.676 45.5326 133.724 44.3471 133.662 42.9618L133.267 34.1351Z\"\n          fill=\"#E7974D\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M124.02 43.4289L142.407 48.3558L137.52 66.5968L125.231 63.3042C125.15 63.2823 125.069 63.2608 124.99 63.2396C123.206 62.762 121.977 62.4331 120.907 61.8733C118.548 60.6399 116.723 58.5858 115.775 56.0989C115.345 54.9702 115.163 53.7114 114.898 51.8831C114.886 51.8018 114.874 51.7195 114.862 51.6359L114.853 51.5744C114.723 50.6769 114.612 49.9118 114.558 49.2866C114.503 48.649 114.486 47.9662 114.646 47.2829C115.219 44.8275 117.276 42.9992 119.782 42.7184C120.479 42.6402 121.156 42.7372 121.782 42.8669C122.397 42.994 123.144 43.1941 124.02 43.4289ZM120.899 47.1344C120.421 47.0355 120.279 47.0479 120.268 47.0492C119.595 47.1246 119.043 47.6151 118.89 48.2739C118.887 48.2854 118.858 48.4249 118.9 48.911C118.942 49.3954 119.034 50.0346 119.175 51.0104C119.49 53.1803 119.611 53.9261 119.847 54.547C120.416 56.0391 121.511 57.2716 122.926 58.0116C123.515 58.3196 124.241 58.5273 126.359 59.0947L134.438 61.2594L137.07 51.4374L122.952 47.6544C121.999 47.3992 121.375 47.2329 120.899 47.1344Z\"\n          fill=\"#E7974D\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M157.435 56.9247C156.973 56.772 156.35 56.6041 155.397 56.3488L141.279 52.5659L138.647 62.388L146.726 64.5527C148.844 65.1201 149.577 65.3035 150.241 65.3312C151.836 65.3978 153.401 64.8781 154.64 63.8701C155.155 63.4507 155.633 62.8653 156.99 61.1435C157.6 60.3692 158 59.8615 158.278 59.463C158.558 59.063 158.602 58.9277 158.606 58.9164C158.802 58.2689 158.569 57.5682 158.024 57.1668C158.015 57.1597 157.898 57.078 157.435 56.9247ZM158.804 52.7874C159.411 52.9884 160.045 53.2425 160.61 53.6589C162.64 55.1549 163.507 57.767 162.776 60.1801C162.573 60.8516 162.217 61.4346 161.85 61.9591C161.491 62.4735 161.012 63.0806 160.451 63.7928L160.412 63.8416C160.36 63.9079 160.309 63.9733 160.258 64.0377C159.114 65.4888 158.327 66.4878 157.39 67.2503C155.326 68.9301 152.718 69.7963 150.059 69.6853C148.852 69.635 147.624 69.3054 145.84 68.8268C145.76 68.8055 145.68 68.784 145.598 68.7621L133.31 65.4695L138.198 47.2285L156.585 52.1555C157.461 52.3902 158.208 52.5903 158.804 52.7874Z\"\n          fill=\"#E7974D\"\n        />\n        <path\n          d=\"M129.251 49.3428L121.568 47.2843C121.482 47.2611 121.398 47.2386 121.316 47.2168C121.151 46.4996 121.153 45.7325 121.357 44.9719C121.561 44.2114 121.942 43.5456 122.444 43.0073C122.506 43.024 122.569 43.0409 122.633 43.0579L130.378 45.1333C130.544 45.8505 130.541 46.6176 130.337 47.3781C130.134 48.1387 129.753 48.8044 129.251 49.3428Z\"\n          fill=\"#E17A2F\"\n        />\n        <path\n          d=\"M127.39 59.3715L128.009 63.9239L127.699 63.9661L123.602 62.8682C123.267 62.7787 122.952 62.6944 122.654 62.6128L122.007 57.8543C122.566 58.0714 123.381 58.2974 124.974 58.724L127.39 59.3715Z\"\n          fill=\"#E17A2F\"\n        />\n        <path\n          d=\"M149.098 54.6606L156.781 56.7191C156.867 56.7423 156.951 56.7648 157.033 56.7867C157.535 56.2483 157.916 55.5826 158.12 54.822C158.323 54.0614 158.326 53.2944 158.161 52.5772C158.098 52.5605 158.035 52.5436 157.972 52.5265L150.226 50.4511C149.724 50.9895 149.343 51.6552 149.139 52.4158C148.936 53.1763 148.933 53.9434 149.098 54.6606Z\"\n          fill=\"#AE5714\"\n        />\n        <path\n          d=\"M145.695 64.276L142.883 67.9087L143.13 68.1004L147.228 69.1984C147.562 69.288 147.877 69.3725 148.176 69.451L151.116 65.6538C150.523 65.5622 149.704 65.3501 148.112 64.9235L145.695 64.276Z\"\n          fill=\"#AE5714\"\n        />\n        <path\n          d=\"M132.169 64.0871C132.507 61.9401 134.631 60.5594 136.731 61.1219C138.83 61.6844 139.979 63.9422 139.198 65.9705L136.373 73.3109C135.945 74.4203 134.75 75.0286 133.602 74.7209L132.641 74.4634C131.492 74.1557 130.761 73.0312 130.946 71.8569L132.169 64.0871Z\"\n          fill=\"#AE5714\"\n        />\n        <path\n          d=\"M124.588 73.8847C125.18 71.6761 127.45 70.3655 129.659 70.9573L137.937 73.1755C140.146 73.7673 141.457 76.0374 140.865 78.246C140.667 78.9822 139.911 79.4191 139.175 79.2218L125.564 75.5749C124.828 75.3776 124.391 74.6209 124.588 73.8847Z\"\n          fill=\"#E7974D\"\n        />\n        <path\n          d=\"M124.254 57.2434C123.58 50.8523 123.243 47.6568 124.256 45.4255C125.36 42.9945 127.485 41.1784 130.059 40.4675C132.421 39.8151 135.537 40.65 141.769 42.3199C148.001 43.9897 151.117 44.8247 152.836 46.5707C154.709 48.4731 155.642 51.1086 155.382 53.7658C155.144 56.2047 153.254 58.8035 149.475 64.0013C147.556 66.6397 146.597 67.9588 145.369 68.8207C144.025 69.7642 142.448 70.3222 140.81 70.4343C139.313 70.5367 137.725 70.1113 134.55 69.2604C131.375 68.4095 129.787 67.9841 128.542 67.1471C127.179 66.2308 126.092 64.9592 125.4 63.4699C124.768 62.1096 124.596 60.4875 124.254 57.2434Z\"\n          fill=\"#E7974D\"\n        />\n        <path\n          d=\"M153.077 48.6387C153.08 50.8591 151.799 53.3079 149.236 58.2056L148.02 60.5298C146.604 63.2356 145.897 64.5884 144.933 65.5564C143.329 67.1682 141.175 68.1136 138.902 68.2026C137.538 68.2561 136.063 67.8609 133.113 67.0706C130.651 66.4109 129.42 66.081 128.4 65.4947C126.871 64.6161 125.638 63.3103 124.847 61.7435C124.988 62.4051 125.161 62.956 125.4 63.4697C126.093 64.959 127.179 66.2306 128.542 67.1469C129.787 67.9839 131.375 68.4093 134.55 69.2602C137.726 70.111 139.313 70.5364 140.81 70.4341C142.448 70.322 144.025 69.764 145.369 68.8204C146.597 67.9586 147.557 66.6394 149.475 64.001C153.254 58.8033 155.144 56.2045 155.382 53.7656C155.642 51.1083 154.709 48.4729 152.836 46.5705C152.835 46.5692 152.834 46.5679 152.832 46.5666C152.992 47.2397 153.076 47.9347 153.077 48.6387Z\"\n          fill=\"#E17A2F\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M131.079 43.0257C131.533 43.7725 131.296 44.7464 130.549 45.2008L130.226 45.3977C129.503 45.8374 128.978 46.5385 128.759 47.3554L128.61 47.9125C128.383 48.757 127.515 49.2581 126.671 49.0318C125.826 48.8056 125.325 47.9376 125.552 47.0931L125.701 46.536C126.13 44.9324 127.162 43.5561 128.58 42.6931L128.903 42.4962C129.65 42.0418 130.624 42.2788 131.079 43.0257Z\"\n          fill=\"#F7D29B\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M138.589 31.1564C138.929 31.715 138.751 32.4433 138.193 32.7832L137.951 32.9304C137.41 33.2592 137.018 33.7836 136.854 34.3945L136.742 34.8112C136.573 35.4427 135.924 35.8175 135.292 35.6483C134.661 35.4791 134.286 34.8299 134.455 34.1983L134.567 33.7817C134.888 32.5824 135.659 31.5531 136.72 30.9077L136.962 30.7604C137.521 30.4206 138.249 30.5978 138.589 31.1564Z\"\n          fill=\"#F7D29B\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M149.616 34.111C149.956 34.6695 149.778 35.3979 149.22 35.7377L148.978 35.885C148.438 36.2138 148.045 36.7382 147.881 37.3491L147.769 37.7657C147.6 38.3973 146.951 38.7721 146.319 38.6029C145.688 38.4336 145.313 37.7845 145.482 37.1529L145.594 36.7363C145.915 35.537 146.686 34.5077 147.747 33.8623L147.989 33.715C148.548 33.3752 149.276 33.5524 149.616 34.111Z\"\n          fill=\"#F7D29B\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M140.543 49.4898C140.885 48.2121 142.189 47.4513 143.455 47.7906C144.89 48.1751 145.62 49.7799 144.975 51.1326L143.352 54.5387C144.785 55.8486 145.693 57.5966 145.213 59.3855C144.782 60.9935 143.379 62.0182 141.76 62.5027C140.123 62.9925 138.105 62.9939 136.074 62.4496C134.043 61.9054 132.295 60.895 131.123 59.6523C129.963 58.4235 129.26 56.8343 129.691 55.2263C130.168 53.4478 131.812 52.3897 133.693 51.9671L133.991 48.1895C134.109 46.6957 135.544 45.6708 136.979 46.0552C138.245 46.3945 138.994 47.7053 138.651 48.983L137.858 51.9426C138.18 52.0019 138.505 52.0749 138.83 52.1621C139.145 52.2463 139.452 52.3416 139.75 52.4468L140.543 49.4898Z\"\n          fill=\"#E17A2F\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M140.82 48.4556C141.162 47.1779 142.466 46.4172 143.733 46.7564C145.167 47.1409 145.897 48.7458 145.252 50.0984L143.629 53.5045C145.062 54.8145 145.97 56.5624 145.491 58.3513C145.06 59.9594 143.656 60.9841 142.038 61.4685C140.401 61.9584 138.383 61.9597 136.351 61.4155C134.32 60.8712 132.573 59.8608 131.4 58.6181C130.241 57.3893 129.537 55.8002 129.968 54.1921C130.445 52.4136 132.089 51.3556 133.97 50.9329L134.269 47.1554C134.387 45.6615 135.821 44.6366 137.256 45.0211C138.522 45.3603 139.271 46.6711 138.929 47.9488L138.136 50.9084C138.458 50.9677 138.782 51.0407 139.108 51.1279C139.422 51.2122 139.729 51.3074 140.028 51.4126L140.82 48.4556ZM136.394 54.9998C136.176 55.8124 135.551 56.3509 134.997 56.2025C134.443 56.0542 134.171 55.2752 134.389 54.4626C134.607 53.6499 135.232 53.1114 135.786 53.2598C136.339 53.4081 136.611 54.1872 136.394 54.9998ZM140.283 57.6188C140.836 57.7672 141.462 57.2287 141.679 56.416C141.897 55.6034 141.625 54.8244 141.071 54.6761C140.518 54.5277 139.892 55.0662 139.675 55.8788C139.457 56.6914 139.729 57.4705 140.283 57.6188Z\"\n          fill=\"#AE5714\"\n        />\n      </g>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M32.7707 34.2104C32.9079 31.1406 30.0224 28.8223 27.0543 29.6176C24.6299 30.2673 23.1911 32.7593 23.8407 35.1837L25.6724 42.0195C25.3098 42.1164 24.9358 42.2166 24.5499 42.32C24.0635 42.4503 23.5961 42.5755 23.1469 42.6965L21.3151 35.8604C20.6655 33.436 18.1735 31.9972 15.7491 32.6468C12.7809 33.4421 11.4412 36.8926 13.0949 39.4825L16.4567 44.7474C15.1449 45.2816 14.1941 45.8482 13.4825 46.5708C12.0682 48.0071 11.19 49.8613 10.9564 51.8273L9.73312 52.1551C9.57409 52.1977 9.41922 52.2392 9.26884 52.2797L8.15778 52.5774L8.1551 52.5891C7.92557 52.6561 7.71181 52.7217 7.51461 52.7869C6.90703 52.988 6.27299 53.2421 5.70821 53.6584C3.67859 55.1545 2.811 57.7666 3.54216 60.1797C3.74562 60.8512 4.10159 61.4341 4.46816 61.9587C4.82756 62.4731 5.30623 63.0802 5.86775 63.7924L6.06079 64.0373C7.20412 65.4884 7.99133 66.4874 8.92819 67.2498C10.9925 68.9297 13.6002 69.7959 16.2594 69.6849C16.8534 69.6601 17.4526 69.5677 18.1208 69.4232L18.1425 69.4512C18.44 69.3731 18.7532 69.2891 19.0854 69.2L19.0881 69.1993L19.0908 69.1986L20.8275 68.7332C20.8678 68.7629 20.9084 68.7921 20.9492 68.8208C22.2935 69.7643 23.8702 70.3223 25.5088 70.4344C26.4225 70.4969 27.3703 70.3627 28.6925 70.055L29.7524 72.8083L28.3812 73.1757C26.1727 73.7675 24.862 76.0377 25.4538 78.2462C25.651 78.9824 26.4078 79.4193 27.1439 79.2221L40.7545 75.5751C41.4907 75.3779 41.9276 74.6211 41.7303 73.8849C41.1386 71.6764 38.8684 70.3657 36.6598 70.9575L35.2886 71.3249L34.8298 68.4105C36.1287 68.0158 37.0166 67.6582 37.7767 67.1472C39.1397 66.2309 40.2261 64.9593 40.9185 63.47C40.9396 63.4247 40.9602 63.3791 40.9802 63.3332L42.7169 62.8679C43.0511 62.7784 43.3661 62.6941 43.6645 62.6125L43.6692 62.5776C44.3201 62.3687 44.8852 62.1491 45.412 61.8736C47.7703 60.6402 49.5956 58.5862 50.5434 56.0992C50.9735 54.9705 51.1558 53.7117 51.4204 51.8834L51.4651 51.5747L51.4653 51.5735C51.5953 50.6769 51.7063 49.9116 51.7603 49.287C51.8155 48.6494 51.8323 47.9665 51.6727 47.2832C51.0994 44.8278 49.042 42.9996 46.5363 42.7187C45.839 42.6406 45.1628 42.7375 44.5361 42.8672C44.3329 42.9092 44.1151 42.9593 43.8829 43.016L43.8746 43.007L41.0759 43.7569C39.8906 42.1711 38.203 41.0043 36.2598 40.4675L36.2546 40.4661C35.2143 40.1798 34.0278 40.1818 32.4932 40.4162L32.7707 34.2104ZM41.9246 58.5539C41.9689 58.1483 42.0148 57.7129 42.0644 57.2435C42.5294 52.8356 42.834 49.9477 42.646 47.8479L43.3668 47.6547C44.3193 47.3995 44.9433 47.2332 45.4193 47.1347C45.8971 47.0358 46.0391 47.0482 46.0509 47.0495C46.7232 47.1249 47.2751 47.6154 47.429 48.2742C47.4316 48.2857 47.4607 48.4252 47.4186 48.9113C47.3767 49.3957 47.2849 50.0349 47.1434 51.0108C46.8287 53.1806 46.7078 53.9264 46.4711 54.5473C45.9025 56.0395 44.8073 57.2719 43.3923 58.0119C43.0409 58.1957 42.6405 58.3438 41.9246 58.5539ZM11.6422 56.1554C12.5293 58.0679 14.237 60.4165 16.8437 64.0014L16.8461 64.0048L16.8471 64.0061C17.1233 64.386 17.3797 64.7385 17.6198 65.0663C16.8946 65.2423 16.4738 65.3142 16.0776 65.3308C14.4821 65.3974 12.9175 64.8776 11.6789 63.8697C11.1636 63.4503 10.6859 62.8649 9.3285 61.1431C8.718 60.3687 8.31886 59.8611 8.0404 59.4626C7.76093 59.0626 7.7163 58.9273 7.71286 58.9159C7.5167 58.2685 7.74947 57.5677 8.294 57.1664C8.30353 57.1593 8.42026 57.0776 8.8835 56.9243C9.26622 56.7977 9.76036 56.6606 10.4611 56.4719L11.6422 56.1554Z\"\n        fill=\"black\"\n        stroke=\"#4C4E54\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n      />\n      <g filter=\"url(#ranks_filter1_d)\">\n        <path\n          d=\"M32.7708 34.2105C32.908 31.1407 30.0225 28.8224 27.0544 29.6177C24.6299 30.2673 23.1912 32.7593 23.8408 35.1838L26.1276 43.7182C26.5822 45.4147 28.3259 46.4214 30.0223 45.9668C31.3618 45.6079 32.3142 44.4225 32.3761 43.0372L32.7708 34.2105Z\"\n          fill=\"#B2B2B2\"\n        />\n        <path\n          d=\"M13.095 39.4828C11.4412 36.8929 12.781 33.4424 15.7491 32.6471C18.1736 31.9975 20.6656 33.4363 21.3152 35.8607L23.602 44.3952C24.0566 46.0916 23.0498 47.8353 21.3534 48.2899C20.0139 48.6488 18.5964 48.0984 17.8501 46.9296L13.095 39.4828Z\"\n          fill=\"#B2B2B2\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M9.73319 52.1551L28.1208 47.2282L33.0085 65.4692L20.7203 68.7618C20.6387 68.7836 20.5583 68.8052 20.479 68.8265C18.6948 69.3051 17.4663 69.6346 16.2594 69.685C13.6003 69.796 10.9925 68.9298 8.92826 67.2499C7.9914 66.4875 7.2042 65.4884 6.06086 64.0374C6.01006 63.9729 5.95854 63.9075 5.90628 63.8412L5.86782 63.7925C5.3063 63.0803 4.82764 62.4731 4.46823 61.9588C4.10167 61.4342 3.74569 60.8512 3.54223 60.1797C2.81107 57.7666 3.67867 55.1546 5.70828 53.6585C6.27307 53.2422 6.9071 52.988 7.51468 52.787C8.11039 52.5899 8.85716 52.3898 9.73319 52.1551ZM8.88357 56.9244C8.42034 57.0776 8.3036 57.1594 8.29407 57.1664C7.74954 57.5678 7.51677 58.2686 7.71294 58.916C7.71637 58.9273 7.761 59.0627 8.04048 59.4626C8.31893 59.8611 8.71808 60.3688 9.32857 61.1432C10.686 62.865 11.1636 63.4504 11.679 63.8698C12.9175 64.8777 14.4822 65.3974 16.0777 65.3308C16.7415 65.3031 17.4745 65.1198 19.5923 64.5523L27.6711 62.3876L25.0393 52.5655L10.9211 56.3485C9.96867 56.6037 9.34511 56.7717 8.88357 56.9244Z\"\n          fill=\"#B2B2B2\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M45.4194 47.135C44.9434 47.2335 44.3194 47.3998 43.3669 47.655L29.2488 51.438L31.8806 61.2601L39.9593 59.0954C42.0772 58.5279 42.8036 58.3202 43.3924 58.0122C44.8074 57.2722 45.9026 56.0398 46.4712 54.5476C46.7078 53.9267 46.8287 53.1809 47.1434 51.0111C47.285 50.0352 47.3768 49.396 47.4187 48.9116C47.4607 48.4255 47.4317 48.286 47.429 48.2745C47.2752 47.6157 46.7232 47.1252 46.051 47.0499C46.0392 47.0485 45.8972 47.0361 45.4194 47.135ZM44.5362 42.8675C45.1629 42.7378 45.8391 42.6409 46.5364 42.719C49.0421 42.9999 51.0995 44.8282 51.6728 47.2835C51.8324 47.9668 51.8156 48.6497 51.7604 49.2873C51.7063 49.9124 51.5954 50.6775 51.4652 51.575L51.4563 51.6365C51.4441 51.7201 51.4322 51.8024 51.4205 51.8837C51.1558 53.712 50.9736 54.9708 50.5435 56.0995C49.5957 58.5865 47.7704 60.6405 45.412 61.8739C44.3417 62.4337 43.113 62.7626 41.3285 63.2402C41.2492 63.2615 41.1688 63.283 41.0872 63.3048L28.799 66.5974L23.9114 48.3564L42.299 43.4295C43.175 43.1948 43.9218 42.9946 44.5362 42.8675Z\"\n          fill=\"#B2B2B2\"\n        />\n        <path\n          d=\"M17.2203 54.6611L9.53791 56.7196C9.45138 56.7428 9.36738 56.7653 9.28581 56.7872C8.78383 56.2488 8.40277 55.5831 8.19897 54.8225C7.99518 54.0619 7.99232 53.2949 8.15785 52.5777C8.22022 52.561 8.28325 52.5441 8.34693 52.527L16.0923 50.4516C16.5943 50.99 16.9754 51.6557 17.1791 52.4163C17.3829 53.1768 17.3858 53.9439 17.2203 54.6611Z\"\n          fill=\"#969696\"\n        />\n        <path\n          d=\"M20.6232 64.2765L23.436 67.9092L23.1885 68.1009L19.0909 69.1989C18.7567 69.2885 18.4417 69.373 18.1426 69.4515L15.2025 65.6543C15.7953 65.5627 16.6147 65.3506 18.2069 64.924L20.6232 64.2765Z\"\n          fill=\"#969696\"\n        />\n        <path\n          d=\"M37.0681 49.3428L44.7504 47.2843C44.837 47.2611 44.921 47.2386 45.0026 47.2168C45.1681 46.4996 45.1653 45.7325 44.9615 44.9719C44.7577 44.2114 44.3766 43.5457 43.8747 43.0073C43.8123 43.024 43.7493 43.0409 43.6856 43.058L35.9402 45.1333C35.7746 45.8505 35.7775 46.6176 35.9813 47.3782C36.1851 48.1387 36.5661 48.8044 37.0681 49.3428Z\"\n          fill=\"#7D7D7D\"\n        />\n        <path\n          d=\"M38.9288 59.3715L38.3092 63.9239L38.6193 63.9661L42.717 62.8682C43.0512 62.7787 43.3662 62.6944 43.6645 62.6128L44.3121 57.8543C43.7529 58.0714 42.9373 58.2974 41.3451 58.724L38.9288 59.3715Z\"\n          fill=\"#7D7D7D\"\n        />\n        <path\n          d=\"M27.1204 65.9709C26.3396 63.9426 27.4887 61.6848 29.588 61.1223C31.6874 60.5597 33.8114 61.9405 34.1493 64.0875L35.3724 71.8573C35.5573 73.0316 34.8262 74.1561 33.678 74.4637L32.7167 74.7213C31.5685 75.029 30.3732 74.4206 29.9461 73.3112L27.1204 65.9709Z\"\n          fill=\"#7D7D7D\"\n        />\n        <path\n          d=\"M25.4538 78.2465C24.8621 76.038 26.1727 73.7678 28.3813 73.176L36.6599 70.9578C38.8685 70.366 41.1386 71.6767 41.7304 73.8852C41.9277 74.6214 41.4908 75.3782 40.7546 75.5754L27.144 79.2224C26.4078 79.4196 25.6511 78.9827 25.4538 78.2465Z\"\n          fill=\"#B2B2B2\"\n        />\n        <path\n          d=\"M16.8437 64.0017C13.0643 58.8039 11.1746 56.2051 10.9363 53.7662C10.6766 51.109 11.6093 48.4735 13.4826 46.5711C15.202 44.825 18.318 43.9901 24.55 42.3203C30.7819 40.6504 33.8979 39.8155 36.26 40.4679C38.8335 41.1788 40.959 42.9949 42.0627 45.4259C43.0758 47.6572 42.7387 50.8527 42.0644 57.2438C41.7222 60.4879 41.5511 62.11 40.9186 63.4703C40.2262 64.9596 39.1397 66.2312 37.7767 67.1475C36.5318 67.9845 34.9441 68.4099 31.7686 69.2608C28.5932 70.1117 27.0055 70.5371 25.5088 70.4347C23.8703 70.3226 22.2936 69.7646 20.9493 68.8211C19.7214 67.9592 18.7622 66.64 16.8437 64.0017Z\"\n          fill=\"#B2B2B2\"\n        />\n        <path\n          d=\"M37.5025 42.1389C38.6154 44.0603 38.7302 46.8216 38.9598 52.3443L39.0688 54.9653C39.1957 58.0163 39.2591 59.5419 38.9088 60.8618C38.3254 63.0598 36.9323 64.9557 35.0089 66.169C33.8539 66.8976 32.379 67.2928 29.4294 68.0832C26.9673 68.7429 25.7363 69.0727 24.5597 69.0751C22.7964 69.0786 21.0752 68.5645 19.6071 67.6029C20.0603 68.1052 20.4856 68.4958 20.9493 68.8212C22.2936 69.7648 23.8703 70.3228 25.5088 70.4348C27.0055 70.5372 28.5932 70.1118 31.7686 69.2609C34.944 68.4101 36.5318 67.9847 37.7767 67.1477C39.1397 66.2313 40.2261 64.9597 40.9186 63.4705C41.551 62.1102 41.7221 60.4881 42.0644 57.2439C42.7386 50.8529 43.0757 47.6573 42.0627 45.426C40.9589 42.995 38.8334 41.179 36.2599 40.4681C36.2582 40.4676 36.2564 40.4671 36.2546 40.4666C36.7299 40.9695 37.1496 41.5297 37.5025 42.1389Z\"\n          fill=\"#969696\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M15.6452 48.2768C16.4122 48.6964 16.6938 49.6583 16.2743 50.4253L16.0925 50.7576C15.6866 51.4996 15.5823 52.3694 15.8012 53.1864L15.9504 53.7434C16.1767 54.5879 15.6755 55.4559 14.8311 55.6822C13.9866 55.9084 13.1186 55.4073 12.8923 54.5628L12.7431 54.0058C12.3134 52.4022 12.5182 50.6947 13.315 49.2382L13.4967 48.9059C13.9163 48.1389 14.8782 47.8573 15.6452 48.2768Z\"\n          fill=\"#D8D8D8\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M16.2142 34.2423C16.7878 34.5561 16.9985 35.2754 16.6847 35.8491L16.5487 36.0976C16.2452 36.6525 16.1671 37.3031 16.3308 37.914L16.4425 38.3306C16.6117 38.9622 16.2369 39.6114 15.6053 39.7806C14.9738 39.9498 14.3246 39.575 14.1554 38.9435L14.0438 38.5268C13.7224 37.3275 13.8756 36.0505 14.4715 34.9613L14.6074 34.7127C14.9212 34.1391 15.6406 33.9285 16.2142 34.2423Z\"\n          fill=\"#D8D8D8\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M27.2413 31.2877C27.8149 31.6015 28.0256 32.3209 27.7118 32.8945L27.5758 33.143C27.2723 33.6979 27.1942 34.3485 27.3579 34.9594L27.4696 35.376C27.6388 36.0076 27.264 36.6568 26.6324 36.826C26.0009 36.9952 25.3517 36.6204 25.1825 35.9889L25.0709 35.5722C24.7495 34.373 24.9027 33.096 25.4986 32.0067L25.6345 31.7581C25.9483 31.1845 26.6677 30.9739 27.2413 31.2877Z\"\n          fill=\"#D8D8D8\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M27.0735 49.143C26.7311 47.8653 27.48 46.5545 28.7462 46.2152C30.181 45.8308 31.6155 46.8557 31.7335 48.3495L32.0306 52.111C33.9268 52.5288 35.5869 53.5887 36.0663 55.3776C36.4971 56.9857 35.7941 58.5748 34.6345 59.8037C33.4618 61.0464 31.7146 62.0567 29.6833 62.601C27.6521 63.1453 25.6338 63.1439 23.9969 62.654C22.3782 62.1696 20.9748 61.1449 20.5439 59.5368C20.0673 57.7583 20.9622 56.0199 22.3801 54.7133L20.7497 51.2927C20.105 49.94 20.8349 48.3351 22.2697 47.9506C23.5358 47.6114 24.8398 48.3721 25.1821 49.6498L25.9752 52.6094C26.2838 52.4997 26.6014 52.4007 26.9268 52.3135C27.2411 52.2292 27.5546 52.1582 27.8658 52.1001L27.0735 49.143Z\"\n          fill=\"#969696\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M26.7962 48.1079C26.4538 46.8302 27.2027 45.5194 28.4689 45.1801C29.9037 44.7956 31.3382 45.8206 31.4562 47.3144L31.7532 51.0759C33.6495 51.4937 35.3096 52.5536 35.7889 54.3425C36.2198 55.9505 35.5167 57.5396 34.3571 58.7685C33.1845 60.0112 31.4373 61.0215 29.406 61.5658C27.3747 62.1101 25.3564 62.1087 23.7195 61.6188C22.1009 61.1344 20.6974 60.1097 20.2665 58.5017C19.79 56.7231 20.6849 54.9848 22.1028 53.6781L20.4724 50.2575C19.8276 48.9048 20.5575 47.2999 21.9923 46.9155C23.2585 46.5762 24.5624 47.337 24.9048 48.6147L25.6978 51.5742C26.0064 51.4645 26.324 51.3655 26.6495 51.2783C26.9638 51.1941 27.2772 51.1231 27.5885 51.0649L26.7962 48.1079ZM26.2349 55.9884C26.4527 56.8011 26.1804 57.5801 25.6268 57.7284C25.0731 57.8768 24.4478 57.3383 24.2301 56.5256C24.0123 55.713 24.2846 54.934 24.8382 54.7857C25.3919 54.6373 26.0172 55.1758 26.2349 55.9884ZM30.9124 56.3121C31.4661 56.1637 31.7384 55.3847 31.5206 54.5721C31.3029 53.7595 30.6776 53.221 30.1239 53.3693C29.5703 53.5177 29.298 54.2967 29.5157 55.1093C29.7335 55.9219 30.3588 56.4604 30.9124 56.3121Z\"\n          fill=\"#7D7D7D\"\n        />\n      </g>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M72.6787 3.63086C67.3903 3.63086 63.6263 8.76997 65.2218 13.8119L68.4652 24.0611C66.0464 24.365 64.2134 24.8833 62.7087 25.7676C59.7176 27.5253 57.4318 30.2167 56.1677 33.3809L51.1815 33.3809L51.1717 33.3995C50.7605 33.4087 50.3761 33.4225 50.0194 33.4431C48.9198 33.5066 47.7526 33.6467 46.6283 34.0872C42.588 35.6702 39.9823 39.6259 40.1229 43.963C40.162 45.1698 40.494 46.2975 40.8697 47.3329C41.2381 48.348 41.7634 49.5704 42.3796 51.0045L42.5914 51.4976C43.8457 54.419 44.7093 56.4305 45.9271 58.1152C48.6104 61.8272 52.5596 64.4287 57.0294 65.4286C58.0278 65.652 59.0651 65.7652 60.2402 65.8226L60.2636 65.8784C60.7909 65.8813 61.3466 65.8811 61.9358 65.8809L65.0469 65.8809C65.1007 65.9482 65.1551 66.0148 65.2102 66.0807C67.0246 68.248 69.3971 69.8778 72.071 70.794C73.5622 71.305 75.1975 71.5039 77.5328 71.5814L78.0683 76.6309H75.625C71.69 76.6309 68.5 79.8208 68.5 83.7559C68.5 85.0675 69.5633 86.1309 70.875 86.1309H95.125C96.4367 86.1309 97.5 85.0675 97.5 83.7559C97.5 79.8208 94.31 76.6309 90.375 76.6309H87.932L88.4675 71.5814C90.8025 71.5039 92.4377 71.3049 93.9288 70.794C94.0959 70.7368 94.2618 70.6767 94.4265 70.6139C96.2251 69.9282 97.8758 68.9151 99.297 67.6308C99.828 67.151 100.327 66.6332 100.79 66.0806C100.845 66.0147 100.899 65.9482 100.953 65.8809L104.063 65.8809C104.653 65.8811 105.209 65.8813 105.736 65.8784L105.76 65.8226C106.935 65.7652 107.972 65.652 108.971 65.4286C113.44 64.4287 117.39 61.8272 120.073 58.1152C121.291 56.4305 122.154 54.419 123.409 51.4976L123.62 51.0044C124.237 49.5704 124.762 48.3479 125.13 47.3329C125.506 46.2975 125.838 45.1698 125.877 43.963C126.018 39.6259 123.412 35.6702 119.372 34.0872C118.247 33.6467 117.08 33.5066 115.981 33.4431C115.624 33.4225 115.24 33.4087 114.828 33.3995L114.819 33.3809L109.832 33.3809C108.568 30.2166 106.282 27.5252 103.291 25.7675L103.283 25.7627C101.681 24.8235 99.7082 24.2983 97.0529 24.0043L100.278 13.8119C101.874 8.76997 98.1097 3.63086 92.8214 3.63086C88.5017 3.63086 85 7.13259 85 11.4522V23.6314C84.354 23.6309 83.6876 23.6309 82.9999 23.6309C82.1334 23.6309 81.3007 23.6309 80.5001 23.6319V11.4522C80.5001 7.13259 76.9983 3.63086 72.6787 3.63086ZM104.652 58.3568C104.906 57.7021 105.177 56.9986 105.468 56.2403C108.204 49.1201 109.997 44.4552 110.62 40.8809H111.904C113.601 40.8809 114.713 40.8823 115.548 40.9306C116.386 40.9791 116.617 41.0629 116.636 41.0704C117.72 41.4951 118.419 42.5564 118.381 43.72C118.38 43.7403 118.367 43.9852 118.08 44.7745C117.795 45.561 117.357 46.5827 116.687 48.1419C115.198 51.6088 114.665 52.7947 113.995 53.7214C112.385 55.9487 110.015 57.5096 107.333 58.1095C106.667 58.2585 105.936 58.3263 104.652 58.3568ZM54.0957 40.8809H55.3802C56.0029 44.4552 57.7956 49.1201 60.532 56.2404C60.8234 56.9987 61.0938 57.7022 61.3481 58.3568C60.0643 58.3263 59.3327 58.2585 58.6667 58.1095C55.9848 57.5095 53.6153 55.9487 52.0053 53.7214C51.3354 52.7947 50.8022 51.6088 49.3126 48.1419C48.6427 46.5827 48.2053 45.561 47.9199 44.7745C47.6335 43.9852 47.6196 43.7403 47.6189 43.72C47.5812 42.5564 48.2803 41.4951 49.3643 41.0704C49.3832 41.0629 49.6137 40.9791 50.452 40.9306C51.2873 40.8823 52.3987 40.8809 54.0957 40.8809Z\"\n        fill=\"black\"\n      />\n      <path\n        d=\"M113.777 27.8389C113.5 28.8949 112 28.8949 111.723 27.8389L110.232 22.1562C110.135 21.7856 109.845 21.4962 109.475 21.399L103.792 19.9075C102.736 19.6304 102.736 18.1313 103.792 17.8542L109.475 16.3628C109.845 16.2655 110.135 15.9761 110.232 15.6056L111.723 9.92284C112 8.86687 113.5 8.86686 113.777 9.92284L115.268 15.6056C115.365 15.9761 115.655 16.2655 116.025 16.3628L121.708 17.8542C122.764 18.1313 122.764 19.6304 121.708 19.9075L116.025 21.399C115.655 21.4962 115.365 21.7856 115.268 22.1562L113.777 27.8389Z\"\n        fill=\"black\"\n      />\n      <path\n        d=\"M52.1318 14.1182C51.9612 13.4684 51.0388 13.4684 50.8682 14.1182L49.9504 17.6153C49.8906 17.8433 49.7125 18.0214 49.4844 18.0813L45.9874 18.9991C45.3375 19.1696 45.3375 20.0921 45.9874 20.2627L49.4844 21.1805C49.7125 21.2403 49.8906 21.4184 49.9504 21.6464L50.8682 25.1435C51.0388 25.7933 51.9612 25.7933 52.1318 25.1435L53.0496 21.6464C53.1094 21.4184 53.2875 21.2403 53.5156 21.1805L57.0126 20.2627C57.6625 20.0921 57.6625 19.1696 57.0126 18.9991L53.5156 18.0813C53.2875 18.0214 53.1094 17.8433 53.0496 17.6153L52.1318 14.1182Z\"\n        fill=\"black\"\n      />\n      <path\n        d=\"M54.3028 81.7044C54.1536 82.273 53.3464 82.273 53.1972 81.7044L52.3941 78.6445C52.3417 78.445 52.1859 78.2891 51.9864 78.2368L48.9265 77.4337C48.3578 77.2844 48.3578 76.4773 48.9265 76.328L51.9864 75.525C52.1859 75.4726 52.3417 75.3168 52.3941 75.1172L53.1972 72.0573C53.3464 71.4887 54.1536 71.4887 54.3028 72.0573L55.1059 75.1172C55.1583 75.3168 55.3141 75.4726 55.5136 75.525L58.5735 76.328C59.1422 76.4773 59.1422 77.2844 58.5735 77.4337L55.5136 78.2368C55.3141 78.2891 55.1583 78.445 55.1059 78.6445L54.3028 81.7044Z\"\n        fill=\"black\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M72.6787 3.63086C67.3903 3.63086 63.6263 8.76997 65.2218 13.8119L68.4652 24.0611C66.0464 24.365 64.2134 24.8833 62.7087 25.7676C59.7176 27.5253 57.4318 30.2167 56.1677 33.3809L51.1815 33.3809L51.1717 33.3995C50.7605 33.4087 50.3761 33.4225 50.0194 33.4431C48.9198 33.5066 47.7526 33.6467 46.6283 34.0872C42.588 35.6702 39.9823 39.6259 40.1229 43.963C40.162 45.1698 40.494 46.2975 40.8697 47.3329C41.2381 48.348 41.7634 49.5704 42.3796 51.0045L42.5914 51.4976C43.8457 54.419 44.7093 56.4305 45.9271 58.1152C48.6104 61.8272 52.5596 64.4287 57.0294 65.4286C58.0278 65.652 59.0651 65.7652 60.2402 65.8226L60.2636 65.8784C60.7909 65.8813 61.3466 65.8811 61.9358 65.8809L65.0469 65.8809C65.1007 65.9482 65.1551 66.0148 65.2102 66.0807C67.0246 68.248 69.3971 69.8778 72.071 70.794C73.5622 71.305 75.1975 71.5039 77.5328 71.5814L78.0683 76.6309H75.625C71.69 76.6309 68.5 79.8208 68.5 83.7559C68.5 85.0675 69.5633 86.1309 70.875 86.1309H95.125C96.4367 86.1309 97.5 85.0675 97.5 83.7559C97.5 79.8208 94.31 76.6309 90.375 76.6309H87.932L88.4675 71.5814C90.8025 71.5039 92.4377 71.3049 93.9288 70.794C94.0959 70.7368 94.2618 70.6767 94.4265 70.6139C96.2251 69.9282 97.8758 68.9151 99.297 67.6308C99.828 67.151 100.327 66.6332 100.79 66.0806C100.845 66.0147 100.899 65.9482 100.953 65.8809L104.063 65.8809C104.653 65.8811 105.209 65.8813 105.736 65.8784L105.76 65.8226C106.935 65.7652 107.972 65.652 108.971 65.4286C113.44 64.4287 117.39 61.8272 120.073 58.1152C121.291 56.4305 122.154 54.419 123.409 51.4976L123.62 51.0044C124.237 49.5704 124.762 48.3479 125.13 47.3329C125.506 46.2975 125.838 45.1698 125.877 43.963C126.018 39.6259 123.412 35.6702 119.372 34.0872C118.247 33.6467 117.08 33.5066 115.981 33.4431C115.624 33.4225 115.24 33.4087 114.828 33.3995L114.819 33.3809L109.832 33.3809C108.568 30.2166 106.282 27.5252 103.291 25.7675L103.283 25.7627C101.681 24.8235 99.7082 24.2983 97.0529 24.0043L100.278 13.8119C101.874 8.76997 98.1097 3.63086 92.8214 3.63086C88.5017 3.63086 85 7.13259 85 11.4522V23.6314C84.354 23.6309 83.6876 23.6309 82.9999 23.6309C82.1334 23.6309 81.3007 23.6309 80.5001 23.6319V11.4522C80.5001 7.13259 76.9983 3.63086 72.6787 3.63086ZM104.652 58.3568C104.906 57.7021 105.177 56.9986 105.468 56.2403C108.204 49.1201 109.997 44.4552 110.62 40.8809H111.904C113.601 40.8809 114.713 40.8823 115.548 40.9306C116.386 40.9791 116.617 41.0629 116.636 41.0704C117.72 41.4951 118.419 42.5564 118.381 43.72C118.38 43.7403 118.367 43.9852 118.08 44.7745C117.795 45.561 117.357 46.5827 116.687 48.1419C115.198 51.6088 114.665 52.7947 113.995 53.7214C112.385 55.9487 110.015 57.5096 107.333 58.1095C106.667 58.2585 105.936 58.3263 104.652 58.3568ZM54.0957 40.8809H55.3802C56.0029 44.4552 57.7956 49.1201 60.532 56.2404C60.8234 56.9987 61.0938 57.7022 61.3481 58.3568C60.0643 58.3263 59.3327 58.2585 58.6667 58.1095C55.9848 57.5095 53.6153 55.9487 52.0053 53.7214C51.3354 52.7947 50.8022 51.6088 49.3126 48.1419C48.6427 46.5827 48.2053 45.561 47.9199 44.7745C47.6335 43.9852 47.6196 43.7403 47.6189 43.72C47.5812 42.5564 48.2803 41.4951 49.3643 41.0704C49.3832 41.0629 49.6137 40.9791 50.452 40.9306C51.2873 40.8823 52.3987 40.8809 54.0957 40.8809Z\"\n        stroke=\"#8B5403\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n      />\n      <path\n        d=\"M113.777 27.8389C113.5 28.8949 112 28.8949 111.723 27.8389L110.232 22.1562C110.135 21.7856 109.845 21.4962 109.475 21.399L103.792 19.9075C102.736 19.6304 102.736 18.1313 103.792 17.8542L109.475 16.3628C109.845 16.2655 110.135 15.9761 110.232 15.6056L111.723 9.92284C112 8.86687 113.5 8.86686 113.777 9.92284L115.268 15.6056C115.365 15.9761 115.655 16.2655 116.025 16.3628L121.708 17.8542C122.764 18.1313 122.764 19.6304 121.708 19.9075L116.025 21.399C115.655 21.4962 115.365 21.7856 115.268 22.1562L113.777 27.8389Z\"\n        stroke=\"#8B5403\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n      />\n      <path\n        d=\"M52.1318 14.1182C51.9612 13.4684 51.0388 13.4684 50.8682 14.1182L49.9504 17.6153C49.8906 17.8433 49.7125 18.0214 49.4844 18.0813L45.9874 18.9991C45.3375 19.1696 45.3375 20.0921 45.9874 20.2627L49.4844 21.1805C49.7125 21.2403 49.8906 21.4184 49.9504 21.6464L50.8682 25.1435C51.0388 25.7933 51.9612 25.7933 52.1318 25.1435L53.0496 21.6464C53.1094 21.4184 53.2875 21.2403 53.5156 21.1805L57.0126 20.2627C57.6625 20.0921 57.6625 19.1696 57.0126 18.9991L53.5156 18.0813C53.2875 18.0214 53.1094 17.8433 53.0496 17.6153L52.1318 14.1182Z\"\n        stroke=\"#8B5403\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n      />\n      <path\n        d=\"M54.3028 81.7044C54.1536 82.273 53.3464 82.273 53.1972 81.7044L52.3941 78.6445C52.3417 78.445 52.1859 78.2891 51.9864 78.2368L48.9265 77.4337C48.3578 77.2844 48.3578 76.4773 48.9265 76.328L51.9864 75.525C52.1859 75.4726 52.3417 75.3168 52.3941 75.1172L53.1972 72.0573C53.3464 71.4887 54.1536 71.4887 54.3028 72.0573L55.1059 75.1172C55.1583 75.3168 55.3141 75.4726 55.5136 75.525L58.5735 76.328C59.1422 76.4773 59.1422 77.2844 58.5735 77.4337L55.5136 78.2368C55.3141 78.2891 55.1583 78.445 55.1059 78.6445L54.3028 81.7044Z\"\n        stroke=\"#8B5403\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n      />\n      <g filter=\"url(#ranks_filter2_d)\">\n        <path\n          d=\"M100.278 13.8119C101.874 8.76997 98.1097 3.63086 92.8213 3.63086C88.5017 3.63086 85 7.13259 85 11.4522L85 26.658C85 29.6806 87.4503 32.1309 90.4728 32.1309C92.8593 32.1309 94.9706 30.5845 95.6906 28.3092L100.278 13.8119Z\"\n          fill=\"#FFD800\"\n        />\n        <path\n          d=\"M65.2218 13.8119C63.6263 8.76997 67.3903 3.63086 72.6787 3.63086C76.9983 3.63086 80.5001 7.13259 80.5001 11.4522L80.5001 26.658C80.5001 29.6806 78.0498 32.1309 75.0272 32.1309C72.6408 32.1309 70.5294 30.5845 69.8094 28.3092L65.2218 13.8119Z\"\n          fill=\"#FFD800\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M53.9888 33.3809L86.75 33.3809V65.8809H64.8561C64.7108 65.8809 64.5676 65.8809 64.4263 65.8809C61.247 65.8818 59.058 65.8824 57.0294 65.4286C52.5596 64.4287 48.6104 61.8272 45.9271 58.1152C44.7093 56.4305 43.8457 54.419 42.5914 51.4976C42.5357 51.3678 42.4791 51.2362 42.4218 51.1027L42.3796 51.0045C41.7634 49.5704 41.2381 48.348 40.8697 47.3329C40.494 46.2975 40.162 45.1698 40.1229 43.963C39.9823 39.6259 42.588 35.6702 46.6283 34.0872C47.7526 33.6467 48.9198 33.5066 50.0194 33.4431C51.0974 33.3808 52.4279 33.3808 53.9888 33.3809ZM50.452 40.9306C49.6137 40.9791 49.3832 41.0629 49.3643 41.0704C48.2803 41.4951 47.5812 42.5564 47.6189 43.72C47.6196 43.7403 47.6335 43.9852 47.9199 44.7745C48.2053 45.561 48.6427 46.5827 49.3126 48.1419C50.8022 51.6088 51.3354 52.7947 52.0053 53.7214C53.6153 55.9487 55.9848 57.5096 58.6667 58.1095C59.7826 58.3591 61.0827 58.3809 64.8561 58.3809H79.25V40.8809H54.0957C52.3987 40.8809 51.2873 40.8823 50.452 40.9306Z\"\n          fill=\"#FFD800\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M115.548 40.9306C114.713 40.8823 113.601 40.8809 111.904 40.8809H86.75V58.3809H101.144C104.917 58.3809 106.217 58.3591 107.333 58.1095C110.015 57.5096 112.385 55.9487 113.995 53.7214C114.665 52.7947 115.198 51.6088 116.687 48.1419C117.357 46.5827 117.795 45.561 118.08 44.7745C118.367 43.9852 118.38 43.7403 118.381 43.72C118.419 42.5564 117.72 41.4951 116.636 41.0704C116.617 41.0629 116.386 40.9791 115.548 40.9306ZM115.981 33.4431C117.08 33.5066 118.247 33.6467 119.372 34.0872C123.412 35.6702 126.018 39.6259 125.877 43.963C125.838 45.1698 125.506 46.2975 125.13 47.3329C124.762 48.3479 124.237 49.5704 123.62 51.0044L123.578 51.1027C123.521 51.2362 123.464 51.3678 123.409 51.4976C122.154 54.419 121.291 56.4305 120.073 58.1152C117.39 61.8272 113.44 64.4287 108.971 65.4286C106.942 65.8824 104.753 65.8818 101.574 65.8809C101.432 65.8809 101.289 65.8809 101.144 65.8809H79.25V33.3809L112.011 33.3809C113.572 33.3808 114.903 33.3808 115.981 33.4431Z\"\n          fill=\"#FFD800\"\n        />\n        <path\n          d=\"M65.3184 40.8809H51.6308C51.4766 40.8809 51.3269 40.8809 51.1816 40.8809C50.5869 39.7624 50.25 38.486 50.25 37.1309C50.25 35.7758 50.5869 34.4994 51.1815 33.3809C51.2927 33.3809 51.405 33.3809 51.5184 33.3809L65.3184 33.3809C65.9131 34.4994 66.25 35.7758 66.25 37.1309C66.25 38.486 65.9131 39.7624 65.3184 40.8809Z\"\n          fill=\"#FFAF00\"\n        />\n        <path\n          d=\"M66.6924 58.3809L69.75 65.6726L69.2533 65.8809L61.9526 65.8809C61.3572 65.8811 60.7959 65.8813 60.2636 65.8784L57.0675 58.2566C58.0938 58.3685 59.5504 58.3809 62.3872 58.3809H66.6924Z\"\n          fill=\"#FFAF00\"\n        />\n        <path\n          d=\"M100.682 40.8809H114.369C114.523 40.8809 114.673 40.8809 114.818 40.8809C115.413 39.7624 115.75 38.486 115.75 37.1309C115.75 35.7758 115.413 34.4994 114.819 33.3809C114.707 33.3809 114.595 33.3809 114.482 33.3809L100.682 33.3809C100.087 34.4994 99.75 35.7758 99.75 37.1309C99.75 38.486 100.087 39.7624 100.682 40.8809Z\"\n          fill=\"#EB8C00\"\n        />\n        <path\n          d=\"M99.3076 58.3809L96.25 65.6726L96.7467 65.8809L104.047 65.8809C104.643 65.8811 105.204 65.8813 105.736 65.8784L108.933 58.2566C107.906 58.3685 106.45 58.3809 103.613 58.3809H99.3076Z\"\n          fill=\"#EB8C00\"\n        />\n        <path\n          d=\"M76.7384 64.0918C76.3439 60.3723 79.2597 57.1309 83.0002 57.1309C86.7406 57.1309 89.6564 60.3723 89.2619 64.0918L87.8342 77.5527C87.6184 79.5872 85.9023 81.1309 83.8565 81.1309H82.1438C80.098 81.1309 78.3819 79.5872 78.1661 77.5527L76.7384 64.0918Z\"\n          fill=\"#EB8C00\"\n        />\n        <path\n          d=\"M68.5 83.7559C68.5 79.8208 71.69 76.6309 75.625 76.6309H90.375C94.31 76.6309 97.5 79.8208 97.5 83.7559C97.5 85.0675 96.4367 86.1309 95.125 86.1309H70.875C69.5633 86.1309 68.5 85.0675 68.5 83.7559Z\"\n          fill=\"#FFD800\"\n        />\n        <path\n          d=\"M60.532 56.2404C56.5645 45.9165 54.5807 40.7546 55.2709 36.5941C56.0229 32.0612 58.7472 28.0956 62.7087 25.7676C66.3446 23.6309 71.8964 23.6309 82.9999 23.6309C94.1034 23.6309 99.6552 23.6309 103.291 25.7676C107.253 28.0956 109.977 32.0612 110.729 36.5941C111.419 40.7546 109.435 45.9165 105.468 56.2404C103.454 61.4808 102.447 64.1011 100.79 66.0807C98.9752 68.248 96.6027 69.8778 93.9288 70.794C91.4864 71.6309 88.6576 71.6309 82.9999 71.6309C77.3422 71.6309 74.5134 71.6309 72.071 70.794C69.3971 69.8778 67.0246 68.248 65.2102 66.0807C63.5529 64.1011 62.546 61.4808 60.532 56.2404Z\"\n          fill=\"#FFD800\"\n        />\n        <path\n          d=\"M104.613 29.0984C105.607 32.7881 104.568 37.4296 102.489 46.7126L101.503 51.118C100.355 56.2464 99.781 58.8107 98.6107 60.8489C96.662 64.2428 93.5015 66.774 89.7638 67.9342C87.5192 68.6309 84.8915 68.6309 79.6361 68.6309C75.2495 68.6309 73.0561 68.6309 71.0992 68.1107C68.1663 67.3311 65.5341 65.7098 63.522 63.4575C64.0515 64.4942 64.5846 65.3331 65.2104 66.0806C67.0248 68.2478 69.3973 69.8777 72.0712 70.7939C74.5136 71.6307 77.3424 71.6307 83.0001 71.6307C88.6577 71.6307 91.4866 71.6307 93.9289 70.7939C96.6028 69.8777 98.9753 68.2478 100.79 66.0806C102.447 64.101 103.454 61.4807 105.468 56.2403C109.436 45.9164 111.419 40.7545 110.729 36.594C109.977 32.0611 107.253 28.0955 103.291 25.7675C103.289 25.7659 103.286 25.7643 103.283 25.7627C103.849 26.8104 104.297 27.9285 104.613 29.0984Z\"\n          fill=\"#FFAF00\"\n        />\n        <path\n          d=\"M113.777 27.8389C113.5 28.8949 112 28.8949 111.723 27.8389L110.232 22.1562C110.135 21.7856 109.845 21.4962 109.475 21.399L103.792 19.9075C102.736 19.6304 102.736 18.1313 103.792 17.8542L109.475 16.3628C109.845 16.2655 110.135 15.9761 110.232 15.6056L111.723 9.92284C112 8.86686 113.5 8.86686 113.777 9.92284L115.268 15.6056C115.365 15.9761 115.655 16.2655 116.025 16.3628L121.708 17.8542C122.764 18.1313 122.764 19.6304 121.708 19.9075L116.025 21.399C115.655 21.4962 115.365 21.7856 115.268 22.1562L113.777 27.8389Z\"\n          fill=\"#FEED8D\"\n        />\n        <path\n          d=\"M50.8682 14.1182C51.0388 13.4684 51.9612 13.4684 52.1318 14.1182L53.0496 17.6153C53.1094 17.8433 53.2875 18.0214 53.5156 18.0813L57.0126 18.9991C57.6625 19.1696 57.6625 20.0921 57.0126 20.2627L53.5156 21.1805C53.2875 21.2403 53.1094 21.4184 53.0496 21.6464L52.1318 25.1435C51.9612 25.7933 51.0388 25.7933 50.8682 25.1435L49.9504 21.6464C49.8906 21.4184 49.7125 21.2403 49.4844 21.1805L45.9874 20.2627C45.3375 20.0921 45.3375 19.1696 45.9874 18.9991L49.4844 18.0813C49.7125 18.0214 49.8906 17.8433 49.9504 17.6153L50.8682 14.1182Z\"\n          fill=\"#FEED8D\"\n        />\n        <path\n          d=\"M54.3028 81.7044C54.1536 82.273 53.3464 82.273 53.1972 81.7044L52.3941 78.6445C52.3417 78.445 52.1859 78.2891 51.9864 78.2368L48.9265 77.4337C48.3578 77.2844 48.3578 76.4773 48.9265 76.328L51.9864 75.525C52.1859 75.4726 52.3417 75.3168 52.3941 75.1172L53.1972 72.0573C53.3464 71.4887 54.1536 71.4887 54.3028 72.0573L55.1059 75.1172C55.1583 75.3168 55.3141 75.4726 55.5136 75.525L58.5735 76.328C59.1422 76.4773 59.1422 77.2844 58.5735 77.4337L55.5136 78.2368C55.3141 78.2891 55.1583 78.445 55.1059 78.6445L54.3028 81.7044Z\"\n          fill=\"#FEED8D\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M65.5441 29.5666C66.6323 30.6057 66.672 32.3301 65.6329 33.4183L65.1827 33.8897C64.1774 34.9424 63.6165 36.3419 63.6165 37.7974L63.6165 38.7899C63.6165 40.2945 62.3968 41.5142 60.8923 41.5142C59.3877 41.5142 58.168 40.2945 58.168 38.7899L58.168 37.7974C58.168 34.9403 59.269 32.1931 61.2422 30.1268L61.6924 29.6553C62.7315 28.5672 64.456 28.5275 65.5441 29.5666Z\"\n          fill=\"#FEED8D\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M72.7416 6.48973C73.5554 7.26686 73.5851 8.55655 72.808 9.37034L72.4712 9.72293C71.7195 10.5102 71.3 11.5569 71.3 12.6454V13.3877C71.3 14.5129 70.3878 15.4251 69.2625 15.4251C68.1373 15.4251 67.2251 14.5129 67.2251 13.3877V12.6454C67.2251 10.5086 68.0485 8.45403 69.5243 6.9087L69.861 6.55611C70.6381 5.74232 71.9278 5.7126 72.7416 6.48973Z\"\n          fill=\"#FEED8D\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M92.3886 6.48973C93.2023 7.26686 93.2321 8.55655 92.4549 9.37034L92.1182 9.72293C91.3664 10.5102 90.9469 11.5569 90.9469 12.6454V13.3877C90.9469 14.5129 90.0348 15.4251 88.9095 15.4251C87.7843 15.4251 86.8721 14.5129 86.8721 13.3877V12.6454C86.8721 10.5086 87.6955 8.45403 89.1712 6.9087L89.5079 6.55611C90.2851 5.74232 91.5748 5.7126 92.3886 6.48973Z\"\n          fill=\"#FEED8D\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M84.156 36.0965C84.156 33.8201 85.9848 31.9746 88.2408 31.9746C90.7972 31.9746 92.7254 34.3174 92.2561 36.8532L91.0744 43.2384C94.0406 44.7776 96.3281 47.2789 96.3281 50.4662C96.3281 53.3313 94.4515 55.6598 91.9765 57.1861C89.4736 58.7296 86.1191 59.6309 82.5 59.6309C78.8809 59.6309 75.5264 58.7296 73.0235 57.1861C70.5485 55.6598 68.6719 53.3313 68.6719 50.4662C68.6719 47.2974 70.9339 44.8062 73.8729 43.2658L72.6862 36.8532C72.2169 34.3174 74.1451 31.9746 76.7015 31.9746C78.9574 31.9746 80.7862 33.8201 80.7862 36.0965L80.7862 41.3696C81.3481 41.3247 81.9201 41.3016 82.5 41.3016C83.06 41.3016 83.6127 41.3231 84.156 41.3651V36.0965Z\"\n          fill=\"#FFAF00\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M84.156 34.2528C84.156 31.9763 85.9848 30.1309 88.2408 30.1309C90.7972 30.1309 92.7254 32.4736 92.2561 35.0094L91.0744 41.3947C94.0406 42.9338 96.3281 45.4352 96.3281 48.6225C96.3281 51.4876 94.4515 53.8161 91.9765 55.3424C89.4736 56.8858 86.1191 57.7871 82.5 57.7871C78.8809 57.7871 75.5264 56.8858 73.0235 55.3424C70.5485 53.8161 68.6719 51.4876 68.6719 48.6225C68.6719 45.4537 70.9339 42.9625 73.8729 41.422L72.6862 35.0095C72.2169 32.4736 74.1451 30.1309 76.7015 30.1309C78.9574 30.1309 80.7862 31.9763 80.7862 34.2528L80.7862 39.5259C81.3481 39.4809 81.9201 39.4578 82.5 39.4578C83.06 39.4578 83.6127 39.4794 84.156 39.5213V34.2528ZM79.7129 47.1031C79.7129 48.5509 78.9133 49.7246 77.9269 49.7246C76.9404 49.7246 76.1408 48.5509 76.1408 47.1031C76.1408 45.6552 76.9404 44.4815 77.9269 44.4815C78.9133 44.4815 79.7129 45.6552 79.7129 47.1031ZM87.3444 49.7246C88.3308 49.7246 89.1304 48.5509 89.1304 47.103C89.1304 45.6552 88.3308 44.4815 87.3444 44.4815C86.358 44.4815 85.5583 45.6552 85.5583 47.103C85.5583 48.5509 86.358 49.7246 87.3444 49.7246Z\"\n          fill=\"#ED8103\"\n        />\n      </g>\n      <defs>\n        <filter\n          id=\"ranks_filter0_d\"\n          x=\"114.519\"\n          y=\"29.3848\"\n          width=\"48.5135\"\n          height=\"49.8842\"\n          filterUnits=\"userSpaceOnUse\"\n          colorInterpolationFilters=\"sRGB\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n          <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\n          <feOffset />\n          <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.4 0\" />\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\" />\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\" />\n        </filter>\n        <filter\n          id=\"ranks_filter1_d\"\n          x=\"3.28589\"\n          y=\"29.46\"\n          width=\"48.5135\"\n          height=\"49.81\"\n          filterUnits=\"userSpaceOnUse\"\n          colorInterpolationFilters=\"sRGB\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n          <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\n          <feOffset />\n          <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.4 0\" />\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\" />\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\" />\n        </filter>\n        <filter\n          id=\"ranks_filter2_d\"\n          x=\"40.1174\"\n          y=\"3.63086\"\n          width=\"85.7651\"\n          height=\"82.5\"\n          filterUnits=\"userSpaceOnUse\"\n          colorInterpolationFilters=\"sRGB\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n          <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\n          <feOffset />\n          <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.4 0\" />\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\" />\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\" />\n        </filter>\n      </defs>\n    </Svg>\n  )\n}\n\nexport default Ranks\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Prizes: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 166 88\" {...props}>\n      <ellipse\n        cx=\"23.0051\"\n        cy=\"18.3632\"\n        rx=\"13.0661\"\n        ry=\"8.88493\"\n        transform=\"rotate(-30 23.0051 18.3632)\"\n        fill=\"#8B5403\"\n      />\n      <path\n        d=\"M159.727 43.7806L159.77 43.7919L159.973 43.1741L161.103 39.7323C164.001 30.9086 159.743 21.5299 151.642 17.7132C151.789 16.1944 151.263 14.6877 150.238 13.5899C150.086 13.3529 149.872 13.1535 149.611 13.0189C149.075 12.6058 148.449 12.2886 147.749 12.101C145.315 11.4488 142.823 12.6074 141.703 14.7513L119.937 8.91933C120.039 6.50232 118.46 4.25298 116.026 3.6008C113.411 2.89997 110.826 4.28278 109.819 6.58196C101.04 6.03812 92.8763 11.9892 91.0014 20.9487L90.2594 24.4945L90.1261 25.131L90.1687 25.1424C89.5399 27.7344 88.8998 30.8111 88.1322 34.5005L88.1295 34.5136L86.9326 40.2665L86.9277 40.2901C85.9982 44.7578 85.275 48.2342 84.8695 51.0918C83.7438 56.9057 83.3169 60.6363 84.1713 63.9977C85.1476 67.8392 87.2727 71.2915 90.2627 73.8935C91.9926 75.3989 94.1092 76.4708 96.9734 77.4884C99.8237 78.5012 103.468 79.4776 108.272 80.7649L108.302 80.773L116.208 82.8913L116.238 82.8994C121.043 84.1867 124.687 85.1631 127.661 85.7113C130.651 86.2621 133.02 86.3921 135.271 85.9533C139.161 85.1949 142.727 83.2677 145.494 80.429C147.914 77.945 149.41 74.5005 151.342 68.902C152.42 66.2248 153.532 62.853 154.96 58.52L154.968 58.4965L156.808 52.9156L156.812 52.9036C157.992 49.3245 158.976 46.3398 159.727 43.7806Z\"\n        fill=\"black\"\n        stroke=\"#452A7A\"\n        strokeWidth=\"1.375\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M148.5 15.364C148.03 15.2381 147.53 15.2845 147.091 15.4947L146.959 15.5582C146.485 15.7851 145.917 15.5851 145.69 15.1114C145.463 14.6377 145.663 14.0696 146.137 13.8427L146.269 13.7792C147.118 13.3727 148.083 13.2831 148.992 13.5266L149.105 13.5569C149.612 13.6929 149.914 14.2144 149.778 14.7218C149.642 15.2292 149.12 15.5303 148.613 15.3943L148.5 15.364Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M112.233 6.31574L112.345 6.22013C112.887 5.75575 113.577 5.50049 114.29 5.50049L114.407 5.50049\"\n        stroke=\"white\"\n        strokeWidth=\"1.90226\"\n        strokeLinecap=\"round\"\n      />\n      <path\n        d=\"M87.9324 39.6304C90.1912 28.7906 91.3206 23.3708 94.3124 19.7721C96.942 16.6092 100.537 14.3964 104.545 13.4733C109.106 12.423 114.453 13.8559 125.149 16.7218L133.644 18.9981C144.339 21.8639 149.687 23.2968 153.111 26.4865C156.121 29.2902 158.128 33.0039 158.824 37.0579C159.615 41.6703 157.884 46.9288 154.42 57.4457L152.725 62.5907C149.597 72.0892 148.033 76.8385 145.001 79.9494C142.332 82.6879 138.892 84.5471 135.139 85.2787C130.875 86.1099 126.045 84.8158 116.386 82.2275L108.48 80.1091C98.8203 77.5208 93.9905 76.2267 90.7137 73.3751C87.8293 70.8649 85.7792 67.5345 84.8373 63.8285C83.7673 59.6186 84.7873 54.7235 86.8274 44.9334L87.9324 39.6304Z\"\n        fill=\"#BDC2C4\"\n      />\n      <path\n        d=\"M88.8022 34.6542C91.0582 23.8107 92.1862 18.3889 95.1778 14.7889C97.8073 11.6247 101.402 9.41089 105.412 8.48722C109.973 7.43633 115.322 8.86964 126.02 11.7363L135.382 14.2446C146.08 17.1112 151.429 18.5445 154.854 21.7353C157.864 24.5397 159.871 28.2545 160.566 32.3095C161.357 36.923 159.623 42.1824 156.155 52.7012L154.315 58.2818C151.184 67.7766 149.619 72.524 146.587 75.6336C143.919 78.3709 140.478 80.2291 136.726 80.9603C132.463 81.7909 127.635 80.4971 117.978 77.9095L109.26 75.5735C99.603 72.986 94.7746 71.6922 91.4983 68.8415C88.6142 66.3322 86.564 63.0028 85.6215 59.2978C84.5508 55.089 85.569 50.1951 87.6053 40.4071L88.8022 34.6542Z\"\n        fill=\"#E9EAEB\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M159.319 42.9599L90.9318 24.6356L91.6739 21.0899C93.7219 11.3031 103.571 5.24622 113.229 7.83408L148.41 17.2608C158.068 19.8486 163.569 30.0186 160.449 39.5182L159.319 42.9599Z\"\n        fill=\"#7645D9\"\n      />\n      <path\n        d=\"M147.666 27.7212C146.911 30.5419 144.011 32.2158 141.191 31.46C138.37 30.7042 136.696 27.8049 137.452 24.9842C138.208 22.1636 141.107 20.4896 143.928 21.2454C146.748 22.0012 148.422 24.9005 147.666 27.7212Z\"\n        fill=\"#452A7A\"\n      />\n      <path\n        d=\"M141.478 17.752C142.106 15.4107 144.512 14.0213 146.854 14.6486C149.615 15.3886 150.943 18.5293 149.551 21.0261L145.96 27.4631C145.184 28.8529 143.564 29.5381 142.027 29.1263C140.174 28.6297 139.074 26.7249 139.571 24.8718L141.478 17.752Z\"\n        fill=\"#666171\"\n      />\n      <path\n        d=\"M141.944 16.0147C142.601 13.5639 145.12 12.1095 147.571 12.7662C150.449 13.5373 151.843 16.8011 150.41 19.4131L147.762 24.2409C146.891 25.8288 145.048 26.616 143.298 26.1472C141.202 25.5854 139.957 23.4302 140.519 21.3334L141.944 16.0147Z\"\n        fill=\"#BDC2C4\"\n      />\n      <path\n        d=\"M108.288 17.1691C107.532 19.9898 109.206 22.8891 112.026 23.6449C114.847 24.4007 117.746 22.7268 118.502 19.9061C119.258 17.0854 117.584 14.1861 114.763 13.4303C111.943 12.6745 109.043 14.3485 108.288 17.1691Z\"\n        fill=\"#452A7A\"\n      />\n      <path\n        d=\"M118.631 11.6295C119.258 9.28816 117.869 6.88156 115.527 6.2542C112.766 5.51423 110.045 7.57007 110.003 10.4288L109.894 17.7989C109.871 19.39 110.931 20.7937 112.468 21.2055C114.322 21.7021 116.226 20.6023 116.723 18.7492L118.631 11.6295Z\"\n        fill=\"#666171\"\n      />\n      <path\n        d=\"M119.096 9.89168C119.753 7.44087 118.298 4.92175 115.848 4.26505C112.97 3.49399 110.131 5.62354 110.066 8.60199L109.945 14.107C109.905 15.9176 111.108 17.5209 112.857 17.9896C114.954 18.5515 117.109 17.3071 117.671 15.2104L119.096 9.89168Z\"\n        fill=\"#BDC2C4\"\n      />\n      <path\n        d=\"M109.821 64.8101L123.241 47.6187L113.272 44.9475L114.769 39.3618L132.922 44.2261L131.8 48.4153L117.423 66.8473L109.821 64.8101Z\"\n        fill=\"#7645D9\"\n      />\n      <mask\n        id=\"rules-path-15-outside-1\"\n        maskUnits=\"userSpaceOnUse\"\n        x=\"-14.7755\"\n        y=\"-20.4542\"\n        width=\"121.076\"\n        height=\"120.71\"\n        fill=\"black\"\n      >\n        <rect fill=\"white\" x=\"-14.7755\" y=\"-20.4542\" width=\"121.076\" height=\"120.71\" />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M12.2885 18.858C11.3276 21.0353 11.4477 23.1335 12.5342 25.0154C13.6207 26.8973 15.3778 28.0504 17.7439 28.3069C19.004 28.4434 20.4703 28.3256 22.1096 27.8814C22.6219 27.4219 23.1478 26.9833 23.6865 26.5658L22.2789 24.1278L20.0993 25.3862C19.2224 25.8924 18.1012 25.592 17.5949 24.7151L17.139 23.9254L15.3248 20.7832C14.8186 19.9064 15.119 18.7851 15.9959 18.2789L16.7647 17.835L16.7816 17.825L18.3527 16.9179L18.3698 16.9083L23.8763 13.7291L26.2454 12.3613C27.1222 11.855 28.2435 12.1555 28.7498 13.0323L31.0198 16.9642C31.5261 17.8411 31.2257 18.9624 30.3488 19.4686L28.1696 20.7268L29.5216 23.0685C30.2654 22.7354 31.0226 22.4341 31.7913 22.1647C32.8428 21.0629 33.586 19.9543 34.0562 18.889C35.0171 16.7116 34.8971 14.6134 33.8105 12.7315C32.724 10.8496 30.967 9.69652 28.6008 9.44007C26.1639 9.17594 22.9557 9.86344 19.2167 12.0221C15.4778 14.1808 13.2783 16.6154 12.2885 18.858ZM38.2741 20.6829C39.7709 17.2484 39.6212 13.6291 37.7798 10.4398C35.9283 7.23299 32.8452 5.28992 29.0947 4.88342C25.415 4.4846 21.23 5.56738 16.9251 8.05285C12.6201 10.5383 9.58991 13.6212 8.09544 17.0073C6.57221 20.4587 6.71341 24.1002 8.56488 27.3071C10.4164 30.5139 13.4995 32.457 17.25 32.8635C17.3896 32.8786 17.5299 32.8916 17.6708 32.9025C17.1667 33.6233 16.6881 34.3745 16.237 35.1559C15.7853 35.9381 15.3737 36.729 15.0013 37.5267C14.4961 38.2488 14.0165 39.0014 13.5644 39.7845C4.96028 54.6872 10.8692 72.7308 25.9739 81.4515C41.0786 90.1722 59.6592 86.2677 68.2633 71.3649C68.7149 70.5827 69.1265 69.7918 69.499 68.9941C70.0042 68.2721 70.4838 67.5194 70.9359 66.7364C75.1284 59.4748 75.8751 51.4674 73.7911 44.1563C78.8336 50.8781 84.0352 55.0651 87.329 54.6411C88.6392 54.8577 89.8265 54.6982 90.8385 54.114C95.9939 51.1375 93.8782 38.7058 86.5854 26.0742C79.2926 13.4427 69.5842 5.39456 64.4288 8.37103C60.1654 10.8325 60.8747 19.7606 65.3725 29.9204C65.2907 29.9412 65.2096 29.9667 65.1294 29.9969C63.1856 28.1445 60.977 26.4842 58.5264 25.0694C52.0608 21.3365 44.9584 19.9169 38.2741 20.6829Z\"\n        />\n      </mask>\n      <path\n        d=\"M12.2885 18.858L13.5465 19.4132L13.5465 19.4132L12.2885 18.858ZM17.7439 28.3069L17.892 26.9399L17.7439 28.3069ZM22.1096 27.8814L22.4692 29.2086L22.7846 29.1231L23.0279 28.9049L22.1096 27.8814ZM23.6865 26.5658L24.5289 27.6525L25.4773 26.9174L24.8773 25.8783L23.6865 26.5658ZM22.2789 24.1278L23.4697 23.4403L22.7822 22.2495L21.5914 22.937L22.2789 24.1278ZM20.0993 25.3862L20.7868 26.577L20.0993 25.3862ZM16.7647 17.835L17.4522 19.0258L17.4584 19.0222L17.4646 19.0185L16.7647 17.835ZM16.7816 17.825L16.0941 16.6342L16.0878 16.6378L16.0816 16.6415L16.7816 17.825ZM18.3527 16.9179L17.6777 15.72L17.6714 15.7235L17.6652 15.7271L18.3527 16.9179ZM18.3698 16.9083L19.0447 18.1062L19.051 18.1027L19.0573 18.0991L18.3698 16.9083ZM23.8763 13.7291L24.5638 14.9199L23.8763 13.7291ZM28.7498 13.0323L27.559 13.7198L28.7498 13.0323ZM31.0198 16.9642L32.2106 16.2767L31.0198 16.9642ZM28.1696 20.7268L27.4821 19.536L26.2913 20.2235L26.9788 21.4143L28.1696 20.7268ZM29.5216 23.0685L28.3308 23.756L28.9512 24.8305L30.0836 24.3234L29.5216 23.0685ZM31.7913 22.1647L32.2459 23.4624L32.5579 23.3531L32.786 23.114L31.7913 22.1647ZM34.0562 18.889L32.7982 18.3338L32.7982 18.3338L34.0562 18.889ZM28.6008 9.44007L28.749 8.07307L28.749 8.07307L28.6008 9.44007ZM38.2741 20.6829L37.0136 20.1336L36.0605 22.3206L38.4307 22.049L38.2741 20.6829ZM29.0947 4.88342L29.2429 3.51642L29.0947 4.88342ZM8.09544 17.0073L6.83751 16.4522L8.09544 17.0073ZM17.25 32.8635L17.1019 34.2305L17.1019 34.2305L17.25 32.8635ZM17.6708 32.9025L18.7976 33.6906L20.1782 31.7167L17.7765 31.5316L17.6708 32.9025ZM16.237 35.1559L17.4277 35.8434L16.237 35.1559ZM15.0013 37.5267L16.1279 38.315L16.1966 38.2169L16.2472 38.1084L15.0013 37.5267ZM13.5644 39.7845L12.3736 39.097L13.5644 39.7845ZM25.9739 81.4515L26.6614 80.2607L25.9739 81.4515ZM68.2633 71.3649L67.0725 70.6774L67.0725 70.6774L68.2633 71.3649ZM69.499 68.9941L68.3724 68.2058L68.3037 68.304L68.2531 68.4125L69.499 68.9941ZM70.9359 66.7364L69.7451 66.0489L70.9359 66.7364ZM73.7911 44.1563L74.891 43.3312L72.4688 44.5332L73.7911 44.1563ZM87.329 54.6411L87.5533 53.2845L87.3539 53.2515L87.1535 53.2773L87.329 54.6411ZM65.3725 29.9204L65.7112 31.2531L67.2886 30.8521L66.6298 29.3638L65.3725 29.9204ZM65.1294 29.9969L64.1808 30.9923L64.8063 31.5885L65.6148 31.2834L65.1294 29.9969ZM58.5264 25.0694L59.2139 23.8786L58.5264 25.0694ZM13.725 24.3279C12.8676 22.843 12.7545 21.2077 13.5465 19.4132L11.0306 18.3028C9.9007 20.8629 10.0277 23.4241 11.3434 25.7029L13.725 24.3279ZM17.892 26.9399C15.9419 26.7285 14.5823 25.8129 13.725 24.3279L11.3434 25.7029C12.6591 27.9818 14.8136 29.3723 17.5957 29.6739L17.892 26.9399ZM21.7501 26.5543C20.2488 26.961 18.9559 27.0552 17.892 26.9399L17.5957 29.6739C19.0521 29.8317 20.6919 29.6901 22.4692 29.2086L21.7501 26.5543ZM22.8442 25.479C22.2795 25.9167 21.7282 26.3764 21.1914 26.8579L23.0279 28.9049C23.5155 28.4674 24.0162 28.0499 24.5289 27.6525L22.8442 25.479ZM21.0881 24.8153L22.4957 27.2533L24.8773 25.8783L23.4697 23.4403L21.0881 24.8153ZM20.7868 26.577L22.9664 25.3185L21.5914 22.937L19.4118 24.1954L20.7868 26.577ZM16.4041 25.4026C17.2901 26.9371 19.2523 27.4629 20.7868 26.577L19.4118 24.1954C19.1926 24.322 18.9122 24.2468 18.7857 24.0276L16.4041 25.4026ZM15.9482 24.6129L16.4041 25.4026L18.7857 24.0276L18.3297 23.2379L15.9482 24.6129ZM14.134 21.4707L15.9482 24.6129L18.3297 23.2379L16.5156 20.0957L14.134 21.4707ZM15.3084 17.0881C13.7738 17.974 13.2481 19.9362 14.134 21.4707L16.5156 20.0957C16.389 19.8765 16.4641 19.5962 16.6834 19.4696L15.3084 17.0881ZM16.0772 16.6442L15.3084 17.0881L16.6834 19.4696L17.4522 19.0258L16.0772 16.6442ZM16.0816 16.6415L16.0647 16.6515L17.4646 19.0185L17.4815 19.0085L16.0816 16.6415ZM17.6652 15.7271L16.0941 16.6342L17.4691 19.0158L19.0402 18.1087L17.6652 15.7271ZM17.6948 15.7104L17.6777 15.72L19.0276 18.1159L19.0447 18.1062L17.6948 15.7104ZM23.1888 12.5383L17.6823 15.7175L19.0573 18.0991L24.5638 14.9199L23.1888 12.5383ZM25.5579 11.1705L23.1888 12.5383L24.5638 14.9199L26.9329 13.5521L25.5579 11.1705ZM29.9405 12.3448C29.0546 10.8103 27.0924 10.2846 25.5579 11.1705L26.9329 13.5521C27.1521 13.4255 27.4324 13.5006 27.559 13.7198L29.9405 12.3448ZM32.2106 16.2767L29.9405 12.3448L27.559 13.7198L29.829 17.6517L32.2106 16.2767ZM31.0363 20.6594C32.5708 19.7734 33.0966 17.8113 32.2106 16.2767L29.829 17.6517C29.9556 17.871 29.8805 18.1513 29.6613 18.2778L31.0363 20.6594ZM28.8571 21.9176L31.0363 20.6594L29.6613 18.2778L27.4821 19.536L28.8571 21.9176ZM30.7124 22.381L29.3604 20.0393L26.9788 21.4143L28.3308 23.756L30.7124 22.381ZM31.3367 20.8671C30.5318 21.1491 29.7388 21.4646 28.9596 21.8136L30.0836 24.3234C30.792 24.0061 31.5134 23.7191 32.2459 23.4624L31.3367 20.8671ZM32.7982 18.3338C32.4014 19.233 31.7548 20.2114 30.7966 21.2154L32.786 23.114C33.9308 21.9145 34.7706 20.6756 35.3141 19.4442L32.7982 18.3338ZM32.6198 13.419C33.4771 14.904 33.5903 16.5392 32.7982 18.3338L35.3141 19.4442C36.444 16.884 36.317 14.3228 35.0013 12.044L32.6198 13.419ZM28.4527 10.8071C30.4028 11.0184 31.7624 11.9341 32.6198 13.419L35.0013 12.044C33.6856 9.76517 31.5311 8.37461 28.749 8.07307L28.4527 10.8071ZM19.9042 13.2129C23.473 11.1525 26.3882 10.5833 28.4527 10.8071L28.749 8.07307C25.9395 7.76857 22.4383 8.57442 18.5292 10.8313L19.9042 13.2129ZM13.5465 19.4132C14.3849 17.5134 16.3354 15.2734 19.9042 13.2129L18.5292 10.8313C14.6201 13.0883 12.1716 15.7175 11.0306 18.3028L13.5465 19.4132ZM36.589 11.1273C38.2022 13.9214 38.3443 17.0803 37.0136 20.1336L39.5346 21.2322C41.1975 17.4166 41.0402 13.3369 38.9706 9.75234L36.589 11.1273ZM28.9465 6.25041C32.2821 6.61194 34.9672 8.3183 36.589 11.1273L38.9706 9.75234C36.8895 6.14768 33.4083 3.96789 29.2429 3.51642L28.9465 6.25041ZM17.6126 9.24363C21.748 6.85604 25.6399 5.89203 28.9465 6.25041L29.2429 3.51642C25.1901 3.07717 20.712 4.27872 16.2376 6.86206L17.6126 9.24363ZM9.35338 17.5625C10.6963 14.5197 13.4771 11.6312 17.6126 9.24363L16.2376 6.86206C11.7631 9.4454 8.4835 12.7227 6.83751 16.4522L9.35338 17.5625ZM9.75567 26.6196C8.13387 23.8106 7.99867 20.632 9.35338 17.5625L6.83751 16.4522C5.14575 20.2853 5.29295 24.3899 7.3741 27.9946L9.75567 26.6196ZM17.3982 31.4965C14.0626 31.135 11.3775 29.4286 9.75567 26.6196L7.3741 27.9946C9.45525 31.5993 12.9364 33.779 17.1019 34.2305L17.3982 31.4965ZM17.7765 31.5316C17.6496 31.5218 17.5235 31.5101 17.3982 31.4965L17.1019 34.2305C17.2557 34.2472 17.4101 34.2615 17.5652 34.2734L17.7765 31.5316ZM17.4277 35.8434C17.8592 35.0962 18.3164 34.3785 18.7976 33.6906L16.5441 32.1144C16.0171 32.868 15.5171 33.6527 15.0462 34.4684L17.4277 35.8434ZM16.2472 38.1084C16.6027 37.3469 16.9959 36.5914 17.4277 35.8434L15.0462 34.4684C14.5748 35.2849 14.1447 36.1111 13.7554 36.9451L16.2472 38.1084ZM14.7552 40.472C15.1875 39.7232 15.6457 39.0042 16.1279 38.315L13.8747 36.7384C13.3465 37.4934 12.8455 38.2797 12.3736 39.097L14.7552 40.472ZM26.6614 80.2607C12.1324 71.8724 6.57642 54.638 14.7552 40.472L12.3736 39.097C3.34414 54.7365 9.606 73.5892 25.2864 82.6423L26.6614 80.2607ZM67.0725 70.6774C58.8938 84.8434 41.1904 88.649 26.6614 80.2607L25.2864 82.6423C40.9667 91.6953 60.4246 87.6919 69.4541 72.0524L67.0725 70.6774ZM68.2531 68.4125C67.8976 69.1739 67.5044 69.9295 67.0725 70.6774L69.4541 72.0524C69.9255 71.2359 70.3555 70.4098 70.7449 69.5758L68.2531 68.4125ZM69.7451 66.0489C69.3128 66.7976 68.8546 67.5166 68.3724 68.2058L70.6256 69.7824C71.1538 69.0275 71.6548 68.2412 72.1267 67.4239L69.7451 66.0489ZM72.4688 44.5332C74.4538 51.4974 73.7458 59.1195 69.7451 66.0489L72.1267 67.4239C76.511 59.83 77.2963 51.4374 75.1134 43.7794L72.4688 44.5332ZM87.1535 53.2773C86.0926 53.4139 84.3588 52.7928 82.0635 50.9957C79.8452 49.259 77.3661 46.6305 74.891 43.3312L72.6912 44.9814C75.2587 48.4039 77.9016 51.2298 80.3682 53.161C82.7577 55.0318 85.2716 56.2923 87.5046 56.0048L87.1535 53.2773ZM90.151 52.9232C89.4703 53.3162 88.6194 53.4608 87.5533 53.2845L87.1047 55.9977C88.6589 56.2546 90.1828 56.0803 91.526 55.3047L90.151 52.9232ZM85.3946 26.7617C88.982 32.9754 91.2588 39.0803 92.0217 43.9285C92.4039 46.3566 92.394 48.3932 92.0349 49.943C91.6783 51.4825 91.0104 52.427 90.151 52.9232L91.526 55.3047C93.2443 54.3127 94.2452 52.587 94.714 50.5637C95.1803 48.5507 95.1523 46.1318 94.7383 43.501C93.9091 38.2313 91.4816 31.8046 87.7762 25.3867L85.3946 26.7617ZM65.1163 9.56182C65.9757 9.06567 67.1276 8.95949 68.6391 9.42036C70.1609 9.88436 71.9295 10.8941 73.8413 12.4391C77.6585 15.5239 81.8072 20.5481 85.3946 26.7617L87.7762 25.3867C84.0708 18.9688 79.7189 13.6532 75.5698 10.3002C73.4985 8.62624 71.4176 7.39255 69.4412 6.78992C67.4545 6.18418 65.4597 6.18817 63.7413 7.18025L65.1163 9.56182ZM66.6298 29.3638C64.4217 24.3762 63.1828 19.7727 62.9882 16.1844C62.788 12.4931 63.6972 10.3812 65.1163 9.56182L63.7413 7.18025C60.897 8.82242 60.0292 12.4052 60.2422 16.3333C60.4608 20.3643 61.8254 25.3048 64.1152 30.477L66.6298 29.3638ZM65.6148 31.2834C65.6467 31.2713 65.6789 31.2613 65.7112 31.2531L65.0338 28.5878C64.9026 28.6211 64.7724 28.662 64.6439 28.7105L65.6148 31.2834ZM57.8389 26.2601C60.1958 27.6209 62.3166 29.2157 64.1808 30.9923L66.078 29.0015C64.0546 27.0732 61.7582 25.3475 59.2139 23.8786L57.8389 26.2601ZM38.4307 22.049C44.8137 21.3174 51.6212 22.6704 57.8389 26.2601L59.2139 23.8786C52.5005 20.0026 45.1031 18.5163 38.1176 19.3168L38.4307 22.049Z\"\n        fill=\"#8B5403\"\n        mask=\"url(#rules-path-15-outside-1)\"\n      />\n      <path\n        d=\"M35.7958 11.5861C38.7338 16.6748 36.3184 23.0657 28.2745 27.7098C20.2306 32.354 13.4882 31.2504 10.5502 26.1617C7.6122 21.0729 10.0276 14.682 18.0716 10.0379C26.1155 5.39373 32.8579 6.49733 35.7958 11.5861Z\"\n        stroke=\"#FFAF00\"\n        strokeWidth=\"4.58333\"\n      />\n      <rect\n        x=\"21.1997\"\n        y=\"22.2578\"\n        width=\"6.80194\"\n        height=\"12.1463\"\n        rx=\"1.83333\"\n        transform=\"rotate(-30 21.1997 22.2578)\"\n        fill=\"#EB8C00\"\n      />\n      <rect\n        x=\"14.4087\"\n        y=\"19.1958\"\n        width=\"15.5018\"\n        height=\"8.20682\"\n        rx=\"1.83333\"\n        transform=\"rotate(-30 14.4087 19.1958)\"\n        fill=\"#FFAF00\"\n      />\n      <rect\n        x=\"14.4087\"\n        y=\"19.1958\"\n        width=\"12.7662\"\n        height=\"7.29495\"\n        rx=\"1.83333\"\n        transform=\"rotate(-30 14.4087 19.1958)\"\n        fill=\"#FFD800\"\n      />\n      <rect\n        x=\"15.9883\"\n        y=\"18.2837\"\n        width=\"3.64748\"\n        height=\"7.29495\"\n        rx=\"0.916667\"\n        transform=\"rotate(-30 15.9883 18.2837)\"\n        fill=\"#FFE971\"\n      />\n      <path\n        d=\"M68.2638 71.365C59.6597 86.2677 41.0791 90.1722 25.9744 81.4515C10.8697 72.7308 4.96079 54.6873 13.5649 39.7845C22.169 24.8818 40.7497 20.9772 55.8543 29.6979C70.959 38.4186 76.8679 56.4622 68.2638 71.365Z\"\n        fill=\"#EB8C00\"\n      />\n      <path\n        d=\"M70.9367 66.7365C62.3326 81.6393 43.7519 85.5438 28.6472 76.8231C13.5426 68.1024 7.63365 50.0589 16.2378 35.1561C24.8419 20.2533 43.4225 16.3488 58.5272 25.0695C73.6319 33.7902 79.5408 51.8338 70.9367 66.7365Z\"\n        fill=\"#FFD800\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M73.336 42.7928C72.1676 39.3125 70.3506 36.0156 67.9538 33.0637L12.3538 47.6364C12.0678 51.308 12.4971 54.9678 13.5738 58.4565L73.336 42.7928ZM21.637 71.5867C20.0157 69.9897 18.5872 68.2558 17.3655 66.4178L74.858 51.349C74.9134 53.4863 74.7304 55.6422 74.2952 57.785L21.637 71.5867Z\"\n        fill=\"#FFE971\"\n      />\n      <path\n        d=\"M67.1497 64.5505C59.6648 77.5147 43.6037 80.9706 30.5905 73.4573C17.5772 65.9441 12.5396 50.3069 20.0244 37.3427C27.5093 24.3786 43.5703 20.9227 56.5836 28.4359C69.5969 35.9491 74.6345 51.5863 67.1497 64.5505Z\"\n        fill=\"#FFC700\"\n      />\n      <path\n        d=\"M64.3261 62.6393C57.8043 73.9353 43.9208 76.665 32.5342 70.0909C21.1476 63.5169 16.5698 50.1285 23.0915 38.8325C29.6132 27.5366 43.4968 24.8069 54.8834 31.3809C66.27 37.955 70.8478 51.3434 64.3261 62.6393Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M58.5405 36.7766C60.1737 38.2809 57.6801 39.3388 55.8231 38.1216C52.3647 35.8549 48.2232 34.5477 43.7665 34.5703C37.3446 34.6029 31.5492 37.3901 27.4927 41.8132C26.1156 43.3146 23.5956 42.6164 24.6143 40.8521C30.7645 30.1996 43.6876 27.5275 54.2164 33.6063C55.8082 34.5252 57.254 35.5916 58.5405 36.7766Z\"\n        fill=\"#E7E8E8\"\n      />\n      <path\n        d=\"M30.6208 65.8935C28.9166 64.4701 31.3708 63.3631 33.2893 64.4808C36.3555 66.2673 39.9261 67.2817 43.7415 67.2629C49.7978 67.2331 55.263 64.6058 59.0881 60.4359C60.3868 59.0201 62.7637 59.6785 61.8031 61.3423C56.0043 71.3861 43.8169 73.9039 33.8863 68.1705C32.7115 67.4922 31.621 66.7289 30.6208 65.8935Z\"\n        fill=\"#E7E8E8\"\n      />\n      <rect\n        x=\"33.7368\"\n        y=\"37.8252\"\n        width=\"3.40912\"\n        height=\"13.6365\"\n        rx=\"1.375\"\n        transform=\"rotate(-30 33.7368 37.8252)\"\n        fill=\"#452A7A\"\n      />\n      <rect\n        x=\"56.9727\"\n        y=\"52.2446\"\n        width=\"3.44705\"\n        height=\"11.5698\"\n        rx=\"1.375\"\n        transform=\"rotate(105 56.9727 52.2446)\"\n        fill=\"#452A7A\"\n      />\n      <path\n        d=\"M47.678 48.3345C46.2569 45.873 43.3546 45.207 41.0253 46.5519C38.6959 47.8968 37.8215 50.7431 39.2426 53.2047C40.6638 55.6662 43.5661 56.3321 45.8954 54.9873C48.2248 53.6424 49.0992 50.796 47.678 48.3345Z\"\n        fill=\"#452A7A\"\n      />\n      <rect\n        x=\"66.7754\"\n        y=\"29.0122\"\n        width=\"16.1566\"\n        height=\"5.81639\"\n        rx=\"2.29167\"\n        transform=\"rotate(60 66.7754 29.0122)\"\n        fill=\"#EB8C00\"\n      />\n      <path\n        d=\"M90.8389 54.1137C95.9943 51.1372 93.8787 38.7055 86.5858 26.074C79.293 13.4424 69.5847 5.39431 64.4293 8.37078C59.2739 11.3473 61.3895 23.779 68.6824 36.4105C75.9752 49.0421 85.6835 57.0902 90.8389 54.1137Z\"\n        fill=\"#FFC700\"\n      />\n      <path\n        d=\"M88.4566 54.2706C92.4677 51.984 89.9017 40.8601 83.0926 29.2152C76.2836 17.5703 67.8101 9.81414 63.7989 12.1008C59.7877 14.3875 62.3538 25.5113 69.1628 37.1562C75.9718 48.8011 84.4454 56.5573 88.4566 54.2706Z\"\n        fill=\"#FFD800\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M89.7078 44.8302C89.1905 42.6629 88.3769 40.2439 87.2977 37.6814L61.9074 15.5947C61.7613 17.0988 61.9411 18.9661 62.4166 21.0899L89.7078 44.8302ZM66.0327 31.1485C65.3011 29.595 64.6578 28.0793 64.1093 26.6233L90.3645 49.4624C90.3806 50.4523 90.288 51.3278 90.0807 52.0675L66.0327 31.1485Z\"\n        fill=\"#FFE971\"\n      />\n    </Svg>\n  )\n}\n\nexport default Prizes\n","import { Heading } from '@pancakeswap/uikit'\nimport styled, { DefaultTheme } from 'styled-components'\n\nconst H1SizeStyles = (theme: DefaultTheme) => `\n  font-size: 48px;\n  white-space: nowrap;\n\n  ${theme.mediaQueries.sm} {\n    font-size: 64px;\n  }\n`\n\nconst H2SizeStyles = (theme: DefaultTheme) => `\n  font-size: 32px;\n  white-space: nowrap;\n\n  ${theme.mediaQueries.sm} {\n    font-size: 40px\n  }\n`\n\nconst sharedStyles = (props: HeadingProps) => `\n  text-align: center;\n  line-height: 110%;\n  color: #ffffff;\n  background:  ${props.background ? props.background : 'linear-gradient(#7645d9 0%, #452a7a 100%)'};\n  background-clip: text;\n  -webkit-background-clip: text;\n  ${\n    props.$fill\n      ? `-webkit-text-fill-color: transparent;`\n      : `-webkit-text-stroke: 4px transparent;\n       text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);`\n  }\n`\n\nconst sharedVisiblyHiddenStyles = `\n  visibility: hidden;\n  height: 0px;\n`\n\ninterface HeadingProps {\n  background?: string\n  $fill?: boolean\n}\n\nexport const Heading1Text = styled(Heading)<HeadingProps>`\n  ${({ theme }) => H1SizeStyles(theme)}\n  ${(props) => sharedStyles(props)}\n`\n\nexport const Heading2Text = styled(Heading)<HeadingProps>`\n  ${({ theme }) => H2SizeStyles(theme)}\n  ${(props) => sharedStyles(props)}\n`\n\nexport const VisuallyHiddenHeading1Text = styled(Heading)`\n  ${({ theme }) => H1SizeStyles(theme)}\n  ${sharedVisiblyHiddenStyles}\n`\n\nexport const VisuallyHiddenHeading2Text = styled(Heading)`\n  ${({ theme }) => H2SizeStyles(theme)}\n  ${sharedVisiblyHiddenStyles}\n`\n\nexport default Heading1Text\n","import React from 'react'\nimport styled from 'styled-components'\nimport { LogoIcon, CheckmarkCircleIcon, CircleOutlineIcon, Flex, Text } from '@pancakeswap/uikit'\nimport { CountdownProps } from '../../types'\n\nconst sharedFlexStyles = `\nflex-direction: column;\nalign-items: center;\njustify-content: center;\n`\n\nconst ExpiredWrapper = styled(Flex)`\n  ${sharedFlexStyles}\n\n  svg {\n    fill: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst ActiveWrapper = styled(Flex)`\n  ${sharedFlexStyles}\n`\n\nconst FutureWrapper = styled(Flex)`\n  ${sharedFlexStyles}\n\n  svg {\n    fill: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nconst StyledText = styled(Text)`\n  margin-top: 4px;\n  font-weight: 600;\n  font-size: 12px;\n`\n\nconst Step: React.FC<CountdownProps> = ({ stepText, index, activeStepIndex }) => {\n  const isExpired = index < activeStepIndex\n  const isActive = index === activeStepIndex\n  const isFuture = index > activeStepIndex\n\n  if (isExpired) {\n    return (\n      <ExpiredWrapper>\n        <CheckmarkCircleIcon />\n        <StyledText color=\"textSubtle\">{stepText}</StyledText>\n      </ExpiredWrapper>\n    )\n  }\n\n  if (isActive) {\n    return (\n      <ActiveWrapper>\n        <LogoIcon />\n        <StyledText color=\"primaryBright\">{stepText}</StyledText>\n      </ActiveWrapper>\n    )\n  }\n\n  if (isFuture) {\n    return (\n      <FutureWrapper>\n        <CircleOutlineIcon />\n        <StyledText color=\"textDisabled\">{stepText}</StyledText>\n      </FutureWrapper>\n    )\n  }\n\n  return <span>Er</span>\n}\n\nexport default Step\n","import React from 'react'\nimport _uniqueId from 'lodash/uniqueId'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CountdownProps } from '../../types'\nimport Step from './Step'\n\nconst Spacer = styled.div<{ isPastSpacer?: boolean }>`\n  margin: 12px 8px 0 8px;\n  width: 28px;\n  background-color: ${({ isPastSpacer, theme }) =>\n    isPastSpacer ? theme.colors.textSubtle : theme.colors.textDisabled};\n  height: 2px;\n  border-radius: 4px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 36px;\n  }\n`\n\nconst ProgressStepper: React.FC<CountdownProps> = ({ steps, activeStepIndex }) => {\n  const { t } = useTranslation()\n  return (\n    <Flex>\n      {steps.map((step, index) => {\n        const isPastSpacer = index < activeStepIndex\n        const stepText = t(step.text).toUpperCase()\n\n        return (\n          <React.Fragment key={_uniqueId('ProgressStep-')}>\n            <Step stepText={stepText} index={index} activeStepIndex={activeStepIndex} />\n            {index + 1 < steps.length && <Spacer isPastSpacer={isPastSpacer} />}\n          </React.Fragment>\n        )\n      })}\n    </Flex>\n  )\n}\n\nexport default ProgressStepper\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Skeleton, PocketWatchIcon, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Timer from 'components/Timer'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { CompetitionSteps, LIVE } from 'config/constants/trading-competition/easterPhases'\nimport useTheme from 'hooks/useTheme'\nimport { Heading2Text } from '../CompetitionHeadingText'\nimport { CompetitionPhaseProps } from '../../types'\nimport ProgressStepper from './ProgressStepper'\n\nconst Wrapper = styled(Flex)`\n  width: fit-content;\n  height: fit-content;\n  background: linear-gradient(180deg, #7645d9 0%, #452a7a 100%);\n  border: 1px solid #7645d9;\n  box-sizing: border-box;\n  border-radius: 0px 0px 24px 24px;\n  padding: 16px 18px;\n  margin: -30px auto 50px;\n  justify-content: space-around;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 16px 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    flex-direction: column;\n    margin: -38px 0 0 36px;\n  }\n`\n\nconst PocketWatchWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n\n  svg {\n    height: 48px;\n    width: 48px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-right: 24px;\n\n    svg {\n      height: 64px;\n      width: 64px;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-bottom: 16px;\n    margin-right: 0;\n  }\n`\n\nconst StyledHeading = styled(Heading2Text)`\n  font-size: 24px;\n  margin-right: 2px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-right: 4px;\n  }\n`\n\nconst Countdown: React.FC<{ currentPhase: CompetitionPhaseProps; hasCompetitionEnded: boolean }> = ({\n  currentPhase,\n  hasCompetitionEnded,\n}) => {\n  const { theme } = useTheme()\n  const { t } = useTranslation()\n  const finishMs = currentPhase.ends\n  const currentMs = Date.now()\n  const secondsUntilNextEvent = (finishMs - currentMs) / 1000\n\n  const { minutes, hours, days } = getTimePeriods(secondsUntilNextEvent)\n\n  const renderTimer = () => {\n    if (hasCompetitionEnded) {\n      return (\n        <StyledHeading background={theme.colors.gradients.gold} $fill>\n          {t('Finished')}!\n        </StyledHeading>\n      )\n    }\n    return (\n      <Timer\n        timerStage={currentPhase.state === LIVE ? `${t('End')}:` : `${t('Start')}:`}\n        minutes={minutes}\n        hours={hours}\n        days={days}\n        HeadingTextComponent={({ children }) => (\n          <StyledHeading background={theme.colors.gradients.gold} $fill>\n            {children}\n          </StyledHeading>\n        )}\n        BodyTextComponent={({ children }) => (\n          <Text bold color=\"#ffff\" fontSize=\"16px\" mr={{ _: '8px', sm: '16px' }}>\n            {children}\n          </Text>\n        )}\n      />\n    )\n  }\n\n  return (\n    <Wrapper>\n      <PocketWatchWrapper>\n        <PocketWatchIcon />\n      </PocketWatchWrapper>\n      <Flex flexDirection=\"column\" justifyContent=\"center\">\n        {!secondsUntilNextEvent ? (\n          <Skeleton height={26} width={190} mb=\"24px\" />\n        ) : (\n          <Flex mb=\"24px\" justifyContent=\"center\" alignItems=\"center\">\n            {renderTimer()}\n          </Flex>\n        )}\n        {!secondsUntilNextEvent ? (\n          <Skeleton height={42} width={190} />\n        ) : (\n          <ProgressStepper steps={CompetitionSteps} activeStepIndex={currentPhase.step.index} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Countdown\n","export default __webpack_public_path__ + \"static/media/storm.2bea7ba6.png\";","import styled from 'styled-components'\nimport { RibbonDownMid, RibbonUpMid, RibbonDownSide, RibbonUpSide } from '../../svgs'\n\nconst MidRibbonStyles = `\nwidth: 100%;\n`\n\nconst RightSideRibbonStyles = `\nposition: absolute;\nright: 0;\nz-index: 1;\ntransform: scaleX(-1);\nright: -31px;\n`\n\nconst LeftSideRibbonStyles = `\nposition: absolute;\nleft: -31px;\nz-index: 1;\n`\n\nexport const RibbonDownMidExpanding = styled(RibbonDownMid)`\n  ${MidRibbonStyles}\n  height: 48px;\n`\n\nexport const RibbonUpMidExpanding = styled(RibbonUpMid)`\n  ${MidRibbonStyles}\n  height: 46px;\n`\n\nexport const RibbonDownRightSide = styled(RibbonDownSide)`\n  ${RightSideRibbonStyles}\n`\n\nexport const RibbonUpRightSide = styled(RibbonUpSide)`\n  ${RightSideRibbonStyles}\n`\n\nexport const RibbonDownLeftSide = styled(RibbonDownSide)`\n  ${LeftSideRibbonStyles}\n`\n\nexport const RibbonUpLeftSide = styled(RibbonUpSide)`\n  ${LeftSideRibbonStyles}\n`\n","import { Heading } from '@pancakeswap/uikit'\nimport styled, { DefaultTheme } from 'styled-components'\n\nconst H1SizeStyles = (theme: DefaultTheme) => `\n  font-size: 48px;\n  white-space: nowrap;\n\n  ${theme.mediaQueries.sm} {\n    font-size: 64px;\n  }\n`\n\nconst H2SizeStyles = (theme: DefaultTheme) => `\n  font-size: 32px;\n  white-space: nowrap;\n\n  ${theme.mediaQueries.sm} {\n    font-size: 40px\n  }\n`\n\nconst sharedStyles = (props: HeadingProps) => `\n  text-align: center;\n  line-height: 110%;\n  color: #ffffff;\n  background:  ${props.background ? props.background : 'linear-gradient(#7645d9 0%, #452a7a 100%)'};\n  background-clip: text;\n  -webkit-background-clip: text;\n  ${\n    props.$fill\n      ? `-webkit-text-fill-color: transparent;`\n      : `-webkit-text-stroke: 4px transparent;\n       text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);`\n  }\n`\n\nconst sharedVisiblyHiddenStyles = `\n  visibility: hidden;\n  height: 0px;\n`\n\ninterface HeadingProps {\n  background?: string\n  $fill?: boolean\n}\n\nexport const Heading1Text = styled(Heading)<HeadingProps>`\n  ${({ theme }) => H1SizeStyles(theme)}\n  ${(props) => sharedStyles(props)}\n`\n\nexport const Heading2Text = styled(Heading)<HeadingProps>`\n  ${({ theme }) => H2SizeStyles(theme)}\n  ${(props) => sharedStyles(props)}\n`\n\nexport const VisuallyHiddenHeading1Text = styled(Heading)`\n  ${({ theme }) => H1SizeStyles(theme)}\n  ${sharedVisiblyHiddenStyles}\n`\n\nexport const VisuallyHiddenHeading2Text = styled(Heading)`\n  ${({ theme }) => H2SizeStyles(theme)}\n  ${sharedVisiblyHiddenStyles}\n`\n\nexport default Heading1Text\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, LaurelLeftIcon, LaurelRightIcon } from '@pancakeswap/uikit'\nimport { RibbonProps } from '../../types'\nimport {\n  RibbonDownMidExpanding,\n  RibbonUpMidExpanding,\n  RibbonDownRightSide,\n  RibbonUpRightSide,\n  RibbonDownLeftSide,\n  RibbonUpLeftSide,\n} from './RibbonStyles'\nimport { Heading2Text, VisuallyHiddenHeading2Text } from '../CompetitionHeadingText'\n\nconst Wrapper = styled(Flex)<{ ribbonDirection?: 'up' | 'down' }>`\n  position: relative;\n  display: inline-flex;\n  align-items: ${({ ribbonDirection }) => (ribbonDirection === 'up' ? 'flex-end' : 'flex-start')};\n  justify-content: center;\n`\n\nconst TextWrapper = styled(Flex)`\n  display: flex;\n  align-items: center;\n  position: absolute;\n  height: 46px;\n  background-color: #7645d9;\n`\n\nconst LaurelWrapper = styled.div<{ dir?: 'left' | 'right' }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  z-index: 2;\n  top: 50%;\n  transform: translate(0, -50%);\n  ${({ dir }) => (dir === 'left' ? `left: 0;` : `right: 0;`)}\n\n  svg {\n    height: 20px;\n    width: auto;\n    path {\n      fill: ${({ theme }) => theme.colors.text};\n    }\n  }\n`\n\nconst Ribbon: React.FC<RibbonProps> = ({ children, ribbonDirection }) => {\n  const RibbonDown = () => {\n    return (\n      <Wrapper ribbonDirection={ribbonDirection}>\n        <RibbonDownLeftSide width=\"32px\" />\n        <LaurelWrapper dir=\"left\">\n          <LaurelLeftIcon />\n        </LaurelWrapper>\n        <div>\n          <RibbonDownMidExpanding preserveAspectRatio=\"none\" />\n          <VisuallyHiddenHeading2Text p=\"0 30px\">{children}</VisuallyHiddenHeading2Text>\n        </div>\n        <TextWrapper>\n          <Heading2Text p=\"0 30px\">{children}</Heading2Text>\n        </TextWrapper>\n        <LaurelWrapper dir=\"right\">\n          <LaurelRightIcon />\n        </LaurelWrapper>\n        <RibbonDownRightSide width=\"32px\" />\n      </Wrapper>\n    )\n  }\n\n  const RibbonUp = () => {\n    return (\n      <Wrapper ribbonDirection={ribbonDirection}>\n        <RibbonUpLeftSide width=\"32px\" />\n        <LaurelWrapper dir=\"left\">\n          <LaurelLeftIcon />\n        </LaurelWrapper>\n        <div>\n          <RibbonUpMidExpanding preserveAspectRatio=\"none\" />\n          <VisuallyHiddenHeading2Text p=\"0 30px\">{children}</VisuallyHiddenHeading2Text>\n        </div>\n        <TextWrapper>\n          <Heading2Text p=\"0 30px\">{children}</Heading2Text>\n        </TextWrapper>\n        <LaurelWrapper dir=\"right\">\n          <LaurelRightIcon />\n        </LaurelWrapper>\n        <RibbonUpRightSide width=\"32px\" />\n      </Wrapper>\n    )\n  }\n\n  return ribbonDirection === 'up' ? <RibbonUp /> : <RibbonDown />\n}\n\nexport default Ribbon\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport { RibbonProps } from '../../types'\nimport Ribbon from '../Ribbon'\n\nconst Wrapper = styled(Flex)<{ marginBottom?: string }>`\n  position: relative;\n  margin-bottom: ${({ marginBottom }) => marginBottom};\n`\n\nconst Spacer = styled.div`\n  height: 54px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 116px;\n  }\n`\n\nconst AbsoluteImageWrapper = styled.div`\n  z-index: 2;\n  position: absolute;\n  /* When the absolute image wrapper is used - offset the image slightly to overlap the ribbon */\n  bottom: -8px;\n`\n\nconst RibbonWrapper = styled(Flex)<{ ribbonDirection?: string }>`\n  position: absolute;\n  width: 100%;\n  z-index: 1;\n  left: 50%;\n  bottom: ${({ ribbonDirection }) => (ribbonDirection === 'down' ? '-54px' : '-50px')};\n  transform: translate(-50%, 0);\n`\n\nconst RibbonWithImage: React.FC<RibbonProps> = ({\n  imageComponent,\n  ribbonDirection = 'down',\n  children,\n  isCardHeader,\n}) => {\n  const marginBottom = () => {\n    if (isCardHeader) {\n      return '36px'\n    }\n\n    if (ribbonDirection === 'down') {\n      return '66px'\n    }\n\n    return '50px'\n  }\n\n  return (\n    <Wrapper alignItems=\"center\" justifyContent=\"center\" marginBottom={marginBottom()}>\n      {isCardHeader ? (\n        <>\n          <Spacer />\n          <AbsoluteImageWrapper>{imageComponent}</AbsoluteImageWrapper>\n        </>\n      ) : (\n        imageComponent\n      )}\n      <RibbonWrapper alignItems=\"center\" justifyContent=\"center\" ribbonDirection={ribbonDirection}>\n        <Ribbon ribbonDirection={ribbonDirection}>{children}</Ribbon>\n      </RibbonWrapper>\n    </Wrapper>\n  )\n}\n\nexport default RibbonWithImage\n","export default __webpack_public_path__ + \"static/media/all-bunnies.82a075e3.png\";","import React from 'react'\nimport { Flex, Text, Heading, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport AllBunniesImage from '../../pngs/all-bunnies.png'\nimport { Heading1Text, Heading2Text } from '../CompetitionHeadingText'\n\nconst TextStyles = (theme) => `\n  text-align: center;\n  ${theme.mediaQueries.md} {\n    text-align: left;\n  }\n`\n\nconst ImageWrapper = styled.div`\n  width: 75%;\n  margin: 0 auto;\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst StyledText = styled(Text)`\n  ${({ theme }) => TextStyles(theme)}\n`\n\nconst StyledHeading1Text = styled(Heading1Text)`\n  ${({ theme }) => TextStyles(theme)}\n`\n\nconst StyledHeading2Text = styled(Heading2Text)`\n  ${({ theme }) => TextStyles(theme)}\n`\n\nconst StyledHeading = styled(Heading)`\n  ${({ theme }) => TextStyles(theme)}\n`\n\nconst BattleBanner = () => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <ImageWrapper>\n        <Image src={AllBunniesImage} alt=\"all the bunnies\" width={1208} height={659} responsive />\n      </ImageWrapper>\n      <StyledText mb=\"16px\" color=\"textSubtle\" bold>\n        {t('Launching')} 07—14, 2021\n      </StyledText>\n      <StyledHeading1Text>{t('VipCat')}</StyledHeading1Text>\n      <StyledHeading2Text background={theme.colors.gradients.gold} $fill>\n        {t('A reward protocol for HODLers!')}\n      </StyledHeading2Text>\n      <StyledHeading scale=\"md\" color=\"inputSecondary\" mt=\"16px\">\n        {t('Join our referal program earlier!')}\n      </StyledHeading>\n    </Flex>\n  )\n}\n\nexport default BattleBanner\n","export default __webpack_public_path__ + \"static/media/syrup-nft.2201815e.png\";","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Button,\n  Flex,\n  AutoRenewIcon,\n  Heading,\n  Text,\n  Image,\n  CrownIcon,\n  TrophyGoldIcon,\n  TeamPlayerIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useTradingCompetitionContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport { useCompetitionCakeRewards, getRewardGroupAchievements } from '../../helpers'\nimport { CompetitionProps } from '../../types'\nimport NftBunnies from '../../pngs/syrup-nft.png'\n\nconst ImageWrapper = styled(Flex)`\n  justify-content: center;\n  width: 100%;\n  height: fit-content;\n  img {\n    border-radius: ${({ theme }) => theme.radii.default};\n  }\n`\n\nconst ClaimModal: React.FC<CompetitionProps> = ({ onDismiss, onClaimSuccess, userTradingInformation }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const tradingCompetitionContract = useTradingCompetitionContract()\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n\n  const { userRewardGroup, userCakeRewards, userPointReward, canClaimNFT } = userTradingInformation\n  const { cakeReward } = useCompetitionCakeRewards(userCakeRewards)\n  const { champion, teamPlayer } = getRewardGroupAchievements(userRewardGroup)\n\n  const handleClaimClick = () => {\n    tradingCompetitionContract.methods\n      .claimReward()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', async () => {\n        toastSuccess('You have claimed your rewards!')\n        onDismiss()\n        onClaimSuccess()\n      })\n      .on('error', (error) => {\n        toastError(t('Error'), error?.message)\n        setIsConfirming(false)\n      })\n  }\n\n  return (\n    <Modal title={t('Collect Winnings')} onDismiss={onDismiss}>\n      <Flex width=\"100%\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" maxWidth=\"360px\">\n        <Text color=\"secondary\" bold fontSize=\"16px\">\n          {t('Congratulations! You won')}:\n        </Text>\n        <Flex mt=\"16px\" alignItems=\"center\">\n          {/* achievements */}\n          <TrophyGoldIcon mr={[0, '4px']} />\n          {champion && <CrownIcon mr={[0, '4px']} />}\n          {teamPlayer && <TeamPlayerIcon mr={[0, '4px']} />}\n          <Text ml={['4px', '8px']}>\n            +{userPointReward} {t('Points')}\n          </Text>\n        </Flex>\n        {/* cake */}\n        <Heading mt=\"16px\" scale=\"md\" mb={canClaimNFT ? '16px' : '0px'}>\n          {cakeReward.toFixed(2)} CAKE\n        </Heading>\n        {/* NFT */}\n        {canClaimNFT ? (\n          <Flex alignItems=\"center\" flexDirection=\"column\" width=\"100%\">\n            <ImageWrapper>\n              <Image src={NftBunnies} width={128} height={128} />\n            </ImageWrapper>\n            <Text mt=\"8px\" fontSize=\"16px\">\n              {t('Collectible NFT')}\n            </Text>\n          </Flex>\n        ) : null}\n        <Button\n          mt=\"24px\"\n          width=\"100%\"\n          onClick={handleClaimClick}\n          disabled={isConfirming}\n          isLoading={isConfirming}\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        >\n          {t('Confirm')}\n        </Button>\n        <Text mt=\"24px\" fontSize=\"12px\" color=\"textSubtle\" textAlign=\"center\">\n          {t('All prizes will be sent directly to your wallet and user account.')}\n        </Text>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ClaimModal\n","import { ReactText } from 'react'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport easterPrizes from 'config/constants/trading-competition/easter'\nimport BigNumber from 'bignumber.js'\n\nexport const localiseTradingVolume = (value: number, decimals = 0) => {\n  return value.toLocaleString('en-US', { maximumFractionDigits: decimals })\n}\n\nexport const useCompetitionCakeRewards = (userCakeReward: ReactText) => {\n  const cakeAsBigNumber = new BigNumber(userCakeReward as string)\n  const cakeBalance = getBalanceNumber(cakeAsBigNumber)\n  const cakePriceBusd = usePriceCakeBusd()\n  return {\n    cakeReward: cakeBalance,\n    dollarValueOfCakeReward: cakePriceBusd.gt(0) ? cakeBalance * cakePriceBusd.toNumber() : null,\n  }\n}\n\n// 1 is a reasonable teamRank default: accessing the first team in the config.\n// We use the smart contract userPointReward to get a users' points\n// Achievement keys are consistent across different teams regardless of team team rank\n// If a teamRank value isn't passed, this helper can be used to return achievement keys for a given userRewardGroup\nexport const getRewardGroupAchievements = (userRewardGroup: string, teamRank = 1) => {\n  const userGroup = easterPrizes[teamRank].filter((prizeGroup) => {\n    return prizeGroup.group === userRewardGroup\n  })[0]\n  const userAchievements = userGroup && userGroup.achievements\n  return userAchievements\n}\n\nexport default localiseTradingVolume\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Flex,\n  LaurelLeftIcon,\n  LaurelRightIcon,\n  Button,\n  CheckmarkCircleIcon,\n  useWalletModal,\n  useModal,\n  Heading,Text,Link,OpenNewIcon\n} from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { FINISHED, OVER } from 'config/constants/trading-competition/easterPhases'\nimport ClaimModal from '../ClaimModal'\nimport { Heading2Text } from '../CompetitionHeadingText'\nimport { CompetitionProps } from '../../types'\n\nconst StyledCard = styled(Card)`\n  display: inline-flex;\n  background: linear-gradient(180deg, #7645d9 0%, #452a7a 100%);\n\n  svg {\n    margin-bottom: 6px;\n    height: 32px;\n    width: auto;\n    fill: ${({ theme }) => theme.colors.warning};\n  }\n`\nconst StyledFlex = styled(Flex)`\n  margin-right:10px;\n  margin-left:10px;\n  ul{\n    list-style:none;\n  }\n`\nconst StyledButton = styled(Button)`\n  margin: 16px 20px 0;\n  z-index: 200;\n\n  svg {\n    margin: 0 4px 0 0;\n    height: 20px;\n    width: auto;\n    fill: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nconst StyledHeadingText = styled(Heading2Text)`\n  white-space: normal;\n`\n\nconst Footer: React.FC<CompetitionProps> = ({\n  userTradingInformation,\n  currentPhase,\n  account,\n  isCompetitionLive,\n  profile,\n  userCanClaimPrizes,\n  finishedAndPrizesClaimed,\n  finishedAndNothingToClaim,\n  isLoading,\n  hasCompetitionEnded,\n  onRegisterSuccess,\n  onClaimSuccess,\n}) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  const [onPresentClaimModal] = useModal(\n    <ClaimModal userTradingInformation={userTradingInformation} onClaimSuccess={onClaimSuccess} />,\n    false,\n  )\n  const { hasRegistered, hasUserClaimed } = userTradingInformation\n  const registeredAndNotStarted = hasRegistered && !isCompetitionLive && !hasCompetitionEnded\n\n  const isButtonDisabled = Boolean(\n    isLoading ||\n      currentPhase.state === OVER ||\n      registeredAndNotStarted ||\n      finishedAndPrizesClaimed ||\n      finishedAndNothingToClaim,\n  )\n\n  const getHeadingText = () => {\n    // Competition live\n    if (isCompetitionLive) {\n      return t('Now Live!')\n    }\n    // Competition finished. Rewards being calculated\n    if (currentPhase.state === FINISHED) {\n      return `${t('Calculating prizes')}...`\n    }\n    // All competition finished states\n    if (hasCompetitionEnded) {\n      return `${t('Finished')}!`\n    }\n    // Competition not started\n    return t('Starting Soon')\n  }\n\n  const getButtonText = () => {\n    // No wallet connected\n    if (!account) {\n      return t('Unlock Wallet')\n    }\n    // User not registered\n    if (!hasRegistered) {\n      return t('I want to Battle!')\n    }\n    // User registered and competition live\n    if (isCompetitionLive) {\n      return t('Trade Now')\n    }\n\n    // User registered and competition finished\n    if (hasCompetitionEnded) {\n      // Claim period has ended\n      if (currentPhase.state === OVER) {\n        return t('Claim period over')\n      }\n      // User has prizes to claim\n      if (userCanClaimPrizes) {\n        return t('Claim prizes')\n      }\n      // User has already claimed prizes\n      if (hasUserClaimed) {\n        return (\n          <>\n            <CheckmarkCircleIcon /> {t('Prizes Claimed!')}\n          </>\n        )\n      }\n      // User has nothing to claim\n      return t('Nothing to claim')\n    }\n\n    // User registered but competition has not started\n    if (!isCompetitionLive) {\n      return (\n        <>\n          <CheckmarkCircleIcon /> {t('Registered!')}\n        </>\n      )\n    }\n\n    // May be useful for debugging - if somehow none of the above conditions are met\n    return 'Whoopsie'\n  }\n\n  const handleCtaClick = () => {\n    // All conditions when button isn't disabled\n\n    // No wallet connected\n    if (!account) {\n      onPresentConnectModal()\n    }\n    // Registered and competition is live\n    if (hasRegistered && isCompetitionLive) {\n      window.location.href = 'https://exchange.pancakeswap.finance/#/swap'\n    }\n    // Registered and competition has finished\n    if (hasRegistered && hasCompetitionEnded) {\n      onPresentClaimModal()\n    }\n  }\n\n  return (\n    <StyledCard>\n      <CardBody>\n        <Flex flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\n          <StyledHeadingText>{t(' ')}</StyledHeadingText>\n          {/* Hide button if in the pre-claim, FINISHED phase */}\n          <Flex alignItems=\"flex-start\">\n              <LaurelLeftIcon />\n              {/* <StyledButton disabled={false} onClick={() => handleCtaClick()}>\n                {getButtonText()}\n              </StyledButton> */}\n              <StyledFlex alignItems=\"flex-left\">\n                <ul>\n                  <li>\n                  <Heading as=\"h4\" color=\"white\" mb=\"16px\">\n                  {t('Buy')}\n                  </Heading>\n                  </li>\n                  <li>\n                  <Link external href=\"https://\">\n                    {t(\"pancakeswap\")}\n                  </Link>\n                  </li>\n                </ul>\n              </StyledFlex>\n              <StyledFlex alignItems=\"flex-left\">\n                <ul>\n                  <li>\n                    <Heading as=\"h4\" color=\"white\" mb=\"16px\">\n                    {t('Statistics')}\n                  </Heading>\n                  </li>\n                  <li><Link external href=\"https://\">{t(\"CoinGecko\")}</Link></li>\n                  <li><Link external href=\"https://\">{t(\"Coinmarketcap\")}</Link></li>\n                </ul>\n              </StyledFlex>\n              <StyledFlex alignItems=\"flex-left\">\n                \n                <ul>\n                  <li>\n                  <Heading as=\"h4\" color=\"white\" mb=\"16px\">\n                    {t('Wallet')}\n                  </Heading>\n                  </li>\n                  <li><Link external href=\"https://\">{t(\"Safepal\")}</Link></li>\n                  <li><Link external href=\"https://\">{t(\"MathWallet\")}</Link></li>\n                  <li><Link external href=\"https://\">{t(\"TrustWallet\")}</Link></li>\n                </ul>\n              </StyledFlex>\n              <StyledFlex alignItems=\"flex-left\">\n                \n                <ul>\n                  <li>\n                  <Heading as=\"h4\" color=\"white\" mb=\"16px\">\n                    {t('Social')}\n                  </Heading>\n                  </li>\n                  <li><Link external href=\"https://\">{t(\"Telegram\")}</Link></li>\n                  <li><Link external href=\"https://\">{t(\"Github\")}</Link></li>\n                  <li><Link external href=\"https://\">{t(\"Medium\")}</Link></li>\n                  <li><Link external href=\"https://\">{t(\"Twitter\")}</Link></li>\n                </ul>\n              </StyledFlex>\n              <LaurelRightIcon />\n          </Flex>\n        </Flex>\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Heading, Card, CardBody } from '@pancakeswap/uikit'\n\nconst RulesCard: React.FC<{ title?: string }> = ({ title, children }) => {\n  return (\n    <Card mb=\"16px\">\n      <CardBody>\n        <Heading textAlign=\"center\" color=\"secondary\" mb=\"16px\">\n          {title}\n        </Heading>\n        {children}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default RulesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport FoldableText from 'components/FoldableText'\n\nconst Wrapper = styled(Flex)`\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 1;\n    margin-top: 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    flex: 2;\n  }\n`\n\nconst StyledCardbody = styled(CardBody)`\n  div:first-child {\n    margin-top: 0px;\n  }\n`\n\nconst FAQ = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <Card>\n        <CardHeader>\n          <Heading scale=\"lg\">{t('Details')}</Heading>\n        </CardHeader>\n        <StyledCardbody>\n          <FoldableText title={t('How to buy GARFI?')} mt=\"24px\">\n            <Text fontSize=\"14px\" color=\"textSubtle\">\n              {t(\n                'GARFI has a 100% fair launch. The only place to buy GARFI is from the PancakeSwap GARFI-BTC. You will need BTCB (Binance BEP-20 version of Bitcoin) to buy GARFI. You will also need some BNB in your wallet to pay for the transaction fees.',\n              )}\n            </Text>\n          </FoldableText>\n          <FoldableText title={t('How does GARFI Referral Program work?')} mt=\"24px\">\n            <Text fontSize=\"14px\" color=\"textSubtle\">\n              -{' '}\n              {t(\n                'GARFI Referral Program is multi-level and rewards referrers forever. A referrer will receive GARFI airdrop rewards from both buy and sell activities of direct and indirect referees. The initial depth is set at 2. The program is 100% decentralized and runs on smart contract. It has no central administrator and is always fair. For more details, read here.',\n              )}\n            </Text>\n          </FoldableText>\n          <FoldableText title={t('How do I receive the GARFI HODL rewards?')} mt=\"24px\">\n            <Text fontSize=\"14px\" color=\"textSubtle\">\n              -{' '}\n              {t(\n                'Simply by staking GARFI. Every BSC block, a percentage of fees from outgoing GARFI transfers will be distributed among GARFI stakers to reward their hodling.',\n              )}\n            </Text>\n          </FoldableText>\n          <FoldableText title={t('Can the community get “rug-pulled” by the team or whales?')} mt=\"24px\">\n            <Text fontSize=\"14px\" color=\"textSubtle\">\n              -{' '}\n              {t(\n                'GARFI members cannot be rug-pulled. The team has no team token and whale traps prevent whale dumps. GARFI’s entire circulation is transferred to PancakeSwap as day-one liquidity and LP token locked by smart contract.',\n              )}\n            </Text>\n          </FoldableText>\n          <FoldableText title={t('A percentage of all outgoing GARFI transfers is charged as fees. Why this way, and where did these fees go?')} mt=\"24px\">\n            <Text fontSize=\"14px\" color=\"textSubtle\">\n              {t('GARFI rewards loyal HODLing and community BUIDLing. The protocol therefore charges a 5% fee on outgoing transfers to discourage excessive speculative dumps. These fees will be allocated for three uses: automatic liquidity provisioning, rewards for referrers, and rewards for HODLers in the GARFI ecosystem.')}\n            </Text>\n          </FoldableText>\n          <FoldableText title={t('Is GARFI audited?')} mt=\"24px\">\n            <Text fontSize=\"14px\" color=\"textSubtle\">\n              {t('Yes. GARFI’s AmrorLab audit report is here.')}\n            </Text>\n          </FoldableText>\n          <FoldableText title={t('Are there GARFI airdrops available?')} mt=\"24px\">\n            <Text fontSize=\"14px\" color=\"textSubtle\">\n              {t('Yes. GARFI community activists frequently organize airdropsIt is part of our community culture! Join our community to find out about the next airdrops and how you can claim them.')}\n            </Text>\n          </FoldableText>\n          <FoldableText title={t('How do I claim my reward(s)?')} mt=\"24px\">\n            <Text fontSize=\"14px\" color=\"textSubtle\">\n              {t(\n                'Go to the airdrop or staking farm pages to claim your rewards”.',\n              )}\n            </Text>\n          </FoldableText>\n        </StyledCardbody>\n      </Card>\n    </Wrapper>\n  )\n}\n\nexport default FAQ\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport RulesCard from './RulesCard'\nimport FAQs from './FAQs'\n\nconst Wrapper = styled(Flex)`\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n    align-items: flex-start;\n  }\n`\n\nconst StyledCardWrapper = styled(Flex)`\n  flex-direction: column;\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 40px;\n    flex: 1;\n  }\n`\n\nconst Rules = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <StyledCardWrapper>\n        <RulesCard title={t('Give out your refer links')}>\n          <Text textAlign=\"center\" fontSize=\"14px\" color=\"textSubtle\">\n            {t('To promote our product')}\n          </Text>\n        </RulesCard>\n        <RulesCard title={t('Play as a team')}>\n          <Text textAlign=\"center\" fontSize=\"14px\" color=\"textSubtle\">\n            {t('You earn every buying and selling token from your team members!')}\n          </Text>\n        </RulesCard>\n      </StyledCardWrapper>\n      <FAQs />\n    </Wrapper>\n  )\n}\n\nexport default Rules\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody } from '@pancakeswap/uikit'\n\ninterface HowToCardProps {\n  number?: number\n  title?: string\n}\n\nconst Inner = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: auto 1fr;\n  grid-template-rows: auto auto;\n`\n\nconst NumberWrapper = styled.div`\n  grid-column: span 1;\n  grid-row: span 2;\n`\n\nconst TitleWrapper = styled.div`\n  grid-column: 2 / 2;\n  grid-row: 1 / 2;\n`\n\nconst ChildrenWrapper = styled.div`\n  grid-column: 2 / 2;\n  grid-row: 2 / 2;\n`\n\nconst HowToJoin: React.FC<HowToCardProps> = ({ number, title, children }) => {\n  return (\n    <Card mb=\"16px\">\n      <CardBody>\n        <Inner>\n          <NumberWrapper>\n            <Heading color=\"textSubtle\">{number}</Heading>\n          </NumberWrapper>\n          <TitleWrapper>\n            <Heading color=\"secondary\">{title}</Heading>\n          </TitleWrapper>\n          <ChildrenWrapper>{children}</ChildrenWrapper>\n        </Inner>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default HowToJoin\n","import React from 'react'\nimport { Flex, Text, Heading, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport HowToCard from './HowToCard'\n\nconst StyledLink = styled(Link)`\n  display: inline;\n  font-size: 14px;\n`\n\nconst HowToJoin = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex flexDirection=\"column\" maxWidth=\"736px\">\n      <Heading color=\"secondary\" scale=\"lg\" mb=\"32px\" textAlign=\"center\">\n        {t('What is vipcat reward protocol?')}\n      </Heading>\n      <HowToCard number={1} title={t('Referral Rewards')}>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Community leaders that refer newcomers will benefit from referred addresses forever. The referral program is multi-level and guaranteed by the smart contract to create strong rewards for leaders who BUIDL the GARFI community.')}\n        </Text>\n      </HowToCard>\n      <HowToCard number={2} title={t('HODL Rewards')}>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t(\n            'A 5% fee is placed on most outgoing transfers of GARFI to discourage excessive speculative trading. This fee is pooled to reward hodlers who believe in the power of coming together to create greater value.',\n          )}\n        </Text>\n      </HowToCard>\n      <HowToCard number={3} title={t('Fair Launch')}>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('No team token. No advisor token. No investor token. GARFI’s entire circulation is transferred to PancakeSwap as day-one liquidity and LP token locked by smart contract.')}\n        </Text>\n      </HowToCard>\n      <HowToCard number={4} title={t('Decentralized Governance')}>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('One token one vote. GARFI is all about the community and all governance topics are decided by token votes. There is no central decision-making group.')}\n        </Text>\n      </HowToCard>\n      <HowToCard number={5} title={t('Accumulative Liquidity')}>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('A portion of the fees paid by GARFI outgoing transfers are automatically allocated to PancakeSwap GARFI-BTC pair to guarantee that GARFI liquidity is always increasing.')}\n        </Text>\n      </HowToCard>\n      <HowToCard number={6} title={t('Whale Traps')}>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('No single address can hodl more than 1% of GARFI’s total circulation. No transfer can exceed 500 million GARFI in size to prevent whale dumps.')}\n        </Text>\n      </HowToCard>\n    </Flex>\n  )\n}\n\nexport default HowToJoin\n","import styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\n\ninterface StickerProps {\n  backgroundColor?: string\n  borderColor?: string\n}\n\nconst Sticker = styled(Flex)<StickerProps>`\n  width: 100%;\n  height: 100%;\n  background-color: ${({ theme, backgroundColor }) => backgroundColor || theme.colors.invertedContrast};\n  border: 2px solid ${({ theme, borderColor }) => borderColor || theme.colors.invertedContrast};\n  border-radius: ${({ theme }) => theme.radii.circle};\n  box-shadow: ${({ theme }) => theme.card.boxShadow};\n`\n\nexport default Sticker\n","import React from 'react'\nimport styled from 'styled-components'\nimport { NoProfileAvatarIcon, LaurelLeftIcon, LaurelRightIcon, Skeleton } from '@pancakeswap/uikit'\nimport { YourScoreProps } from '../../types'\nimport ProfileAvatar from '../../../Profile/components/ProfileAvatar'\nimport Sticker from '../Sticker'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst LaurelWrapper = styled.div<{ dir?: 'left' | 'right' }>`\n  transform: ${({ dir }) => (dir === 'left' ? 'rotate(30deg)' : 'rotate(-30deg)')};\n  svg {\n    fill: #27262c;\n    opacity: 0.5;\n    height: 32px;\n    width: auto;\n    ${({ theme }) => theme.mediaQueries.sm} {\n      height: 45px;\n    }\n  }\n`\n\nconst ProfileWrapper = styled.div`\n  height: 96px;\n  width: 96px;\n`\n\nconst StyledNoProfileAvatarIcon = styled(NoProfileAvatarIcon)`\n  width: 100%;\n  height: 100%;\n`\n\nconst HeroHeader: React.FC<YourScoreProps> = ({ profile, isLoading }) => {\n  return (\n    <Wrapper>\n      <LaurelWrapper dir=\"left\">\n        <LaurelLeftIcon />\n      </LaurelWrapper>\n      {isLoading ? (\n        <Skeleton height=\"96px\" width=\"96px\" variant=\"circle\" />\n      ) : (\n        <ProfileWrapper>\n          <Sticker>{profile ? <ProfileAvatar profile={profile} /> : <StyledNoProfileAvatarIcon />}</Sticker>\n        </ProfileWrapper>\n      )}\n\n      <LaurelWrapper dir=\"right\">\n        <LaurelRightIcon />\n      </LaurelWrapper>\n    </Wrapper>\n  )\n}\n\nexport default HeroHeader\n","import React, { ReactText } from 'react'\nimport {\n  Text,\n  Heading,\n  Flex,\n  Skeleton,\n  MedalBronzeIcon,\n  MedalGoldIcon,\n  MedalPurpleIcon,\n  MedalSilverIcon,\n  MedalTealIcon,\n  BlockIcon,\n  Button,\n  useModal,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { LIVE } from 'config/constants/trading-competition/easterPhases'\nimport { YourScoreProps } from '../../types'\nimport { localiseTradingVolume } from '../../helpers'\n\nconst TeamRankTextWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: center;\n  svg {\n    width: 24px;\n  }\n`\n\nconst RanksWrapper = styled(Flex)`\n  width: 100%;\n  margin-top: 24px;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst CardUserInfo: React.FC<YourScoreProps> = ({\n  hasRegistered,\n  account,\n  profile,\n  userLeaderboardInformation,\n  currentPhase,\n}) => {\n  const { t } = useTranslation()\n  const { global, team, volume, next_rank: nextRank } = userLeaderboardInformation\n  const shouldShowUserRanks = account && hasRegistered\n\n  const getMedal = (currentRank: ReactText) => {\n    if (currentRank === 1) {\n      return {\n        current: <MedalGoldIcon />,\n        next: null,\n      }\n    }\n    if (currentRank <= 10) {\n      return {\n        current: <MedalSilverIcon />,\n        next: <MedalGoldIcon />,\n      }\n    }\n    if (currentRank <= 100) {\n      return {\n        current: <MedalBronzeIcon />,\n        next: <MedalSilverIcon />,\n      }\n    }\n    if (currentRank <= 500) {\n      return {\n        current: <MedalPurpleIcon />,\n        next: <MedalBronzeIcon />,\n      }\n    }\n    if (currentRank > 500) {\n      return {\n        current: <MedalTealIcon />,\n        next: <MedalPurpleIcon />,\n      }\n    }\n    return {\n      current: <BlockIcon />,\n      next: <MedalTealIcon />,\n    }\n  }\n\n  const getNextTier = (currentRank: ReactText) => {\n    if (currentRank === 1) {\n      return {\n        color: null,\n        rank: null,\n      }\n    }\n    if (currentRank <= 10) {\n      return {\n        color: 'GOLD',\n        rank: 1,\n      }\n    }\n    if (currentRank <= 100) {\n      return {\n        color: 'SILVER',\n        rank: 10,\n      }\n    }\n    if (currentRank <= 500) {\n      return {\n        color: 'BRONZE',\n        rank: 100,\n      }\n    }\n    if (currentRank > 500) {\n      return {\n        color: 'PURPLE',\n        rank: 500,\n      }\n    }\n    return {\n      color: '',\n      rank: 500,\n    }\n  }\n\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" mt=\"16px\">\n      <Heading scale=\"lg\" textAlign=\"center\">\n        {t('VipCat Protocol (VIPCAT) rewards long-term thinking for cryptocurrency. Unlike other tokens that wrongly favor day-trading speculators and whales who dump, GARFI embraces community leaders and hodlers. GARFI community’s one and only collective mission is to create value for its believers and advocates.')}\n      </Heading>\n      <Text textAlign=\"center\" fontSize=\"14px\" color=\"textSubtle\" mt=\"4px\">\n        {t('nfa')}\n      </Text>\n    </Flex>\n  )\n}\n\nexport default CardUserInfo\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  Flex,\n  Skeleton,\n  Button,\n  LaurelLeftIcon,\n  LaurelRightIcon,\n  CheckmarkCircleIcon,\n  useModal,\n} from '@pancakeswap/uikit'\nimport { CLAIM, OVER } from 'config/constants/trading-competition/easterPhases'\nimport UnlockButton from 'components/UnlockButton'\nimport { useTranslation } from 'contexts/Localization'\nimport ClaimModal from '../ClaimModal'\nimport { YourScoreProps } from '../../types'\nimport HeroCardInfo from './HeroCardInfo'\n\nconst StyledCard = styled(Card)`\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 380px;\n  }\n`\n\nconst StyledCardFooter = styled(CardFooter)`\n  background: ${({ theme }) => theme.card.cardHeaderBackground.default};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  svg {\n    height: 32px;\n    width: auto;\n    fill: ${({ theme }) => theme.colors.warning};\n  }\n`\n\nconst StyledButton = styled(Button)`\n  svg {\n    margin-right: 4px;\n    height: 20px;\n    width: auto;\n    fill: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nconst HeroCard: React.FC<YourScoreProps> = ({\n  hasRegistered,\n  account,\n  userTradingInformation,\n  profile,\n  isLoading,\n  userLeaderboardInformation,\n  currentPhase,\n  userCanClaimPrizes,\n  finishedAndPrizesClaimed,\n  finishedAndNothingToClaim,\n  onClaimSuccess,\n}) => {\n  const { t } = useTranslation()\n  const [onPresentClaimModal] = useModal(\n    <ClaimModal userTradingInformation={userTradingInformation} onClaimSuccess={onClaimSuccess} />,\n    false,\n  )\n  const isClaimButtonDisabled = Boolean(isLoading || finishedAndPrizesClaimed || finishedAndNothingToClaim)\n  const { hasUserClaimed } = userTradingInformation\n\n  const getClaimButtonText = () => {\n    if (userCanClaimPrizes) {\n      return t('Claim prizes')\n    }\n    // User has already claimed prizes\n    if (hasUserClaimed) {\n      return (\n        <>\n          <CheckmarkCircleIcon /> {t('Prizes Claimed!')}\n        </>\n      )\n    }\n    // User has nothing to claim\n    return t('Nothing to claim')\n  }\n\n  return (\n    <StyledCard mt=\"24px\">\n      <CardBody>\n          {/* <Flex mt=\"24px\" justifyContent=\"center\" alignItems=\"center\">\n            <Skeleton width=\"100%\" height=\"60px\" />\n          </Flex> */}\n        <HeroCardInfo\n              hasRegistered={hasRegistered}\n              account={account}\n              profile={profile}\n              userLeaderboardInformation={userLeaderboardInformation}\n              currentPhase={currentPhase}\n            />\n      </CardBody>\n      {hasRegistered && currentPhase.state === CLAIM && (\n        <StyledCardFooter>\n          <LaurelLeftIcon />\n          <StyledButton disabled={isClaimButtonDisabled} mx=\"18px\" onClick={() => onPresentClaimModal()}>\n            {getClaimButtonText()}\n          </StyledButton>\n          <LaurelRightIcon />\n        </StyledCardFooter>\n      )}\n    </StyledCard>\n  )\n}\n\nexport default HeroCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport HeroHeader from './HeroHeader'\nimport HeroCard from './HeroCard'\n\nimport RibbonWithImage from '../RibbonWithImage'\nimport { YourScoreProps } from '../../types'\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  margin: 24px auto 0;\n  max-width: 768px;\n`\n\nconst YourScore: React.FC<YourScoreProps> = ({\n  hasRegistered = false,\n  account,\n  userTradingInformation,\n  profile,\n  isLoading,\n  userLeaderboardInformation,\n  currentPhase,\n  userCanClaimPrizes,\n  finishedAndPrizesClaimed,\n  finishedAndNothingToClaim,\n  onClaimSuccess,\n}) => {\n  const { t } = useTranslation()\n  const showRibbon = !account || hasRegistered ||true\n\n  return (\n    <Wrapper>\n      <RibbonWithImage\n        imageComponent={<HeroHeader profile={profile} isLoading={isLoading} />}\n        ribbonDirection=\"down\"\n        isCardHeader\n      >\n        {t('VIPCAT')}\n      </RibbonWithImage>\n      <HeroCard\n        hasRegistered={hasRegistered}\n        account={account}\n        userTradingInformation={userTradingInformation}\n        profile={profile}\n        isLoading={isLoading}\n        userLeaderboardInformation={userLeaderboardInformation}\n        currentPhase={currentPhase}\n        userCanClaimPrizes={userCanClaimPrizes}\n        finishedAndPrizesClaimed={finishedAndPrizesClaimed}\n        finishedAndNothingToClaim={finishedAndNothingToClaim}\n        onClaimSuccess={onClaimSuccess}\n      />\n    </Wrapper>\n  )\n}\n\nexport default YourScore\n","import React from 'react'\nimport styled from 'styled-components'\nimport every from 'lodash/every'\nimport { Stepper, Step, StepStatus, Card, CardBody, Heading, Text, Button, Link, OpenNewIcon } from '@pancakeswap/uikit'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { Ifo } from 'config/constants/types'\nimport { WalletIfoData } from 'hooks/ifo/types'\nimport { useTranslation } from 'contexts/Localization'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport Container from 'components/layout/Container'\nimport { useProfile } from 'state/hooks'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface Props {\n  ifo?: Ifo\n}\n\nconst Wrapper = styled(Container)`\n  // background: ${({ theme }) => theme.colors.gradients.bubblegum};\n  margin-left: -16px;\n  margin-right: -16px;\n  padding-top: 48px;\n  padding-bottom: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: -24px;\n    margin-right: -24px;\n  }\n`\n\nconst RoadMap: React.FC<Props> = () => {\n  const { hasProfile } = useProfile()\n  const { t } = useTranslation()\n  // const balance = useTokenBalance(getAddress(ifo.currency.address))\n  const stepsValidationStatus = [\n    true,\n    false,\n    false,\n    false,\n    false,false,false,false\n  ]\n\n  const getStatusProp = (index: number): StepStatus => {\n    const arePreviousValid = index === 0 ? true : every(stepsValidationStatus.slice(0, index), Boolean)\n    if (stepsValidationStatus[index]) {\n      return arePreviousValid ? 'past' : 'future'\n    }\n    return arePreviousValid ? 'current' : 'future'\n  }\n\n  const renderCardBody = (step: number) => {\n    const isStepValid = stepsValidationStatus[step]\n    switch (step) {\n      case 0:\n        return (\n          <CardBody>\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\n              {t('Public Announcement')}\n            </Heading>\n            <Text color=\"textSubtle\" small mb=\"16px\">\n              {t('Public AnnouncementPublic AnnouncementPublic AnnouncementPublic Announcement!')}\n            </Text>\n            {/* {isStepValid ? (\n              <Text color=\"success\" bold>\n                {t('Profile Active!')}\n              </Text>\n            ) : (\n              <Button as={Link} href=\"/profile\">\n                {t('Activate your Profile')}\n              </Button>\n            )} */}\n          </CardBody>\n        )\n      case 1:\n        return (\n          <CardBody>\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\n              {t('PancakeSwap Launch')}\n            </Heading>\n            <Text color=\"textSubtle\" small>\n              {t('PancakeSwap LaunchPancakeSwap LaunchPancakeSwap LaunchPancakeSwap Launch')} <br />\n              {t('PancakeSwap LaunchPancakeSwap LaunchPancakeSwap LaunchPancakeSwap Launch.')}\n            </Text>\n          </CardBody>\n        )\n      case 2:\n        return (\n          <CardBody>\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\n              {t('Community Donation')}\n            </Heading>\n            <Text color=\"textSubtle\" small>\n              {t('Community DonationCommunity DonationCommunity DonationCommunity Donation')} <br />\n              {t('Community DonationCommunity DonationCommunity DonationCommunity DonationCommunity Donation')}\n            </Text>\n          </CardBody>\n        )\n      case 3:\n        return (\n          <CardBody>\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\n              {t('Ranking Portals Partnership')}\n            </Heading>\n            <Text color=\"textSubtle\" small>\n              {t(\n                'Ranking Portals PartnershipRanking Portals PartnershipRanking Portals PartnershipRanking Portals PartnershipRanking Portals PartnershipRanking Portals Partnership.',\n              )}\n            </Text>\n          </CardBody>\n        )\n      case 4:\n        return (\n          <CardBody>\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\n              {t('Wallets Partnership')}\n            </Heading>\n            <Text color=\"textSubtle\" small>\n              {t(\n                'Wallets PartnershipWallets PartnershipWallets PartnershipWallets PartnershipWallets Partnership.',\n              )}\n            </Text>\n          </CardBody>\n        )\n      case 5:\n        return (\n          <CardBody>\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\n              {t('Contract Audit')}\n            </Heading>\n            <Text color=\"textSubtle\" small>\n              {t(\n                'Contract AuditContract AuditContract AuditContract AuditContract AuditContract Audit.',\n              )}\n            </Text>\n          </CardBody>\n        )\n      case 6:\n        return (\n          <CardBody>\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\n              {t('Exchanges Listing')}\n            </Heading>\n            <Text color=\"textSubtle\" small>\n              {t(\n                'Exchanges ListingExchanges ListingExchanges ListingExchanges ListingExchanges ListingExchanges Listing.',\n              )}\n            </Text>\n          </CardBody>\n        )\n      case 7:\n        return (\n          <CardBody>\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\n              {t('Further Marketing')}\n            </Heading>\n            <Text color=\"textSubtle\" small>\n              {t(\n                'Further MarketingFurther MarketingFurther MarketingFurther MarketingFurther MarketingFurther Marketing.',\n              )}\n            </Text>\n          </CardBody>\n        )\n      default:\n        return null\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Heading as=\"h2\" scale=\"xl\" color=\"secondary\" mb=\"24px\" textAlign=\"center\">\n        {t('To da moon!!!')}\n      </Heading>\n      <Stepper>\n        {stepsValidationStatus.map((_, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <Step key={index} index={index} status={getStatusProp(index)}>\n            <Card>{renderCardBody(index)}</Card>\n          </Step>\n        ))}\n      </Stepper>\n    </Wrapper>\n  )\n}\n\nexport default RoadMap\n","import React, { useState, useEffect } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useProfile } from 'state/hooks'\nimport { Flex, Box, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTradingCompetitionContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport {\n  SmartContractPhases,\n  CompetitionPhases,\n  LIVE,\n  FINISHED,\n  CLAIM,\n  OVER,\n  REGISTRATION,\n} from 'config/constants/trading-competition/easterPhases'\nimport PageSection from 'components/PageSection'\nimport {\n  DARKBG,\n  DARKFILL,\n  MIDBLUEBG,\n  MIDBLUEBG_DARK,\n  MIDBLUEFILL,\n  MIDBLUEFILL_DARK,\n  LIGHTBLUEBG,\n  LIGHTBLUEBG_DARK,\n  LIGHTBLUEFILL,\n  LIGHTBLUEFILL_DARK,\n} from './pageSectionStyles'\nimport { PrizesIcon, RanksIcon, RulesIcon } from './svgs'\nimport Countdown from './components/Countdown'\nimport StormBunny from './pngs/storm.png'\nimport RibbonWithImage from './wigets/RibbonWithImage'\nimport BattleBanner from './components/BattleBanner'\nimport Footer from './wigets/Footer'\nimport PrizesInfo from './components/PrizesInfo'\nimport Rules from './wigets/Rules'\nimport TeamRanks from './components/TeamRanks'\nimport ProtocolIntro from './wigets/ProtocolIntro'\nimport IntroHero from './wigets/IntroHero'\nimport RoadMap from './wigets/Roadmap'\n\nconst CompetitionPage = styled.div`\n  min-height: calc(100vh - 64px);\n`\n\nconst BannerFlex = styled(Flex)`\n  flex-direction: column;\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-top: 10px;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n  }\n\n  @media screen and (min-width: 1920px) {\n    padding-top: 32px;\n  }\n`\n\nconst PrizesSection = styled(PageSection)`\n  margin: -32px 0;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: -64px 0;\n  }\n`\n\nconst BottomBunnyWrapper = styled(Box)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n    margin-left: 40px;\n    width: 147px;\n    height: 200px;\n  }\n`\n\nconst TradingCompetition = () => {\n  const profileApiUrl = process.env.REACT_APP_API_PROFILE\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { profile, isLoading } = useProfile()\n  const { isDark } = useTheme()\n  const tradingCompetitionContract = useTradingCompetitionContract()\n  const [currentPhase, setCurrentPhase] = useState(CompetitionPhases.LIVE)\n  const [registrationSuccessful, setRegistrationSuccessful] = useState(false)\n  const [claimSuccessful, setClaimSuccessful] = useState(false)\n  const [userTradingInformation, setUserTradingInformation] = useState({\n    hasRegistered: false,\n    hasUserClaimed: false,\n    userRewardGroup: '0',\n    userCakeRewards: '0',\n    userPointReward: '0',\n    canClaimNFT: false,\n  })\n  const [globalLeaderboardInformation, setGlobalLeaderboardInformation] = useState(null)\n  const [userLeaderboardInformation, setUserLeaderboardInformation] = useState({\n    global: 0,\n    team: 0,\n    volume: 0,\n    next_rank: 0,\n  })\n  // 1. Storm\n  const [team1LeaderboardInformation, setTeam1LeaderboardInformation] = useState({ teamId: 1, leaderboardData: null })\n  // 2. Flippers\n  const [team2LeaderboardInformation, setTeam2LeaderboardInformation] = useState({ teamId: 2, leaderboardData: null })\n  // 3. Cakers\n  const [team3LeaderboardInformation, setTeam3LeaderboardInformation] = useState({ teamId: 3, leaderboardData: null })\n\n  const isCompetitionLive = currentPhase.state === LIVE\n  const hasCompetitionEnded =\n    currentPhase.state === FINISHED || currentPhase.state === CLAIM || currentPhase.state === OVER\n\n  const { hasUserClaimed, userCakeRewards, userPointReward, canClaimNFT } = userTradingInformation\n\n  const userCanClaimPrizes =\n    currentPhase.state === CLAIM &&\n    !hasUserClaimed &&\n    (userCakeRewards !== '0' || userPointReward !== '0' || canClaimNFT)\n  const finishedAndPrizesClaimed = hasCompetitionEnded && account && hasUserClaimed\n  const finishedAndNothingToClaim = hasCompetitionEnded && account && !userCanClaimPrizes\n\n  const onRegisterSuccess = () => {\n    setRegistrationSuccessful(true)\n  }\n\n  const onClaimSuccess = () => {\n    setClaimSuccessful(true)\n  }\n\n  useEffect(() => {\n    const fetchCompetitionInfoContract = async () => {\n      const competitionStatus = await tradingCompetitionContract.methods.currentStatus().call()\n      setCurrentPhase(SmartContractPhases[competitionStatus])\n    }\n\n    const fetchUserContract = async () => {\n      const user = await tradingCompetitionContract.methods.claimInformation(account).call()\n      const userObject = {\n        hasRegistered: user[0],\n        hasUserClaimed: user[1],\n        userRewardGroup: user[2],\n        userCakeRewards: user[3],\n        userPointReward: user[4],\n        canClaimNFT: user[5],\n      }\n      setUserTradingInformation(userObject)\n    }\n\n    if (account) {\n      fetchUserContract()\n    } else {\n      setUserTradingInformation({\n        hasRegistered: false,\n        hasUserClaimed: false,\n        userRewardGroup: '0',\n        userCakeRewards: '0',\n        userPointReward: '0',\n        canClaimNFT: false,\n      })\n    }\n    fetchCompetitionInfoContract()\n  }, [account, registrationSuccessful, claimSuccessful, tradingCompetitionContract])\n\n  useEffect(() => {\n    const fetchUserTradingStats = async () => {\n      const res = await fetch(`${profileApiUrl}/api/users/${account}`)\n      const data = await res.json()\n      setUserLeaderboardInformation(data.leaderboard)\n    }\n    // If user has not registered, user trading information will not be displayed and should not be fetched\n    if (account && userTradingInformation.hasRegistered) {\n      fetchUserTradingStats()\n    }\n  }, [account, userTradingInformation, profileApiUrl])\n\n  useEffect(() => {\n    const fetchGlobalLeaderboardStats = async () => {\n      const res = await fetch(`${profileApiUrl}/api/leaderboard/global`)\n      const data = await res.json()\n      setGlobalLeaderboardInformation(data)\n    }\n\n    const fetchTeamsLeaderboardStats = async (teamId: number, callBack: (data: any) => void) => {\n      try {\n        const res = await fetch(`${profileApiUrl}/api/leaderboard/team/${teamId}`)\n        const data = await res.json()\n        callBack(data)\n      } catch (e) {\n        console.error(e)\n      }\n    }\n\n    fetchTeamsLeaderboardStats(1, (data) =>\n      setTeam1LeaderboardInformation((prevState) => {\n        return { ...prevState, leaderboardData: data }\n      }),\n    )\n    fetchTeamsLeaderboardStats(2, (data) =>\n      setTeam2LeaderboardInformation((prevState) => {\n        return { ...prevState, leaderboardData: data }\n      }),\n    )\n    fetchTeamsLeaderboardStats(3, (data) =>\n      setTeam3LeaderboardInformation((prevState) => {\n        return { ...prevState, leaderboardData: data }\n      }),\n    )\n    fetchGlobalLeaderboardStats()\n  }, [profileApiUrl])\n\n  // Don't hide when loading. Hide if the account is connected && the user hasn't registered && the competition is live or finished\n  let shouldHideCta =\n    !isLoading && account && !userTradingInformation.hasRegistered && (isCompetitionLive || hasCompetitionEnded)\n    shouldHideCta = true;\n  return (\n    <CompetitionPage>\n      <PageSection\n        background={DARKBG}\n        svgFill={DARKFILL}\n        index={5}\n        dividerComponent={null}\n      >\n        <BannerFlex mb='0px'>\n          <Countdown currentPhase={currentPhase} hasCompetitionEnded={hasCompetitionEnded} />\n          <BattleBanner />\n        </BannerFlex>\n      </PageSection>\n      \n      <PageSection\n        background={isDark ? MIDBLUEBG_DARK : MIDBLUEBG}\n        svgFill={isDark ? MIDBLUEFILL_DARK : MIDBLUEFILL}\n        index={4}\n        dividerComponent={\n          <RibbonWithImage imageComponent={<PrizesIcon width=\"175px\" />} ribbonDirection=\"up\">\n            {t('VipCat Reward Protocol')}\n          </RibbonWithImage>\n        }\n      >\n        <Box mt={shouldHideCta ? '0px' : ['94px', null, '36px']} mb={['24px', null, '0']}>\n          {/* If competition has not yet started, render HowToJoin component - if not, render YourScore */}\n          <IntroHero\n              currentPhase={currentPhase}\n              hasRegistered={userTradingInformation.hasRegistered}\n              userTradingInformation={userTradingInformation}\n              account={account}\n              profile={profile}\n              isLoading={isLoading}\n              userLeaderboardInformation={userLeaderboardInformation}\n              userCanClaimPrizes={userCanClaimPrizes}\n              finishedAndPrizesClaimed={finishedAndPrizesClaimed}\n              finishedAndNothingToClaim={finishedAndNothingToClaim}\n              onClaimSuccess={onClaimSuccess}\n            />\n        </Box>\n      </PageSection>\n\n      <PageSection\n        background={isDark ? MIDBLUEBG_DARK : MIDBLUEBG}\n        svgFill={isDark ? MIDBLUEFILL_DARK : MIDBLUEFILL}\n        index={4}\n        dividerComponent={\n          <RibbonWithImage imageComponent={<RanksIcon width=\"175px\" />} ribbonDirection=\"up\">\n            {t('RoadMap')}\n          </RibbonWithImage>\n        }\n      >\n        <Box mt={shouldHideCta ? '0px' : ['94px', null, '36px']} mb={['24px', null, '0']}>\n          {/* If competition has not yet started, render HowToJoin component - if not, render YourScore */}\n          <ProtocolIntro />\n        </Box>\n      </PageSection>\n\n      <PageSection\n        background={isDark ? MIDBLUEBG_DARK : MIDBLUEBG}\n        svgFill={isDark ? MIDBLUEFILL_DARK : MIDBLUEFILL}\n        index={4}\n        dividerComponent={\n          <RibbonWithImage imageComponent={<RulesIcon width=\"175px\" />} ribbonDirection=\"up\">\n            {t('FAQ')}\n          </RibbonWithImage>\n        }\n      >\n        <Box mt={shouldHideCta ? '0px' : ['94px', null, '36px']} mb={['24px', null, '0']}>\n          {/* If competition has not yet started, render HowToJoin component - if not, render YourScore */}\n          <RoadMap/>\n        </Box>\n      </PageSection>\n\n      {/* <PageSection\n        index={3}\n        dividerComponent={\n          <RibbonWithImage imageComponent={<RulesIcon width=\"175px\" />} ribbonDirection=\"up\">\n            {t('FAQ')}\n          </RibbonWithImage>\n        }\n      >\n        <Box mt=\"54px\">\n          <TeamRanks\n            team1LeaderboardInformation={team1LeaderboardInformation}\n            team2LeaderboardInformation={team2LeaderboardInformation}\n            team3LeaderboardInformation={team3LeaderboardInformation}\n            globalLeaderboardInformation={globalLeaderboardInformation}\n          />\n        </Box>\n      </PageSection> */}\n      <PrizesSection\n        background={isDark ? LIGHTBLUEBG_DARK : LIGHTBLUEBG}\n        svgFill={isDark ? LIGHTBLUEFILL_DARK : LIGHTBLUEFILL}\n        index={2}\n        hasCurvedDivider={false}\n      >\n        <Box my=\"64px\">\n          {/* <PrizesInfo /> */}\n          <Rules />\n        </Box>\n      </PrizesSection>\n      {/* <PageSection\n        index={3}\n        curvePosition=\"top\"\n        dividerComponent={null\n          // <RibbonWithImage imageComponent={<RulesIcon width=\"175px\" />} ribbonDirection=\"up\">\n          //   {t('FAQ')}\n          // </RibbonWithImage>\n        }\n      >\n        <Rules />\n      </PageSection> */}\n      <PageSection background={DARKBG} svgFill={DARKFILL} index={4} curvePosition=\"top\">\n        <Flex alignItems=\"center\">\n            <Flex height=\"fit-content\">\n              <Footer\n                userTradingInformation={userTradingInformation}\n                currentPhase={currentPhase}\n                account={account}\n                isCompetitionLive={isCompetitionLive}\n                hasCompetitionEnded={hasCompetitionEnded}\n                userCanClaimPrizes={userCanClaimPrizes}\n                finishedAndPrizesClaimed={finishedAndPrizesClaimed}\n                finishedAndNothingToClaim={finishedAndNothingToClaim}\n                profile={profile}\n                isLoading={isLoading}\n                onRegisterSuccess={onRegisterSuccess}\n                onClaimSuccess={onClaimSuccess}\n              />\n            </Flex>\n          <BottomBunnyWrapper>\n            <Image src={StormBunny} width={147} height={200} />\n          </BottomBunnyWrapper>\n        </Flex>\n      </PageSection>\n    </CompetitionPage>\n  )\n}\n\nexport default TradingCompetition\n","import { BASE_BSC_SCAN_URL } from 'config'\n\nexport const getBscScanAddressUrl = (address: string) => {\n  return `${BASE_BSC_SCAN_URL}/address/${address}`\n}\n\nexport const getBscScanTransactionUrl = (transactionHash: string) => {\n  return `${BASE_BSC_SCAN_URL}/tx/${transactionHash}`\n}\n\nexport const getBscScanBlockNumberUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/${block}`\n}\n\nexport const getBscScanBlockCountdownUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/countdown/${block}`\n}\n","export const REGISTRATION = 'REGISTRATION'\nexport const LIVE = 'LIVE'\nexport const FINISHED = 'FINISHED'\nexport const CLAIM = 'CLAIM'\nexport const OVER = 'OVER'\n\nexport const CompetitionPhases = {\n  REGISTRATION: {\n    state: REGISTRATION,\n    // Wed 7th 16:00 SGT\n    ends: 1617782400000,\n    step: { index: 0, text: 'Entry' },\n  },\n  LIVE: {\n    state: LIVE,\n    // ~ Wed 14th 16:00 SGT\n    ends: 1618387200000,\n    step: { index: 1, text: 'Live' },\n  },\n  FINISHED: {\n    state: FINISHED,\n    ends: null,\n    step: { index: 2, text: 'End' },\n  },\n  CLAIM: {\n    state: CLAIM,\n    ends: null,\n    step: { index: 2, text: 'End' },\n  },\n  OVER: {\n    state: OVER,\n    ends: null,\n    step: { index: 2, text: 'End' },\n  },\n}\n\nexport const CompetitionSteps = [\n  CompetitionPhases.REGISTRATION.step,\n  CompetitionPhases.LIVE.step,\n  CompetitionPhases.FINISHED.step,\n]\n\nexport const SmartContractPhases = {\n  0: CompetitionPhases.REGISTRATION,\n  1: CompetitionPhases.LIVE,\n  2: CompetitionPhases.FINISHED,\n  3: CompetitionPhases.CLAIM,\n  4: CompetitionPhases.OVER,\n}\n","import React from 'react'\nimport { NoProfileAvatarIcon } from '@pancakeswap/uikit'\nimport { Profile } from 'state/types'\nimport styled from 'styled-components'\n\nexport interface ProfileAvatarProps {\n  profile: Profile\n}\n\nconst TeamAvatar = styled.img`\n  border: 1px solid ${({ theme }) => theme.card.background};\n  border-radius: 50%;\n  bottom: 0px;\n  position: absolute;\n  right: 0px;\n  min-width: 20px;\n  min-height: 20px;\n  width: 37.5%;\n  height: 37.5%;\n  z-index: 5;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-width: 2px;\n  }\n`\n\nconst AvatarWrapper = styled.div<{ bg: string }>`\n  background: url('${({ bg }) => bg}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n// TODO: replace with no profile avatar icon\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\n  width: 100%;\n  height: 100%;\n`\n\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  return (\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\n      {!profile.isActive && <AvatarInactive />}\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\n    </AvatarWrapper>\n  )\n}\n\nexport default ProfileAvatar\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { ExpandableLabel, Flex, FlexProps, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface FoldableTextProps extends FlexProps {\n  title?: string\n}\n\nconst Wrapper = styled(Flex)`\n  cursor: pointer;\n`\n\nconst StyledExpandableLabelWrapper = styled(Flex)`\n  button {\n    align-items: center;\n    justify-content: flex-start;\n  }\n`\n\nconst StyledChildrenFlex = styled(Flex)<{ isExpanded?: boolean }>`\n  overflow: hidden;\n  height: ${({ isExpanded }) => (isExpanded ? '100%' : '0px')};\n  padding-bottom: ${({ isExpanded }) => (isExpanded ? '16px' : '0px')};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n`\n\nconst FoldableText: React.FC<FoldableTextProps> = ({ title, children, ...props }) => {\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  return (\n    <Wrapper {...props} flexDirection=\"column\" onClick={() => setIsExpanded(!isExpanded)}>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" pb=\"16px\">\n        <Text fontWeight=\"bold\">{title}</Text>\n        <StyledExpandableLabelWrapper>\n          <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n            {isExpanded ? t('Hide') : t('Details')}\n          </ExpandableLabel>\n        </StyledExpandableLabelWrapper>\n      </Flex>\n      <StyledChildrenFlex isExpanded={isExpanded} flexDirection=\"column\">\n        {children}\n      </StyledChildrenFlex>\n    </Wrapper>\n  )\n}\n\nexport default FoldableText\n","var arrayEvery = require('./_arrayEvery'),\n    baseEvery = require('./_baseEvery'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = every;\n","export enum Tiers {\n  GOLD = 'Gold',\n  SILVER = 'Silver',\n  BRONZE = 'Bronze',\n  PURPLE = 'Purple',\n  TEAL = 'Teal',\n}\n\nexport interface Achievement {\n  champion?: number\n  teamPlayer?: number\n  trophy: number\n}\n\nexport interface Rank {\n  group: string\n  rank: string\n  tier: Tiers\n  cakePrizeInUsd: number\n  achievements: Achievement\n  hasNft: boolean\n}\n\ninterface Config {\n  [key: string]: Rank[]\n}\n\nconst easterPrizes: Config = {\n  1: [\n    {\n      group: '4',\n      rank: '1',\n      tier: Tiers.GOLD,\n      cakePrizeInUsd: 21000,\n      achievements: {\n        champion: 1250,\n        teamPlayer: 750,\n        trophy: 500,\n      },\n      hasNft: true,\n    },\n    {\n      group: '3',\n      rank: '2 ~ 10',\n      tier: Tiers.SILVER,\n      cakePrizeInUsd: 49000,\n      achievements: {\n        teamPlayer: 750,\n        trophy: 500,\n      },\n      hasNft: true,\n    },\n    {\n      group: '2',\n      rank: '11 ~ 100',\n      tier: Tiers.BRONZE,\n      cakePrizeInUsd: 42000,\n      achievements: {\n        teamPlayer: 750,\n        trophy: 500,\n      },\n      hasNft: true,\n    },\n\n    {\n      group: '1',\n      rank: '101 ~ 500',\n      tier: Tiers.PURPLE,\n      cakePrizeInUsd: 28000,\n      achievements: {\n        teamPlayer: 750,\n        trophy: 500,\n      },\n      hasNft: true,\n    },\n\n    {\n      group: '0',\n      rank: '501+',\n      tier: Tiers.TEAL,\n      cakePrizeInUsd: 0,\n      achievements: {\n        trophy: 500,\n      },\n      hasNft: false,\n    },\n  ],\n  2: [\n    {\n      group: '4',\n      rank: '1',\n      tier: Tiers.GOLD,\n      cakePrizeInUsd: 6000,\n      achievements: {\n        champion: 1250,\n        teamPlayer: 750,\n        trophy: 250,\n      },\n      hasNft: false,\n    },\n    {\n      group: '3',\n      rank: '2 ~ 10',\n      tier: Tiers.SILVER,\n      cakePrizeInUsd: 14000,\n      achievements: {\n        teamPlayer: 750,\n        trophy: 250,\n      },\n      hasNft: false,\n    },\n    {\n      group: '2',\n      rank: '11 ~ 100',\n      tier: Tiers.BRONZE,\n      cakePrizeInUsd: 12000,\n      achievements: {\n        teamPlayer: 750,\n        trophy: 250,\n      },\n      hasNft: false,\n    },\n    {\n      group: '1',\n      rank: '101 ~ 500',\n      tier: Tiers.PURPLE,\n      cakePrizeInUsd: 8000,\n      achievements: {\n        teamPlayer: 750,\n        trophy: 250,\n      },\n      hasNft: false,\n    },\n    {\n      group: '0',\n      rank: '501+',\n      tier: Tiers.TEAL,\n      cakePrizeInUsd: 0,\n      achievements: {\n        trophy: 250,\n      },\n      hasNft: false,\n    },\n  ],\n  3: [\n    {\n      group: '4',\n      rank: '1',\n      tier: Tiers.GOLD,\n      cakePrizeInUsd: 3000,\n      achievements: {\n        champion: 1250,\n        teamPlayer: 750,\n        trophy: 100,\n      },\n      hasNft: false,\n    },\n    {\n      group: '3',\n      rank: '2 ~ 10',\n      tier: Tiers.SILVER,\n      cakePrizeInUsd: 7000,\n      achievements: {\n        teamPlayer: 750,\n        trophy: 100,\n      },\n      hasNft: false,\n    },\n    {\n      group: '2',\n      rank: '11 ~ 100',\n      tier: Tiers.BRONZE,\n      cakePrizeInUsd: 6000,\n      achievements: {\n        teamPlayer: 750,\n        trophy: 100,\n      },\n      hasNft: false,\n    },\n    {\n      group: '1',\n      rank: '101 ~ 500',\n      tier: Tiers.PURPLE,\n      cakePrizeInUsd: 4000,\n      achievements: {\n        teamPlayer: 750,\n        trophy: 100,\n      },\n      hasNft: false,\n    },\n    {\n      group: '0',\n      rank: '501+',\n      tier: Tiers.TEAL,\n      cakePrizeInUsd: 0,\n      achievements: {\n        trophy: 100,\n      },\n      hasNft: false,\n    },\n  ],\n}\n\nexport default easterPrizes\n","/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = arrayEvery;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nmodule.exports = baseEvery;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text, Link, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { getBscScanBlockNumberUrl } from 'utils/bscscan'\n\nexport interface TimerProps {\n  timerStage?: string\n  minutes?: number\n  hours?: number\n  days?: number\n  showTooltip?: boolean\n  blockNumber?: number\n  HeadingTextComponent?: React.ElementType\n  BodyTextComponent?: React.ElementType\n}\n\nconst StyledTimerFlex = styled(Flex)<{ showTooltip?: boolean }>`\n  ${({ theme, showTooltip }) => (showTooltip ? ` border-bottom: 1px dashed ${theme.colors.textSubtle};` : ``)}\n  div:last-of-type {\n    margin-right: 0;\n  }\n`\n\nconst Timer = ({ minutes, hours, days, showTooltip, HeadingTextComponent, BodyTextComponent }) => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledTimerFlex alignItems=\"flex-end\" showTooltip={showTooltip}>\n      <HeadingTextComponent mr=\"2px\">{days}</HeadingTextComponent>\n      <BodyTextComponent mr=\"16px\">{t('d')}</BodyTextComponent>\n      <HeadingTextComponent mr=\"2px\">{hours}</HeadingTextComponent>\n      <BodyTextComponent mr=\"16px\">{t('h')}</BodyTextComponent>\n      <HeadingTextComponent mr=\"2px\">{minutes}</HeadingTextComponent>\n      <BodyTextComponent>{t('m')}</BodyTextComponent>\n    </StyledTimerFlex>\n  )\n}\n\nconst DefaultHeadingTextComponent = ({ children, ...props }) => (\n  <Heading scale=\"lg\" {...props}>\n    {children}\n  </Heading>\n)\nconst DefaultBodyTextComponent = ({ children, ...props }) => (\n  <Text fontSize=\"16px\" fontWeight=\"600\" {...props}>\n    {children}\n  </Text>\n)\n\nconst TooltipContent = ({ blockNumber, t }: { blockNumber: number; t: ContextApi['t'] }): JSX.Element => (\n  <>\n    <Text color=\"body\" mb=\"10px\" fontWeight=\"600\">\n      {t('Block %num%', { num: blockNumber })}\n    </Text>\n    <Link external href={getBscScanBlockNumberUrl(blockNumber)}>\n      {t('View on BscScan')}\n    </Link>\n  </>\n)\n\nconst Wrapper: React.FC<TimerProps> = ({\n  timerStage,\n  minutes,\n  hours,\n  days,\n  blockNumber,\n  showTooltip = false,\n  HeadingTextComponent = DefaultHeadingTextComponent,\n  BodyTextComponent = DefaultBodyTextComponent,\n}) => {\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipContent blockNumber={blockNumber} t={t} />, {\n    placement: 'bottom',\n  })\n  const shouldDisplayTooltip = showTooltip && tooltipVisible\n  return (\n    <Flex alignItems=\"flex-end\" position=\"relative\">\n      <BodyTextComponent mr=\"16px\">{timerStage}</BodyTextComponent>\n      <div ref={targetRef}>\n        <Timer\n          minutes={minutes}\n          hours={hours}\n          days={days}\n          HeadingTextComponent={HeadingTextComponent}\n          BodyTextComponent={BodyTextComponent}\n          showTooltip={showTooltip}\n        />\n        {shouldDisplayTooltip && tooltip}\n      </div>\n    </Flex>\n  )\n}\n\nexport default Wrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\ninterface StyledSvgProps {\n  svgFill?: string\n}\n\nconst sharedStyles = `\nsvg {\n    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);\n  }\n`\n\nconst CurvedSvg: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 1200 66\" {...props}>\n      <g filter=\"url(#intersect_filter0_d)\">\n        <path d=\"M1200 23.9232C1050.53 39.6633 837.034 49.5127 600 49.5127C362.965 49.5127 149.466 39.6633 0 23.9232V0.512695H1200V23.9232Z\" />\n      </g>\n      <defs>\n        <filter\n          id=\"intersect_filter0_d\"\n          x=\"-12\"\n          y=\"-7.4873\"\n          width=\"1224\"\n          height=\"73\"\n          filterUnits=\"userSpaceOnUse\"\n          colorInterpolationFilters=\"sRGB\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n          <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\n          <feOffset dy=\"4\" />\n          <feGaussianBlur stdDeviation=\"6\" />\n          <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0\" />\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\" />\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\" />\n        </filter>\n      </defs>\n    </Svg>\n  )\n}\n\nexport default CurvedSvg\n\nexport const CurvedSvgTop = styled(CurvedSvg)<StyledSvgProps>`\n  ${sharedStyles}\n  transform: rotate(180deg);\n  margin-bottom: -2px;\n  fill: ${({ svgFill, theme }) => svgFill || theme.colors.background};\n`\n\nexport const CurvedSvgBottom = styled(CurvedSvg)<StyledSvgProps>`\n  ${sharedStyles}\n  fill: ${({ svgFill, theme }) => svgFill || theme.colors.background};\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CurvedSvgTop, CurvedSvgBottom } from './svg/CurvedSvg'\n\ninterface CurvedDividerProps extends WrapperProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n}\ninterface WrapperProps {\n  index: number\n  curvePosition?: 'top' | 'bottom'\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  z-index: ${({ index }) => index};\n  margin: ${({ curvePosition }) => (curvePosition === 'top' ? '-32px' : '32px')} 0 0;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: ${({ curvePosition }) => (curvePosition === 'top' ? '-40px' : '40px')} 0 0;\n  }\n`\n\nconst ComponentWrapper = styled.div<{ index: number }>`\n  z-index: ${({ index }) => index + 1};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({ svgFill, index, curvePosition, dividerComponent }) => {\n  return (\n    <Wrapper index={index} curvePosition={curvePosition}>\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\n      {curvePosition === 'top' ? (\n        <CurvedSvgTop svgFill={svgFill} width=\"100%\" />\n      ) : (\n        <CurvedSvgBottom svgFill={svgFill} width=\"100%\" />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default CurvedDivider\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, FlexProps } from '@pancakeswap/uikit'\nimport Container from 'components/layout/Container'\nimport CurvedDivider from './CurvedDivider'\n\ninterface PageSectionProps extends BackgroundColorProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  hasCurvedDivider?: boolean\n  curvePosition?: 'top' | 'bottom'\n}\n\ninterface BackgroundColorProps extends FlexProps {\n  index: number\n  background?: string\n  hasZeroMargin?: boolean\n}\n\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\n  position: relative;\n  flex-direction: column;\n  z-index: ${({ index }) => index - 1};\n  background: ${({ background, theme }) => background || theme.colors.background};\n  padding: 48px 0;\n  margin: ${({ hasZeroMargin }) => (hasZeroMargin ? '0' : '-32px')} 0;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: ${({ hasZeroMargin }) => (hasZeroMargin ? '0' : '-52px')} 0;\n  }\n  @media screen and (min-width: 1920px) {\n    margin: ${({ hasZeroMargin }) => (hasZeroMargin ? '0' : '-72px')} 0;\n  }\n`\n\nconst ChildrenWrapper = styled(Container)`\n  min-height: auto;\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 48px;\n    padding-bottom: 48px;\n  }\n`\n\nconst PageSection: React.FC<PageSectionProps> = ({\n  children,\n  background,\n  svgFill,\n  index = 1,\n  dividerComponent,\n  curvePosition = 'bottom',\n  hasCurvedDivider = true,\n  ...props\n}) => {\n  const hasZeroMargin = !hasCurvedDivider || curvePosition === 'top'\n\n  return (\n    <>\n      {hasCurvedDivider && curvePosition === 'top' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          curvePosition={curvePosition}\n          dividerComponent={dividerComponent}\n        />\n      )}\n      <BackgroundColor background={background} index={index} hasZeroMargin={hasZeroMargin} {...props}>\n        <ChildrenWrapper>{children}</ChildrenWrapper>\n      </BackgroundColor>\n      {hasCurvedDivider && curvePosition === 'bottom' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          curvePosition={curvePosition}\n          dividerComponent={dividerComponent}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PageSection\n"],"sourceRoot":""}